[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.14.6","content-config-digest","4221e29916dbfe55","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"http://localhost:4321\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"never\",\"output\":\"static\",\"scopedStyleStrategy\":\"where\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"never\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"prefetch\":true,\"image\":{\"endpoint\":{\"route\":\"/_image\",\"entrypoint\":\"astro/assets/endpoint/dev\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[\"preview.aptos.dev\",\"aptos.dev\"],\"remotePatterns\":[{\"protocol\":\"https\"}],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[[null,{\"components\":{\"GraphQLEditor\":\"react\",\"Faucet\":\"react\"}}],[null,{\"components\":{\"GraphQLEditor\":\"react\",\"Faucet\":\"react\"}}],[null,{\"logger\":{\"options\":{\"dest\":{},\"level\":\"info\"},\"label\":\"astro-mermaid\"}}],null,null,null],\"rehypePlugins\":[null,null,[null,{\"logger\":{\"options\":{\"dest\":{},\"level\":\"info\"},\"label\":\"astro-mermaid\"}}],null,[null,{\"experimentalHeadingIdCompat\":false}],null,[null,{\"themes\":[{\"name\":\"Night Owl No Italics\",\"type\":\"dark\",\"colors\":{\"focusBorder\":\"#122d42\",\"foreground\":\"#d6deeb\",\"disabledForeground\":\"#cccccc80\",\"descriptionForeground\":\"#d6deebb3\",\"errorForeground\":\"#ef5350\",\"icon.foreground\":\"#c5c5c5\",\"contrastActiveBorder\":null,\"contrastBorder\":\"#122d42\",\"textBlockQuote.background\":\"#7f7f7f1a\",\"textBlockQuote.border\":\"#007acc80\",\"textCodeBlock.background\":\"#4f4f4f\",\"textLink.activeForeground\":\"#3794ff\",\"textLink.foreground\":\"#3794ff\",\"textPreformat.foreground\":\"#d7ba7d\",\"textSeparator.foreground\":\"#ffffff2e\",\"editor.background\":\"#23262f\",\"editor.foreground\":\"#d6deeb\",\"editorLineNumber.foreground\":\"#4b6479\",\"editorLineNumber.activeForeground\":\"#c5e4fd\",\"editorActiveLineNumber.foreground\":\"#c6c6c6\",\"editor.selectionBackground\":\"#1d3b53\",\"editor.inactiveSelectionBackground\":\"#7e57c25a\",\"editor.selectionHighlightBackground\":\"#5f7e9779\",\"editorError.foreground\":\"#ef5350\",\"editorWarning.foreground\":\"#b39554\",\"editorInfo.foreground\":\"#3794ff\",\"editorHint.foreground\":\"#eeeeeeb2\",\"problemsErrorIcon.foreground\":\"#ef5350\",\"problemsWarningIcon.foreground\":\"#b39554\",\"problemsInfoIcon.foreground\":\"#3794ff\",\"editor.findMatchBackground\":\"#5f7e9779\",\"editor.findMatchHighlightBackground\":\"#1085bb5d\",\"editor.findRangeHighlightBackground\":\"#3a3d4166\",\"editorLink.activeForeground\":\"#4e94ce\",\"editorLightBulb.foreground\":\"#ffcc00\",\"editorLightBulbAutoFix.foreground\":\"#75beff\",\"diffEditor.insertedTextBackground\":\"#99b76d23\",\"diffEditor.insertedTextBorder\":\"#c5e47833\",\"diffEditor.removedTextBackground\":\"#ef535033\",\"diffEditor.removedTextBorder\":\"#ef53504d\",\"diffEditor.insertedLineBackground\":\"#9bb95533\",\"diffEditor.removedLineBackground\":\"#ff000033\",\"editorStickyScroll.background\":\"#011627\",\"editorStickyScrollHover.background\":\"#2a2d2e\",\"editorInlayHint.background\":\"#5f7e97cc\",\"editorInlayHint.foreground\":\"#ffffff\",\"editorInlayHint.typeBackground\":\"#5f7e97cc\",\"editorInlayHint.typeForeground\":\"#ffffff\",\"editorInlayHint.parameterBackground\":\"#5f7e97cc\",\"editorInlayHint.parameterForeground\":\"#ffffff\",\"editorPane.background\":\"#011627\",\"editorGroup.emptyBackground\":\"#011627\",\"editorGroup.focusedEmptyBorder\":null,\"editorGroupHeader.tabsBackground\":\"var(--sl-color-black)\",\"editorGroupHeader.tabsBorder\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"editorGroupHeader.noTabsBackground\":\"#011627\",\"editorGroupHeader.border\":null,\"editorGroup.border\":\"#011627\",\"editorGroup.dropBackground\":\"#7e57c273\",\"editorGroup.dropIntoPromptForeground\":\"#d6deeb\",\"editorGroup.dropIntoPromptBackground\":\"#021320\",\"editorGroup.dropIntoPromptBorder\":null,\"sideBySideEditor.horizontalBorder\":\"#011627\",\"sideBySideEditor.verticalBorder\":\"#011627\",\"scrollbar.shadow\":\"#010b14\",\"scrollbarSlider.background\":\"#ffffff17\",\"scrollbarSlider.hoverBackground\":\"#ffffff40\",\"scrollbarSlider.activeBackground\":\"#084d8180\",\"panel.background\":\"#011627\",\"panel.border\":\"#5f7e97\",\"panelTitle.activeBorder\":\"#5f7e97\",\"panelTitle.activeForeground\":\"#ffffffcc\",\"panelTitle.inactiveForeground\":\"#d6deeb80\",\"panelSectionHeader.background\":\"#80808051\",\"terminal.background\":\"#011627\",\"widget.shadow\":\"#011627\",\"editorWidget.background\":\"#021320\",\"editorWidget.foreground\":\"#d6deeb\",\"editorWidget.border\":\"#5f7e97\",\"quickInput.background\":\"#021320\",\"quickInput.foreground\":\"#d6deeb\",\"quickInputTitle.background\":\"#ffffff1a\",\"pickerGroup.foreground\":\"#d1aaff\",\"pickerGroup.border\":\"#011627\",\"editor.hoverHighlightBackground\":\"#7e57c25a\",\"editorHoverWidget.background\":\"#011627\",\"editorHoverWidget.foreground\":\"#d6deeb\",\"editorHoverWidget.border\":\"#5f7e97\",\"editorHoverWidget.statusBarBackground\":\"#011a2f\",\"titleBar.activeBackground\":\"var(--sl-color-black)\",\"titleBar.activeForeground\":\"var(--sl-color-text)\",\"titleBar.inactiveBackground\":\"#010e1a\",\"titleBar.inactiveForeground\":\"#eeefff99\",\"titleBar.border\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"toolbar.hoverBackground\":\"#5a5d5e50\",\"toolbar.activeBackground\":\"#63666750\",\"tab.activeBackground\":\"#0b2942\",\"tab.unfocusedActiveBackground\":\"#0b2942\",\"tab.inactiveBackground\":\"#01111d\",\"tab.unfocusedInactiveBackground\":\"#01111d\",\"tab.activeForeground\":\"var(--sl-color-text)\",\"tab.inactiveForeground\":\"#5f7e97\",\"tab.unfocusedActiveForeground\":\"#5f7e97\",\"tab.unfocusedInactiveForeground\":\"#5f7e97\",\"tab.hoverBackground\":null,\"tab.unfocusedHoverBackground\":null,\"tab.hoverForeground\":null,\"tab.unfocusedHoverForeground\":null,\"tab.border\":\"#272b3b\",\"tab.lastPinnedBorder\":\"#585858\",\"tab.activeBorder\":\"transparent\",\"tab.unfocusedActiveBorder\":\"#262a39\",\"tab.activeBorderTop\":\"var(--sl-color-accent-high)\",\"tab.unfocusedActiveBorderTop\":null,\"tab.hoverBorder\":null,\"tab.unfocusedHoverBorder\":null,\"tab.activeModifiedBorder\":\"#3399cc\",\"tab.inactiveModifiedBorder\":\"#3399cc80\",\"tab.unfocusedActiveModifiedBorder\":\"#3399cc80\",\"tab.unfocusedInactiveModifiedBorder\":\"#3399cc40\",\"badge.background\":\"#5f7e97\",\"badge.foreground\":\"#ffffff\",\"button.background\":\"#7e57c2cc\",\"button.foreground\":\"#ffffffcc\",\"button.border\":\"#122d42\",\"button.separator\":\"#ffffff52\",\"button.hoverBackground\":\"#7e57c2\",\"button.secondaryBackground\":\"#3a3d41\",\"button.secondaryForeground\":\"#ffffff\",\"button.secondaryHoverBackground\":\"#46494e\",\"dropdown.background\":\"#011627\",\"dropdown.foreground\":\"#ffffffcc\",\"dropdown.border\":\"#5f7e97\",\"list.activeSelectionBackground\":\"#234d708c\",\"list.activeSelectionForeground\":\"#ffffff\",\"tree.indentGuidesStroke\":\"#585858\",\"input.background\":\"#0b253a\",\"input.foreground\":\"#ffffffcc\",\"input.placeholderForeground\":\"#5f7e97\",\"inputOption.activeBorder\":\"#ffffffcc\",\"inputOption.hoverBackground\":\"#5a5d5e80\",\"inputOption.activeBackground\":\"#122d4266\",\"inputOption.activeForeground\":\"#ffffff\",\"inputValidation.infoBackground\":\"#00589ef2\",\"inputValidation.infoBorder\":\"#64b5f6\",\"inputValidation.warningBackground\":\"#675700f2\",\"inputValidation.warningBorder\":\"#ffca28\",\"inputValidation.errorBackground\":\"#ab0300f2\",\"inputValidation.errorBorder\":\"#ef5350\",\"keybindingLabel.background\":\"#8080802b\",\"keybindingLabel.foreground\":\"#cccccc\",\"keybindingLabel.border\":\"#33333399\",\"keybindingLabel.bottomBorder\":\"#44444499\",\"menu.foreground\":\"#ffffffcc\",\"menu.background\":\"#011627\",\"menu.selectionForeground\":\"#ffffff\",\"menu.selectionBackground\":\"#234d708c\",\"menu.separatorBackground\":\"#606060\",\"editor.snippetTabstopHighlightBackground\":\"#7c7c74c\",\"editor.snippetFinalTabstopHighlightBorder\":\"#525252\",\"terminal.ansiBlack\":\"#011627\",\"terminal.ansiRed\":\"#ef5350\",\"terminal.ansiGreen\":\"#22da6e\",\"terminal.ansiYellow\":\"#c5e478\",\"terminal.ansiBlue\":\"#82aaff\",\"terminal.ansiMagenta\":\"#c792ea\",\"terminal.ansiCyan\":\"#21c7a8\",\"terminal.ansiWhite\":\"#ffffff\",\"terminal.ansiBrightBlack\":\"#575656\",\"terminal.ansiBrightRed\":\"#ef5350\",\"terminal.ansiBrightGreen\":\"#22da6e\",\"terminal.ansiBrightYellow\":\"#ffeb95\",\"terminal.ansiBrightBlue\":\"#82aaff\",\"terminal.ansiBrightMagenta\":\"#c792ea\",\"terminal.ansiBrightCyan\":\"#7fdbca\",\"terminal.ansiBrightWhite\":\"#ffffff\",\"selection.background\":\"#4373c2\",\"input.border\":\"#5f7e97\",\"punctuation.definition.generic.begin.html\":\"#ef5350f2\",\"progress.background\":\"#7e57c2\",\"breadcrumb.foreground\":\"#a599e9\",\"breadcrumb.focusForeground\":\"#ffffff\",\"breadcrumb.activeSelectionForeground\":\"#ffffff\",\"breadcrumbPicker.background\":\"#001122\",\"list.invalidItemForeground\":\"#975f94\",\"list.dropBackground\":\"#011627\",\"list.focusBackground\":\"#010d18\",\"list.focusForeground\":\"#ffffff\",\"list.highlightForeground\":\"#ffffff\",\"list.hoverBackground\":\"#011627\",\"list.hoverForeground\":\"#ffffff\",\"list.inactiveSelectionBackground\":\"#0e293f\",\"list.inactiveSelectionForeground\":\"#5f7e97\",\"activityBar.background\":\"#011627\",\"activityBar.dropBackground\":\"#5f7e97\",\"activityBar.foreground\":\"#5f7e97\",\"activityBar.border\":\"#011627\",\"activityBarBadge.background\":\"#44596b\",\"activityBarBadge.foreground\":\"#ffffff\",\"sideBar.background\":\"#011627\",\"sideBar.foreground\":\"#89a4bb\",\"sideBar.border\":\"#011627\",\"sideBarTitle.foreground\":\"#5f7e97\",\"sideBarSectionHeader.background\":\"#011627\",\"sideBarSectionHeader.foreground\":\"#5f7e97\",\"editorCursor.foreground\":\"#80a4c2\",\"editor.wordHighlightBackground\":\"#f6bbe533\",\"editor.wordHighlightStrongBackground\":\"#e2a2f433\",\"editor.lineHighlightBackground\":\"#0003\",\"editor.rangeHighlightBackground\":\"#7e57c25a\",\"editorIndentGuide.background\":\"#5e81ce52\",\"editorIndentGuide.activeBackground\":\"#7e97ac\",\"editorRuler.foreground\":\"#5e81ce52\",\"editorCodeLens.foreground\":\"#5e82ceb4\",\"editorBracketMatch.background\":\"#5f7e974d\",\"editorOverviewRuler.currentContentForeground\":\"#7e57c2\",\"editorOverviewRuler.incomingContentForeground\":\"#7e57c2\",\"editorOverviewRuler.commonContentForeground\":\"#7e57c2\",\"editorGutter.background\":\"#011627\",\"editorGutter.modifiedBackground\":\"#e2b93d\",\"editorGutter.addedBackground\":\"#9ccc65\",\"editorGutter.deletedBackground\":\"#ef5350\",\"editorSuggestWidget.background\":\"#2c3043\",\"editorSuggestWidget.border\":\"#2b2f40\",\"editorSuggestWidget.foreground\":\"#d6deeb\",\"editorSuggestWidget.highlightForeground\":\"#ffffff\",\"editorSuggestWidget.selectedBackground\":\"#5f7e97\",\"debugExceptionWidget.background\":\"#011627\",\"debugExceptionWidget.border\":\"#5f7e97\",\"editorMarkerNavigation.background\":\"#0b2942\",\"editorMarkerNavigationError.background\":\"#ef5350\",\"editorMarkerNavigationWarning.background\":\"#ffca28\",\"peekView.border\":\"#5f7e97\",\"peekViewEditor.background\":\"#011627\",\"peekViewEditor.matchHighlightBackground\":\"#7e57c25a\",\"peekViewResult.background\":\"#011627\",\"peekViewResult.fileForeground\":\"#5f7e97\",\"peekViewResult.lineForeground\":\"#5f7e97\",\"peekViewResult.matchHighlightBackground\":\"#ffffffcc\",\"peekViewResult.selectionBackground\":\"#2e3250\",\"peekViewResult.selectionForeground\":\"#5f7e97\",\"peekViewTitle.background\":\"#011627\",\"peekViewTitleDescription.foreground\":\"#697098\",\"peekViewTitleLabel.foreground\":\"#5f7e97\",\"merge.currentHeaderBackground\":\"#5f7e97\",\"merge.incomingHeaderBackground\":\"#7e57c25a\",\"statusBar.background\":\"#011627\",\"statusBar.foreground\":\"#5f7e97\",\"statusBar.border\":\"#262a39\",\"statusBar.debuggingBackground\":\"#202431\",\"statusBar.debuggingBorder\":\"#1f2330\",\"statusBar.noFolderBackground\":\"#011627\",\"statusBar.noFolderBorder\":\"#25293a\",\"statusBarItem.activeBackground\":\"#202431\",\"statusBarItem.hoverBackground\":\"#202431\",\"statusBarItem.prominentBackground\":\"#202431\",\"statusBarItem.prominentHoverBackground\":\"#202431\",\"notifications.background\":\"#01111d\",\"notifications.border\":\"#262a39\",\"notificationCenter.border\":\"#262a39\",\"notificationToast.border\":\"#262a39\",\"notifications.foreground\":\"#ffffffcc\",\"notificationLink.foreground\":\"#80cbc4\",\"extensionButton.prominentForeground\":\"#ffffffcc\",\"extensionButton.prominentBackground\":\"#7e57c2cc\",\"extensionButton.prominentHoverBackground\":\"#7e57c2\",\"terminal.selectionBackground\":\"#1b90dd4d\",\"terminalCursor.background\":\"#234d70\",\"debugToolBar.background\":\"#011627\",\"welcomePage.buttonBackground\":\"#011627\",\"welcomePage.buttonHoverBackground\":\"#011627\",\"walkThrough.embeddedEditorBackground\":\"#011627\",\"gitDecoration.modifiedResourceForeground\":\"#a2bffc\",\"gitDecoration.deletedResourceForeground\":\"#ef535090\",\"gitDecoration.untrackedResourceForeground\":\"#c5e478ff\",\"gitDecoration.ignoredResourceForeground\":\"#395a75\",\"gitDecoration.conflictingResourceForeground\":\"#ffeb95cc\",\"source.elm\":\"#5f7e97\",\"string.quoted.single.js\":\"#ffffff\",\"meta.objectliteral.js\":\"#82aaff\"},\"fg\":\"#d6deeb\",\"bg\":\"#23262f\",\"semanticHighlighting\":false,\"settings\":[{\"name\":\"Changed\",\"scope\":[\"markup.changed\",\"meta.diff.header.git\",\"meta.diff.header.from-file\",\"meta.diff.header.to-file\"],\"settings\":{\"foreground\":\"#a2bffc\"}},{\"name\":\"Deleted\",\"scope\":[\"markup.deleted.diff\"],\"settings\":{\"foreground\":\"#f27775fe\"}},{\"name\":\"Inserted\",\"scope\":[\"markup.inserted.diff\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Global settings\",\"settings\":{\"background\":\"#011627\",\"foreground\":\"#d6deeb\"}},{\"name\":\"Comment\",\"scope\":[\"comment\"],\"settings\":{\"foreground\":\"#919f9f\",\"fontStyle\":\"\"}},{\"name\":\"String\",\"scope\":[\"string\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"String Quoted\",\"scope\":[\"string.quoted\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"Support Constant Math\",\"scope\":[\"support.constant.math\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Number\",\"scope\":[\"constant.numeric\",\"constant.character.numeric\"],\"settings\":{\"foreground\":\"#f78c6c\",\"fontStyle\":\"\"}},{\"name\":\"Built-in constant\",\"scope\":[\"constant.language\",\"punctuation.definition.constant\",\"variable.other.constant\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"User-defined constant\",\"scope\":[\"constant.character\",\"constant.other\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Constant Character Escape\",\"scope\":[\"constant.character.escape\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"RegExp String\",\"scope\":[\"string.regexp\",\"string.regexp keyword.other\"],\"settings\":{\"foreground\":\"#5ca7e4\"}},{\"name\":\"Comma in functions\",\"scope\":[\"meta.function punctuation.separator.comma\"],\"settings\":{\"foreground\":\"#889fb2\"}},{\"name\":\"Variable\",\"scope\":[\"variable\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Keyword\",\"scope\":[\"punctuation.accessor\",\"keyword\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Storage\",\"scope\":[\"storage\",\"meta.var.expr\",\"meta.class meta.method.declaration meta.var.expr storage.type.js\",\"storage.type.property.js\",\"storage.type.property.ts\",\"storage.type.property.tsx\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type.function.arrow.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Class name\",\"scope\":[\"entity.name.class\",\"meta.class entity.name.type.class\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Inherited class\",\"scope\":[\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Function name\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Meta Tag\",\"scope\":[\"punctuation.definition.tag\",\"meta.tag\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"HTML Tag names\",\"scope\":[\"entity.name.tag\",\"meta.tag.other.html\",\"meta.tag.other.js\",\"meta.tag.other.tsx\",\"entity.name.tag.tsx\",\"entity.name.tag.js\",\"entity.name.tag\",\"meta.tag.js\",\"meta.tag.tsx\",\"meta.tag.html\"],\"settings\":{\"foreground\":\"#caece6\",\"fontStyle\":\"\"}},{\"name\":\"Tag attribute\",\"scope\":[\"entity.other.attribute-name\"],\"settings\":{\"fontStyle\":\"\",\"foreground\":\"#c5e478\"}},{\"name\":\"Entity Name Tag Custom\",\"scope\":[\"entity.name.tag.custom\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Library (function & constant)\",\"scope\":[\"support.function\",\"support.constant\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Support Constant Property Value meta\",\"scope\":[\"support.constant.meta.property-value\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Library class/type\",\"scope\":[\"support.type\",\"support.class\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Support Variable DOM\",\"scope\":[\"support.variable.dom\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Invalid\",\"scope\":[\"invalid\"],\"settings\":{\"background\":\"#ff2c83\",\"foreground\":\"#ffffff\"}},{\"name\":\"Invalid deprecated\",\"scope\":[\"invalid.deprecated\"],\"settings\":{\"foreground\":\"#ffffff\",\"background\":\"#d3423e\"}},{\"name\":\"Keyword Operator\",\"scope\":[\"keyword.operator\"],\"settings\":{\"foreground\":\"#7fdbca\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Relational\",\"scope\":[\"keyword.operator.relational\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Assignment\",\"scope\":[\"keyword.operator.assignment\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Arithmetic\",\"scope\":[\"keyword.operator.arithmetic\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Bitwise\",\"scope\":[\"keyword.operator.bitwise\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Increment\",\"scope\":[\"keyword.operator.increment\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Keyword Operator Ternary\",\"scope\":[\"keyword.operator.ternary\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Double-Slashed Comment\",\"scope\":[\"comment.line.double-slash\"],\"settings\":{\"foreground\":\"#919f9f\"}},{\"name\":\"Object\",\"scope\":[\"object\"],\"settings\":{\"foreground\":\"#cdebf7\"}},{\"name\":\"Null\",\"scope\":[\"constant.language.null\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Meta Brace\",\"scope\":[\"meta.brace\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Meta Delimiter Period\",\"scope\":[\"meta.delimiter.period\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Punctuation Definition String\",\"scope\":[\"punctuation.definition.string\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Punctuation Definition String Markdown\",\"scope\":[\"punctuation.definition.string.begin.markdown\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Boolean\",\"scope\":[\"constant.language.boolean\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Object Comma\",\"scope\":[\"object.comma\"],\"settings\":{\"foreground\":\"#ffffff\"}},{\"name\":\"Variable Parameter Function\",\"scope\":[\"variable.parameter.function\"],\"settings\":{\"foreground\":\"#7fdbca\",\"fontStyle\":\"\"}},{\"name\":\"Support Type Property Name & entity name tags\",\"scope\":[\"support.type.vendor.property-name\",\"support.constant.vendor.property-value\",\"support.type.property-name\",\"meta.property-list entity.name.tag\"],\"settings\":{\"foreground\":\"#80cbc4\",\"fontStyle\":\"\"}},{\"name\":\"Entity Name tag reference in stylesheets\",\"scope\":[\"meta.property-list entity.name.tag.reference\"],\"settings\":{\"foreground\":\"#57eaf1\"}},{\"name\":\"Constant Other Color RGB Value Punctuation Definition Constant\",\"scope\":[\"constant.other.color.rgb-value punctuation.definition.constant\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Constant Other Color\",\"scope\":[\"constant.other.color\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Keyword Other Unit\",\"scope\":[\"keyword.other.unit\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Meta Selector\",\"scope\":[\"meta.selector\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Entity Other Attribute Name Id\",\"scope\":[\"entity.other.attribute-name.id\"],\"settings\":{\"foreground\":\"#fad430\"}},{\"name\":\"Meta Property Name\",\"scope\":[\"meta.property-name\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Doctypes\",\"scope\":[\"entity.name.tag.doctype\",\"meta.tag.sgml.doctype\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Punctuation Definition Parameters\",\"scope\":[\"punctuation.definition.parameters\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Keyword Control Operator\",\"scope\":[\"keyword.control.operator\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Keyword Operator Logical\",\"scope\":[\"keyword.operator.logical\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Variable Instances\",\"scope\":[\"variable.instance\",\"variable.other.instance\",\"variable.readwrite.instance\",\"variable.other.readwrite.instance\",\"variable.other.property\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Variable Property Other object property\",\"scope\":[\"variable.other.object.property\"],\"settings\":{\"foreground\":\"#faf39f\",\"fontStyle\":\"\"}},{\"name\":\"Variable Property Other object\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Entity Name Function\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#82aaff\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Comparison, returns, imports, and Keyword Operator Ruby\",\"scope\":[\"keyword.control.conditional.js\",\"keyword.operator.comparison\",\"keyword.control.flow.js\",\"keyword.control.flow.ts\",\"keyword.control.flow.tsx\",\"keyword.control.ruby\",\"keyword.control.def.ruby\",\"keyword.control.loop.js\",\"keyword.control.loop.ts\",\"keyword.control.import.js\",\"keyword.control.import.ts\",\"keyword.control.import.tsx\",\"keyword.control.from.js\",\"keyword.control.from.ts\",\"keyword.control.from.tsx\",\"keyword.control.conditional.js\",\"keyword.control.conditional.ts\",\"keyword.control.switch.js\",\"keyword.control.switch.ts\",\"keyword.operator.instanceof.js\",\"keyword.operator.expression.instanceof.ts\",\"keyword.operator.expression.instanceof.tsx\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Support Constant, `new` keyword, Special Method Keyword, `debugger`, other keywords\",\"scope\":[\"support.constant\",\"keyword.other.special-method\",\"keyword.other.new\",\"keyword.other.debugger\",\"keyword.control\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Support Function\",\"scope\":[\"support.function\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Invalid Broken\",\"scope\":[\"invalid.broken\"],\"settings\":{\"foreground\":\"#989da0\",\"background\":\"#F78C6C\"}},{\"name\":\"Invalid Unimplemented\",\"scope\":[\"invalid.unimplemented\"],\"settings\":{\"background\":\"#8BD649\",\"foreground\":\"#ffffff\"}},{\"name\":\"Invalid Illegal\",\"scope\":[\"invalid.illegal\"],\"settings\":{\"foreground\":\"#ffffff\",\"background\":\"#ec5f67\"}},{\"name\":\"Language Variable\",\"scope\":[\"variable.language\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Support Variable Property\",\"scope\":[\"support.variable.property\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Variable Function\",\"scope\":[\"variable.function\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Variable Interpolation\",\"scope\":[\"variable.interpolation\"],\"settings\":{\"foreground\":\"#ef787f\"}},{\"name\":\"Meta Function Call\",\"scope\":[\"meta.function-call\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Punctuation Section Embedded\",\"scope\":[\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#e2817f\"}},{\"name\":\"Punctuation Tweaks\",\"scope\":[\"punctuation.terminator.expression\",\"punctuation.definition.arguments\",\"punctuation.definition.array\",\"punctuation.section.array\",\"meta.array\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"More Punctuation Tweaks\",\"scope\":[\"punctuation.definition.list.begin\",\"punctuation.definition.list.end\",\"punctuation.separator.arguments\",\"punctuation.definition.list\"],\"settings\":{\"foreground\":\"#d9f5dd\"}},{\"name\":\"Template Strings\",\"scope\":[\"string.template meta.template.expression\"],\"settings\":{\"foreground\":\"#e2817f\"}},{\"name\":\"Backtics(``) in Template Strings\",\"scope\":[\"string.template punctuation.definition.string\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Italics\",\"scope\":[\"italic\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"italic\"}},{\"name\":\"Bold\",\"scope\":[\"bold\"],\"settings\":{\"foreground\":\"#c5e478\",\"fontStyle\":\"bold\"}},{\"name\":\"Quote\",\"scope\":[\"quote\"],\"settings\":{\"foreground\":\"#969bb7\",\"fontStyle\":\"\"}},{\"name\":\"Raw Code\",\"scope\":[\"raw\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"CoffeScript Variable Assignment\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#31e1eb\"}},{\"name\":\"CoffeScript Parameter Function\",\"scope\":[\"variable.parameter.function.coffee\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"CoffeeScript Assignments\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"C# Readwrite Variables\",\"scope\":[\"variable.other.readwrite.cs\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C# Classes & Storage types\",\"scope\":[\"entity.name.type.class.cs\",\"storage.type.cs\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"C# Namespaces\",\"scope\":[\"entity.name.type.namespace.cs\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"C# Unquoted String Zone\",\"scope\":[\"string.unquoted.preprocessor.message.cs\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C# Region\",\"scope\":[\"punctuation.separator.hash.cs\",\"keyword.preprocessor.region.cs\",\"keyword.preprocessor.endregion.cs\"],\"settings\":{\"foreground\":\"#ffcb8b\",\"fontStyle\":\"bold\"}},{\"name\":\"C# Other Variables\",\"scope\":[\"variable.other.object.cs\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"C# Enum\",\"scope\":[\"entity.name.type.enum.cs\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Dart String\",\"scope\":[\"string.interpolated.single.dart\",\"string.interpolated.double.dart\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Dart Class\",\"scope\":[\"support.class.dart\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Tag names in Stylesheets\",\"scope\":[\"entity.name.tag.css\",\"entity.name.tag.less\",\"entity.name.tag.custom.css\",\"support.constant.property-value.css\"],\"settings\":{\"foreground\":\"#ff6d6d\",\"fontStyle\":\"\"}},{\"name\":\"Wildcard(*) selector in Stylesheets\",\"scope\":[\"entity.name.tag.wildcard.css\",\"entity.name.tag.wildcard.less\",\"entity.name.tag.wildcard.scss\",\"entity.name.tag.wildcard.sass\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"CSS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Attribute Name for CSS\",\"scope\":[\"meta.attribute-selector.css entity.other.attribute-name.attribute\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Elixir Classes\",\"scope\":[\"source.elixir support.type.elixir\",\"source.elixir meta.module.elixir entity.name.class.elixir\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Elixir Functions\",\"scope\":[\"source.elixir entity.name.function\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir Constants\",\"scope\":[\"source.elixir constant.other.symbol.elixir\",\"source.elixir constant.other.keywords.elixir\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Elixir String Punctuations\",\"scope\":[\"source.elixir punctuation.definition.string\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir\",\"scope\":[\"source.elixir variable.other.readwrite.module.elixir\",\"source.elixir variable.other.readwrite.module.elixir punctuation.definition.variable.elixir\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Elixir Binary Punctuations\",\"scope\":[\"source.elixir .punctuation.binary.elixir\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"Closure Constant Keyword\",\"scope\":[\"constant.keyword.clojure\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Go Function Calls\",\"scope\":[\"source.go meta.function-call.go\"],\"settings\":{\"foreground\":\"#dddddd\"}},{\"name\":\"Go Keywords\",\"scope\":[\"source.go keyword.package.go\",\"source.go keyword.import.go\",\"source.go keyword.function.go\",\"source.go keyword.type.go\",\"source.go keyword.struct.go\",\"source.go keyword.interface.go\",\"source.go keyword.const.go\",\"source.go keyword.var.go\",\"source.go keyword.map.go\",\"source.go keyword.channel.go\",\"source.go keyword.control.go\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"Go Constants e.g. nil, string format (%s, %d, etc.)\",\"scope\":[\"source.go constant.language.go\",\"source.go constant.other.placeholder.go\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"C++ Functions\",\"scope\":[\"entity.name.function.preprocessor.cpp\",\"entity.scope.name.cpp\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"C++ Meta Namespace\",\"scope\":[\"meta.namespace-block.cpp\"],\"settings\":{\"foreground\":\"#e0dec6\"}},{\"name\":\"C++ Language Primitive Storage\",\"scope\":[\"storage.type.language.primitive.cpp\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"C++ Preprocessor Macro\",\"scope\":[\"meta.preprocessor.macro.cpp\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"C++ Variable Parameter\",\"scope\":[\"variable.parameter\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Powershell Variables\",\"scope\":[\"variable.other.readwrite.powershell\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Powershell Function\",\"scope\":[\"support.function.powershell\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"ID Attribute Name in HTML\",\"scope\":[\"entity.other.attribute-name.id.html\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"HTML Punctuation Definition Tag\",\"scope\":[\"punctuation.definition.tag.html\"],\"settings\":{\"foreground\":\"#6ae9f0\"}},{\"name\":\"HTML Doctype\",\"scope\":[\"meta.tag.sgml.doctype.html\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Classes\",\"scope\":[\"meta.class entity.name.type.class.js\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"JavaScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.js\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"JavaScript Terminator\",\"scope\":[\"terminator.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Meta Punctuation Definition\",\"scope\":[\"meta.js punctuation.definition.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Entity Names in Code Documentations\",\"scope\":[\"entity.name.type.instance.jsdoc\",\"entity.name.type.instance.phpdoc\"],\"settings\":{\"foreground\":\"#889fb2\"}},{\"name\":\"Other Variables in Code Documentations\",\"scope\":[\"variable.other.jsdoc\",\"variable.other.phpdoc\"],\"settings\":{\"foreground\":\"#78ccf0\"}},{\"name\":\"JavaScript module imports and exports\",\"scope\":[\"variable.other.meta.import.js\",\"meta.import.js variable.other\",\"variable.other.meta.export.js\",\"meta.export.js variable.other\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Variable Parameter Function\",\"scope\":[\"variable.parameter.function.js\"],\"settings\":{\"foreground\":\"#8b96ea\"}},{\"name\":\"JavaScript[React] Variable Other Object\",\"scope\":[\"variable.other.object.js\",\"variable.other.object.jsx\",\"variable.object.property.js\",\"variable.object.property.jsx\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Variables\",\"scope\":[\"variable.js\",\"variable.other.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JavaScript Entity Name Type\",\"scope\":[\"entity.name.type.js\",\"entity.name.type.module.js\"],\"settings\":{\"foreground\":\"#ffcb8b\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Support Classes\",\"scope\":[\"support.class.js\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"JSON Property Names\",\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"JSON Support Constants\",\"scope\":[\"support.constant.json\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"JSON Property values (string)\",\"scope\":[\"meta.structure.dictionary.value.json string.quoted.double\"],\"settings\":{\"foreground\":\"#c789d6\"}},{\"name\":\"Strings in JSON values\",\"scope\":[\"string.quoted.double.json punctuation.definition.string.json\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Specific JSON Property values like null\",\"scope\":[\"meta.structure.dictionary.json meta.structure.dictionary.value constant.language\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"JavaScript Other Variable\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Ruby Variables\",\"scope\":[\"variable.other.ruby\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Ruby Class\",\"scope\":[\"entity.name.type.class.ruby\"],\"settings\":{\"foreground\":\"#ecc48d\"}},{\"name\":\"Ruby Hashkeys\",\"scope\":[\"constant.language.symbol.hashkey.ruby\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"LESS Tag names\",\"scope\":[\"entity.name.tag.less\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"LESS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"Attribute Name for LESS\",\"scope\":[\"meta.attribute-selector.less entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Markdown Headings\",\"scope\":[\"markup.heading.markdown\",\"markup.heading.setext.1.markdown\",\"markup.heading.setext.2.markdown\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown Italics\",\"scope\":[\"markup.italic.markdown\"],\"settings\":{\"foreground\":\"#c792ea\",\"fontStyle\":\"italic\"}},{\"name\":\"Markdown Bold\",\"scope\":[\"markup.bold.markdown\"],\"settings\":{\"foreground\":\"#c5e478\",\"fontStyle\":\"bold\"}},{\"name\":\"Markdown Quote + others\",\"scope\":[\"markup.quote.markdown\"],\"settings\":{\"foreground\":\"#969bb7\",\"fontStyle\":\"\"}},{\"name\":\"Markdown Raw Code + others\",\"scope\":[\"markup.inline.raw.markdown\"],\"settings\":{\"foreground\":\"#80cbc4\"}},{\"name\":\"Markdown Links\",\"scope\":[\"markup.underline.link.markdown\",\"markup.underline.link.image.markdown\"],\"settings\":{\"foreground\":\"#ff869a\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Link Title and Description\",\"scope\":[\"string.other.link.title.markdown\",\"string.other.link.description.markdown\"],\"settings\":{\"foreground\":\"#d6deeb\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Punctuation\",\"scope\":[\"punctuation.definition.string.markdown\",\"punctuation.definition.string.begin.markdown\",\"punctuation.definition.string.end.markdown\",\"meta.link.inline.markdown punctuation.definition.string\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown MetaData Punctuation\",\"scope\":[\"punctuation.definition.metadata.markdown\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"Markdown List Punctuation\",\"scope\":[\"beginning.punctuation.definition.list.markdown\"],\"settings\":{\"foreground\":\"#82b1ff\"}},{\"name\":\"Markdown Inline Raw String\",\"scope\":[\"markup.inline.raw.string.markdown\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"PHP Variables\",\"scope\":[\"variable.other.php\"],\"settings\":{\"foreground\":\"#bec5d4\"}},{\"name\":\"Support Classes in PHP\",\"scope\":[\"support.class.php\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"Punctuations in PHP function calls\",\"scope\":[\"meta.function-call.php punctuation\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"PHP Global Variables\",\"scope\":[\"variable.other.global.php\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Declaration Punctuation in PHP Global Variables\",\"scope\":[\"variable.other.global.php punctuation.definition.variable\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Language Constants in Python\",\"scope\":[\"constant.language.python\"],\"settings\":{\"foreground\":\"#ff6a83\"}},{\"name\":\"Python Function Parameter and Arguments\",\"scope\":[\"variable.parameter.function.python\",\"meta.function-call.arguments.python\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Python Function Call\",\"scope\":[\"meta.function-call.python\",\"meta.function-call.generic.python\"],\"settings\":{\"foreground\":\"#b2ccd6\"}},{\"name\":\"Punctuations in Python\",\"scope\":[\"punctuation.python\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"Decorator Functions in Python\",\"scope\":[\"entity.name.function.decorator.python\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Python Language Variable\",\"scope\":[\"source.python variable.language.special\"],\"settings\":{\"foreground\":\"#8eace3\"}},{\"name\":\"Python import control keyword\",\"scope\":[\"keyword.control\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"SCSS Variable\",\"scope\":[\"variable.scss\",\"variable.sass\",\"variable.parameter.url.scss\",\"variable.parameter.url.sass\"],\"settings\":{\"foreground\":\"#c5e478\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#bec5d4\"}},{\"name\":\"Attribute Name for SASS\",\"scope\":[\"meta.attribute-selector.scss entity.other.attribute-name.attribute\",\"meta.attribute-selector.sass entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#f78c6c\"}},{\"name\":\"Tag names in SASS\",\"scope\":[\"entity.name.tag.scss\",\"entity.name.tag.sass\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"SASS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.scss\",\"keyword.other.unit.sass\"],\"settings\":{\"foreground\":\"#ffeb95\"}},{\"name\":\"TypeScript[React] Variables and Object Properties\",\"scope\":[\"variable.other.readwrite.alias.ts\",\"variable.other.readwrite.alias.tsx\",\"variable.other.readwrite.ts\",\"variable.other.readwrite.tsx\",\"variable.other.object.ts\",\"variable.other.object.tsx\",\"variable.object.property.ts\",\"variable.object.property.tsx\",\"variable.other.ts\",\"variable.other.tsx\",\"variable.tsx\",\"variable.ts\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript[React] Entity Name Types\",\"scope\":[\"entity.name.type.ts\",\"entity.name.type.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript[React] Node Classes\",\"scope\":[\"support.class.node.ts\",\"support.class.node.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"TypeScript[React] Entity Name Types as Parameters\",\"scope\":[\"meta.type.parameters.ts entity.name.type\",\"meta.type.parameters.tsx entity.name.type\"],\"settings\":{\"foreground\":\"#889fb2\"}},{\"name\":\"TypeScript[React] Import/Export Punctuations\",\"scope\":[\"meta.import.ts punctuation.definition.block\",\"meta.import.tsx punctuation.definition.block\",\"meta.export.ts punctuation.definition.block\",\"meta.export.tsx punctuation.definition.block\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.decorator punctuation.decorator.ts\",\"meta.decorator punctuation.decorator.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.tag.js meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"YAML Entity Name Tags\",\"scope\":[\"entity.name.tag.yaml\"],\"settings\":{\"foreground\":\"#7fdbca\"}},{\"name\":\"JavaScript Variable Other ReadWrite\",\"scope\":[\"variable.other.readwrite.js\",\"variable.parameter\"],\"settings\":{\"foreground\":\"#d7dbe0\"}},{\"name\":\"Support Class Component\",\"scope\":[\"support.class.component.js\",\"support.class.component.tsx\"],\"settings\":{\"foreground\":\"#f78c6c\",\"fontStyle\":\"\"}},{\"name\":\"Text nested in React tags\",\"scope\":[\"meta.jsx.children\",\"meta.jsx.children.js\",\"meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#d6deeb\"}},{\"name\":\"TypeScript Classes\",\"scope\":[\"meta.class entity.name.type.class.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript Entity Name Type\",\"scope\":[\"entity.name.type.tsx\",\"entity.name.type.module.tsx\"],\"settings\":{\"foreground\":\"#ffcb8b\"}},{\"name\":\"TypeScript Class Variable Keyword\",\"scope\":[\"meta.class.ts meta.var.expr.ts storage.type.ts\",\"meta.class.tsx meta.var.expr.tsx storage.type.tsx\"],\"settings\":{\"foreground\":\"#c792ea\"}},{\"name\":\"TypeScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.ts\",\"meta.method.declaration storage.type.tsx\"],\"settings\":{\"foreground\":\"#82aaff\"}},{\"name\":\"normalize font style of certain components\",\"scope\":[\"meta.property-list.css meta.property-value.css variable.other.less\",\"meta.property-list.scss variable.scss\",\"meta.property-list.sass variable.sass\",\"meta.brace\",\"keyword.operator.operator\",\"keyword.operator.or.regexp\",\"keyword.operator.expression.in\",\"keyword.operator.relational\",\"keyword.operator.assignment\",\"keyword.operator.comparison\",\"keyword.operator.type\",\"keyword.operator\",\"keyword\",\"punctuation.definintion.string\",\"punctuation\",\"variable.other.readwrite.js\",\"storage.type\",\"source.css\",\"string.quoted\"],\"settings\":{\"fontStyle\":\"\"}}],\"styleOverrides\":{\"frames\":{\"editorBackground\":\"var(--sl-color-gray-6)\",\"terminalBackground\":\"var(--sl-color-gray-6)\",\"editorActiveTabBackground\":\"var(--sl-color-gray-6)\",\"terminalTitlebarDotsForeground\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"terminalTitlebarDotsOpacity\":\"0.75\",\"inlineButtonForeground\":\"var(--sl-color-text)\",\"frameBoxShadowCssValue\":\"none\"},\"textMarkers\":{\"markBackground\":\"#ffffff17\",\"markBorderColor\":\"#ffffff40\"}}},{\"name\":\"Night Owl Light\",\"type\":\"light\",\"colors\":{\"focusBorder\":\"#93a1a1\",\"foreground\":\"#403f53\",\"disabledForeground\":\"#61616180\",\"descriptionForeground\":\"#403f53\",\"errorForeground\":\"#403f53\",\"icon.foreground\":\"#424242\",\"contrastActiveBorder\":null,\"contrastBorder\":null,\"textBlockQuote.background\":\"#7f7f7f1a\",\"textBlockQuote.border\":\"#007acc80\",\"textCodeBlock.background\":\"#dcdcdc66\",\"textLink.activeForeground\":\"#006ab1\",\"textLink.foreground\":\"#006ab1\",\"textPreformat.foreground\":\"#a31515\",\"textSeparator.foreground\":\"#0000002e\",\"editor.background\":\"#f6f7f9\",\"editor.foreground\":\"#403f53\",\"editorLineNumber.foreground\":\"#90a7b2\",\"editorLineNumber.activeForeground\":\"#403f53\",\"editorActiveLineNumber.foreground\":\"#0b216f\",\"editor.selectionBackground\":\"#e0e0e0\",\"editor.inactiveSelectionBackground\":\"#e0e0e080\",\"editor.selectionHighlightBackground\":\"#339cec33\",\"editorError.foreground\":\"#e64d49\",\"editorWarning.foreground\":\"#daaa01\",\"editorInfo.foreground\":\"#1a85ff\",\"editorHint.foreground\":\"#6c6c6c\",\"problemsErrorIcon.foreground\":\"#e64d49\",\"problemsWarningIcon.foreground\":\"#daaa01\",\"problemsInfoIcon.foreground\":\"#1a85ff\",\"editor.findMatchBackground\":\"#93a1a16c\",\"editor.findMatchHighlightBackground\":\"#93a1a16c\",\"editor.findRangeHighlightBackground\":\"#7497a633\",\"editorLink.activeForeground\":\"#0000ff\",\"editorLightBulb.foreground\":\"#ddb100\",\"editorLightBulbAutoFix.foreground\":\"#007acc\",\"diffEditor.insertedTextBackground\":\"#9ccc2c40\",\"diffEditor.insertedTextBorder\":null,\"diffEditor.removedTextBackground\":\"#ff000033\",\"diffEditor.removedTextBorder\":null,\"diffEditor.insertedLineBackground\":\"#9bb95533\",\"diffEditor.removedLineBackground\":\"#ff000033\",\"editorStickyScroll.background\":\"#fbfbfb\",\"editorStickyScrollHover.background\":\"#f0f0f0\",\"editorInlayHint.background\":\"#2aa29899\",\"editorInlayHint.foreground\":\"#f0f0f0\",\"editorInlayHint.typeBackground\":\"#2aa29899\",\"editorInlayHint.typeForeground\":\"#f0f0f0\",\"editorInlayHint.parameterBackground\":\"#2aa29899\",\"editorInlayHint.parameterForeground\":\"#f0f0f0\",\"editorPane.background\":\"#fbfbfb\",\"editorGroup.emptyBackground\":null,\"editorGroup.focusedEmptyBorder\":null,\"editorGroupHeader.tabsBackground\":\"var(--sl-color-gray-6)\",\"editorGroupHeader.tabsBorder\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"editorGroupHeader.noTabsBackground\":\"#f0f0f0\",\"editorGroupHeader.border\":null,\"editorGroup.border\":\"#f0f0f0\",\"editorGroup.dropBackground\":\"#2677cb2d\",\"editorGroup.dropIntoPromptForeground\":\"#403f53\",\"editorGroup.dropIntoPromptBackground\":\"#f0f0f0\",\"editorGroup.dropIntoPromptBorder\":null,\"sideBySideEditor.horizontalBorder\":\"#f0f0f0\",\"sideBySideEditor.verticalBorder\":\"#f0f0f0\",\"scrollbar.shadow\":\"#cccccc\",\"scrollbarSlider.background\":\"#0000001a\",\"scrollbarSlider.hoverBackground\":\"#00000055\",\"scrollbarSlider.activeBackground\":\"#00000099\",\"panel.background\":\"#f0f0f0\",\"panel.border\":\"#d9d9d9\",\"panelTitle.activeBorder\":\"#424242\",\"panelTitle.activeForeground\":\"#424242\",\"panelTitle.inactiveForeground\":\"#424242bf\",\"panelSectionHeader.background\":\"#80808051\",\"terminal.background\":\"#f6f6f6\",\"widget.shadow\":\"#d9d9d9\",\"editorWidget.background\":\"#f0f0f0\",\"editorWidget.foreground\":\"#403f53\",\"editorWidget.border\":\"#d9d9d9\",\"quickInput.background\":\"#f0f0f0\",\"quickInput.foreground\":\"#403f53\",\"quickInputTitle.background\":\"#0000000f\",\"pickerGroup.foreground\":\"#403f53\",\"pickerGroup.border\":\"#d9d9d9\",\"editor.hoverHighlightBackground\":\"#339cec33\",\"editorHoverWidget.background\":\"#f0f0f0\",\"editorHoverWidget.foreground\":\"#403f53\",\"editorHoverWidget.border\":\"#d9d9d9\",\"editorHoverWidget.statusBarBackground\":\"#e4e4e4\",\"titleBar.activeBackground\":\"var(--sl-color-gray-6)\",\"titleBar.activeForeground\":\"var(--sl-color-text)\",\"titleBar.inactiveBackground\":\"#f0f0f099\",\"titleBar.inactiveForeground\":\"#33333399\",\"titleBar.border\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"toolbar.hoverBackground\":\"#b8b8b850\",\"toolbar.activeBackground\":\"#a6a6a650\",\"tab.activeBackground\":\"#f6f6f6\",\"tab.unfocusedActiveBackground\":\"#f6f6f6\",\"tab.inactiveBackground\":\"#f0f0f0\",\"tab.unfocusedInactiveBackground\":\"#f0f0f0\",\"tab.activeForeground\":\"var(--sl-color-text)\",\"tab.inactiveForeground\":\"#403f53\",\"tab.unfocusedActiveForeground\":\"#403f53b3\",\"tab.unfocusedInactiveForeground\":\"#403f5380\",\"tab.hoverBackground\":null,\"tab.unfocusedHoverBackground\":null,\"tab.hoverForeground\":null,\"tab.unfocusedHoverForeground\":null,\"tab.border\":\"#f0f0f0\",\"tab.lastPinnedBorder\":\"#a9a9a9\",\"tab.activeBorder\":\"transparent\",\"tab.unfocusedActiveBorder\":null,\"tab.activeBorderTop\":\"var(--sl-color-accent)\",\"tab.unfocusedActiveBorderTop\":null,\"tab.hoverBorder\":null,\"tab.unfocusedHoverBorder\":null,\"tab.activeModifiedBorder\":\"#2aa298\",\"tab.inactiveModifiedBorder\":\"#93a1a1\",\"tab.unfocusedActiveModifiedBorder\":\"#93a1a1\",\"tab.unfocusedInactiveModifiedBorder\":\"#93a1a1\",\"badge.background\":\"#2aa298\",\"badge.foreground\":\"#f0f0f0\",\"button.background\":\"#2aa298\",\"button.foreground\":\"#f0f0f0\",\"button.border\":null,\"button.separator\":\"#f0f0f066\",\"button.hoverBackground\":\"#22827a\",\"button.secondaryBackground\":\"#5f6a79\",\"button.secondaryForeground\":\"#ffffff\",\"button.secondaryHoverBackground\":\"#4c5561\",\"dropdown.background\":\"#f0f0f0\",\"dropdown.foreground\":\"#403f53\",\"dropdown.border\":\"#d9d9d9\",\"list.activeSelectionBackground\":\"#d3e8f8\",\"list.activeSelectionForeground\":\"#403f53\",\"tree.indentGuidesStroke\":\"#a9a9a9\",\"input.background\":\"#f0f0f0\",\"input.foreground\":\"#403f53\",\"input.placeholderForeground\":\"#93a1a1\",\"inputOption.activeBorder\":\"#2aa298\",\"inputOption.hoverBackground\":\"#b8b8b850\",\"inputOption.activeBackground\":\"#93a1a133\",\"inputOption.activeForeground\":\"#000000\",\"inputValidation.infoBackground\":\"#f0f0f0\",\"inputValidation.infoBorder\":\"#d0d0d0\",\"inputValidation.warningBackground\":\"#daaa01\",\"inputValidation.warningBorder\":\"#e0af02\",\"inputValidation.errorBackground\":\"#f76e6e\",\"inputValidation.errorBorder\":\"#de3d3b\",\"keybindingLabel.background\":\"#dddddd66\",\"keybindingLabel.foreground\":\"#555555\",\"keybindingLabel.border\":\"#cccccc66\",\"keybindingLabel.bottomBorder\":\"#bbbbbb66\",\"menu.foreground\":\"#403f53\",\"menu.background\":\"#f0f0f0\",\"menu.selectionForeground\":\"#403f53\",\"menu.selectionBackground\":\"#d3e8f8\",\"menu.separatorBackground\":\"#d4d4d4\",\"editor.snippetTabstopHighlightBackground\":\"#0a326433\",\"editor.snippetFinalTabstopHighlightBorder\":\"#0a326480\",\"terminal.ansiBlack\":\"#403f53\",\"terminal.ansiRed\":\"#de3d3b\",\"terminal.ansiGreen\":\"#08916a\",\"terminal.ansiYellow\":\"#e0af02\",\"terminal.ansiBlue\":\"#288ed7\",\"terminal.ansiMagenta\":\"#d6438a\",\"terminal.ansiCyan\":\"#2aa298\",\"terminal.ansiWhite\":\"#f0f0f0\",\"terminal.ansiBrightBlack\":\"#403f53\",\"terminal.ansiBrightRed\":\"#de3d3b\",\"terminal.ansiBrightGreen\":\"#08916a\",\"terminal.ansiBrightYellow\":\"#daaa01\",\"terminal.ansiBrightBlue\":\"#288ed7\",\"terminal.ansiBrightMagenta\":\"#d6438a\",\"terminal.ansiBrightCyan\":\"#2aa298\",\"terminal.ansiBrightWhite\":\"#f0f0f0\",\"selection.background\":\"#7a8181ad\",\"notifications.background\":\"#f0f0f0\",\"notifications.foreground\":\"#403f53\",\"notificationLink.foreground\":\"#994cc3\",\"notifications.border\":\"#cccccc\",\"notificationCenter.border\":\"#cccccc\",\"notificationToast.border\":\"#cccccc\",\"notificationCenterHeader.foreground\":\"#403f53\",\"notificationCenterHeader.background\":\"#f0f0f0\",\"input.border\":\"#d9d9d9\",\"progressBar.background\":\"#2aa298\",\"list.inactiveSelectionBackground\":\"#e0e7ea\",\"list.inactiveSelectionForeground\":\"#403f53\",\"list.focusBackground\":\"#d3e8f8\",\"list.hoverBackground\":\"#d3e8f8\",\"list.focusForeground\":\"#403f53\",\"list.hoverForeground\":\"#403f53\",\"list.highlightForeground\":\"#403f53\",\"list.errorForeground\":\"#e64d49\",\"list.warningForeground\":\"#daaa01\",\"activityBar.background\":\"#f0f0f0\",\"activityBar.foreground\":\"#403f53\",\"activityBar.dropBackground\":\"#d0d0d0\",\"activityBarBadge.background\":\"#403f53\",\"activityBarBadge.foreground\":\"#f0f0f0\",\"activityBar.border\":\"#f0f0f0\",\"sideBar.background\":\"#f0f0f0\",\"sideBar.foreground\":\"#403f53\",\"sideBarTitle.foreground\":\"#403f53\",\"sideBar.border\":\"#f0f0f0\",\"editorGroup.background\":\"#f6f6f6\",\"editorCursor.foreground\":\"#90a7b2\",\"editor.wordHighlightBackground\":\"#339cec33\",\"editor.wordHighlightStrongBackground\":\"#007dd659\",\"editor.lineHighlightBackground\":\"#f0f0f0\",\"editor.rangeHighlightBackground\":\"#7497a633\",\"editorWhitespace.foreground\":\"#d9d9d9\",\"editorIndentGuide.background\":\"#d9d9d9\",\"editorCodeLens.foreground\":\"#403f53\",\"editorBracketMatch.background\":\"#d3e8f8\",\"editorBracketMatch.border\":\"#2aa298\",\"editorError.border\":\"#fbfbfb\",\"editorWarning.border\":\"#daaa01\",\"editorGutter.addedBackground\":\"#49d0c5\",\"editorGutter.modifiedBackground\":\"#6fbef6\",\"editorGutter.deletedBackground\":\"#f76e6e\",\"editorRuler.foreground\":\"#d9d9d9\",\"editorOverviewRuler.errorForeground\":\"#e64d49\",\"editorOverviewRuler.warningForeground\":\"#daaa01\",\"editorSuggestWidget.background\":\"#f0f0f0\",\"editorSuggestWidget.foreground\":\"#403f53\",\"editorSuggestWidget.highlightForeground\":\"#403f53\",\"editorSuggestWidget.selectedBackground\":\"#d3e8f8\",\"editorSuggestWidget.border\":\"#d9d9d9\",\"debugExceptionWidget.background\":\"#f0f0f0\",\"debugExceptionWidget.border\":\"#d9d9d9\",\"editorMarkerNavigation.background\":\"#d0d0d0\",\"editorMarkerNavigationError.background\":\"#f76e6e\",\"editorMarkerNavigationWarning.background\":\"#daaa01\",\"debugToolBar.background\":\"#f0f0f0\",\"extensionButton.prominentBackground\":\"#2aa298\",\"extensionButton.prominentForeground\":\"#f0f0f0\",\"statusBar.background\":\"#f0f0f0\",\"statusBar.border\":\"#f0f0f0\",\"statusBar.debuggingBackground\":\"#f0f0f0\",\"statusBar.debuggingForeground\":\"#403f53\",\"statusBar.foreground\":\"#403f53\",\"statusBar.noFolderBackground\":\"#f0f0f0\",\"statusBar.noFolderForeground\":\"#403f53\",\"peekView.border\":\"#d9d9d9\",\"peekViewEditor.background\":\"#f6f6f6\",\"peekViewEditorGutter.background\":\"#f6f6f6\",\"peekViewEditor.matchHighlightBackground\":\"#49d0c5\",\"peekViewResult.background\":\"#f0f0f0\",\"peekViewResult.fileForeground\":\"#403f53\",\"peekViewResult.lineForeground\":\"#403f53\",\"peekViewResult.matchHighlightBackground\":\"#49d0c5\",\"peekViewResult.selectionBackground\":\"#e0e7ea\",\"peekViewResult.selectionForeground\":\"#403f53\",\"peekViewTitle.background\":\"#f0f0f0\",\"peekViewTitleLabel.foreground\":\"#403f53\",\"peekViewTitleDescription.foreground\":\"#403f53\",\"terminal.foreground\":\"#403f53\"},\"fg\":\"#403f53\",\"bg\":\"#f6f7f9\",\"semanticHighlighting\":false,\"settings\":[{\"name\":\"Changed\",\"scope\":[\"markup.changed\",\"meta.diff.header.git\",\"meta.diff.header.from-file\",\"meta.diff.header.to-file\"],\"settings\":{\"foreground\":\"#556484\"}},{\"name\":\"Deleted\",\"scope\":[\"markup.deleted.diff\"],\"settings\":{\"foreground\":\"#ae3c3afd\"}},{\"name\":\"Inserted\",\"scope\":[\"markup.inserted.diff\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Global settings\",\"settings\":{\"background\":\"#011627\",\"foreground\":\"#403f53\"}},{\"name\":\"Comment\",\"scope\":[\"comment\"],\"settings\":{\"foreground\":\"#5f636f\"}},{\"name\":\"String\",\"scope\":[\"string\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"String Quoted\",\"scope\":[\"string.quoted\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#984e4d\"}},{\"name\":\"Support Constant Math\",\"scope\":[\"support.constant.math\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Number\",\"scope\":[\"constant.numeric\",\"constant.character.numeric\"],\"settings\":{\"foreground\":\"#aa0982\",\"fontStyle\":\"\"}},{\"name\":\"Built-in constant\",\"scope\":[\"constant.language\",\"punctuation.definition.constant\",\"variable.other.constant\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"User-defined constant\",\"scope\":[\"constant.character\",\"constant.other\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Constant Character Escape\",\"scope\":[\"constant.character.escape\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"RegExp String\",\"scope\":[\"string.regexp\",\"string.regexp keyword.other\"],\"settings\":{\"foreground\":\"#3a688f\"}},{\"name\":\"Comma in functions\",\"scope\":[\"meta.function punctuation.separator.comma\"],\"settings\":{\"foreground\":\"#4d667b\"}},{\"name\":\"Variable\",\"scope\":[\"variable\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Keyword\",\"scope\":[\"punctuation.accessor\",\"keyword\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Storage\",\"scope\":[\"storage\",\"meta.var.expr\",\"meta.class meta.method.declaration meta.var.expr storage.type.js\",\"storage.type.property.js\",\"storage.type.property.ts\",\"storage.type.property.tsx\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Storage type\",\"scope\":[\"storage.type.function.arrow.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Class name\",\"scope\":[\"entity.name.class\",\"meta.class entity.name.type.class\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Inherited class\",\"scope\":[\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Function name\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Meta Tag\",\"scope\":[\"punctuation.definition.tag\",\"meta.tag\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"HTML Tag names\",\"scope\":[\"entity.name.tag\",\"meta.tag.other.html\",\"meta.tag.other.js\",\"meta.tag.other.tsx\",\"entity.name.tag.tsx\",\"entity.name.tag.js\",\"entity.name.tag\",\"meta.tag.js\",\"meta.tag.tsx\",\"meta.tag.html\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Tag attribute\",\"scope\":[\"entity.other.attribute-name\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Entity Name Tag Custom\",\"scope\":[\"entity.name.tag.custom\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Library (function & constant)\",\"scope\":[\"support.function\",\"support.constant\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Support Constant Property Value meta\",\"scope\":[\"support.constant.meta.property-value\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Library class/type\",\"scope\":[\"support.type\",\"support.class\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Support Variable DOM\",\"scope\":[\"support.variable.dom\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Invalid\",\"scope\":[\"invalid\"],\"settings\":{\"foreground\":\"#bb2060\"}},{\"name\":\"Invalid deprecated\",\"scope\":[\"invalid.deprecated\"],\"settings\":{\"foreground\":\"#b23834\"}},{\"name\":\"Keyword Operator\",\"scope\":[\"keyword.operator\"],\"settings\":{\"foreground\":\"#096e72\",\"fontStyle\":\"\"}},{\"name\":\"Keyword Operator Relational\",\"scope\":[\"keyword.operator.relational\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Assignment\",\"scope\":[\"keyword.operator.assignment\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Arithmetic\",\"scope\":[\"keyword.operator.arithmetic\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Bitwise\",\"scope\":[\"keyword.operator.bitwise\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Increment\",\"scope\":[\"keyword.operator.increment\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Operator Ternary\",\"scope\":[\"keyword.operator.ternary\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Double-Slashed Comment\",\"scope\":[\"comment.line.double-slash\"],\"settings\":{\"foreground\":\"#5d6376\"}},{\"name\":\"Object\",\"scope\":[\"object\"],\"settings\":{\"foreground\":\"#58656a\"}},{\"name\":\"Null\",\"scope\":[\"constant.language.null\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Meta Brace\",\"scope\":[\"meta.brace\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Meta Delimiter Period\",\"scope\":[\"meta.delimiter.period\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Punctuation Definition String\",\"scope\":[\"punctuation.definition.string\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Punctuation Definition String Markdown\",\"scope\":[\"punctuation.definition.string.begin.markdown\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Boolean\",\"scope\":[\"constant.language.boolean\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Object Comma\",\"scope\":[\"object.comma\"],\"settings\":{\"foreground\":\"#646464\"}},{\"name\":\"Variable Parameter Function\",\"scope\":[\"variable.parameter.function\"],\"settings\":{\"foreground\":\"#096e72\",\"fontStyle\":\"\"}},{\"name\":\"Support Type Property Name & entity name tags\",\"scope\":[\"support.type.vendor.property-name\",\"support.constant.vendor.property-value\",\"support.type.property-name\",\"meta.property-list entity.name.tag\"],\"settings\":{\"foreground\":\"#096e72\",\"fontStyle\":\"\"}},{\"name\":\"Entity Name tag reference in stylesheets\",\"scope\":[\"meta.property-list entity.name.tag.reference\"],\"settings\":{\"foreground\":\"#286d70\"}},{\"name\":\"Constant Other Color RGB Value Punctuation Definition Constant\",\"scope\":[\"constant.other.color.rgb-value punctuation.definition.constant\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Constant Other Color\",\"scope\":[\"constant.other.color\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Keyword Other Unit\",\"scope\":[\"keyword.other.unit\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Meta Selector\",\"scope\":[\"meta.selector\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Entity Other Attribute Name Id\",\"scope\":[\"entity.other.attribute-name.id\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Meta Property Name\",\"scope\":[\"meta.property-name\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Doctypes\",\"scope\":[\"entity.name.tag.doctype\",\"meta.tag.sgml.doctype\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Punctuation Definition Parameters\",\"scope\":[\"punctuation.definition.parameters\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Keyword Control Operator\",\"scope\":[\"keyword.control.operator\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Keyword Operator Logical\",\"scope\":[\"keyword.operator.logical\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"\"}},{\"name\":\"Variable Instances\",\"scope\":[\"variable.instance\",\"variable.other.instance\",\"variable.readwrite.instance\",\"variable.other.readwrite.instance\",\"variable.other.property\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Variable Property Other object property\",\"scope\":[\"variable.other.object.property\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Variable Property Other object\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"fontStyle\":\"\"}},{\"name\":\"Entity Name Function\",\"scope\":[\"entity.name.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Keyword Operator Comparison, imports, returns and Keyword Operator Ruby\",\"scope\":[\"keyword.operator.comparison\",\"keyword.control.flow.js\",\"keyword.control.flow.ts\",\"keyword.control.flow.tsx\",\"keyword.control.ruby\",\"keyword.control.module.ruby\",\"keyword.control.class.ruby\",\"keyword.control.def.ruby\",\"keyword.control.loop.js\",\"keyword.control.loop.ts\",\"keyword.control.import.js\",\"keyword.control.import.ts\",\"keyword.control.import.tsx\",\"keyword.control.from.js\",\"keyword.control.from.ts\",\"keyword.control.from.tsx\",\"keyword.operator.instanceof.js\",\"keyword.operator.expression.instanceof.ts\",\"keyword.operator.expression.instanceof.tsx\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Keyword Control Conditional\",\"scope\":[\"keyword.control.conditional.js\",\"keyword.control.conditional.ts\",\"keyword.control.switch.js\",\"keyword.control.switch.ts\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"\"}},{\"name\":\"Support Constant, `new` keyword, Special Method Keyword, `debugger`, other keywords\",\"scope\":[\"support.constant\",\"keyword.other.special-method\",\"keyword.other.new\",\"keyword.other.debugger\",\"keyword.control\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Support Function\",\"scope\":[\"support.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Invalid Broken\",\"scope\":[\"invalid.broken\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Invalid Unimplemented\",\"scope\":[\"invalid.unimplemented\"],\"settings\":{\"foreground\":\"#486e26\"}},{\"name\":\"Invalid Illegal\",\"scope\":[\"invalid.illegal\"],\"settings\":{\"foreground\":\"#984e4d\"}},{\"name\":\"Language Variable\",\"scope\":[\"variable.language\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Support Variable Property\",\"scope\":[\"support.variable.property\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Variable Function\",\"scope\":[\"variable.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Variable Interpolation\",\"scope\":[\"variable.interpolation\"],\"settings\":{\"foreground\":\"#a64348\"}},{\"name\":\"Meta Function Call\",\"scope\":[\"meta.function-call\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Punctuation Section Embedded\",\"scope\":[\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#b23834\"}},{\"name\":\"Punctuation Tweaks\",\"scope\":[\"punctuation.terminator.expression\",\"punctuation.definition.arguments\",\"punctuation.definition.array\",\"punctuation.section.array\",\"meta.array\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"More Punctuation Tweaks\",\"scope\":[\"punctuation.definition.list.begin\",\"punctuation.definition.list.end\",\"punctuation.separator.arguments\",\"punctuation.definition.list\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Template Strings\",\"scope\":[\"string.template meta.template.expression\"],\"settings\":{\"foreground\":\"#b23834\"}},{\"name\":\"Backtics(``) in Template Strings\",\"scope\":[\"string.template punctuation.definition.string\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Italics\",\"scope\":[\"italic\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"italic\"}},{\"name\":\"Bold\",\"scope\":[\"bold\"],\"settings\":{\"foreground\":\"#3b61b0\",\"fontStyle\":\"bold\"}},{\"name\":\"Quote\",\"scope\":[\"quote\"],\"settings\":{\"foreground\":\"#5c6285\"}},{\"name\":\"Raw Code\",\"scope\":[\"raw\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"CoffeScript Variable Assignment\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#186e73\"}},{\"name\":\"CoffeScript Parameter Function\",\"scope\":[\"variable.parameter.function.coffee\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"CoffeeScript Assignments\",\"scope\":[\"variable.assignment.coffee\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"C# Readwrite Variables\",\"scope\":[\"variable.other.readwrite.cs\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"C# Classes & Storage types\",\"scope\":[\"entity.name.type.class.cs\",\"storage.type.cs\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"C# Namespaces\",\"scope\":[\"entity.name.type.namespace.cs\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Tag names in Stylesheets\",\"scope\":[\"entity.name.tag.css\",\"entity.name.tag.less\",\"entity.name.tag.custom.css\",\"support.constant.property-value.css\"],\"settings\":{\"foreground\":\"#984e4d\",\"fontStyle\":\"\"}},{\"name\":\"Wildcard(*) selector in Stylesheets\",\"scope\":[\"entity.name.tag.wildcard.css\",\"entity.name.tag.wildcard.less\",\"entity.name.tag.wildcard.scss\",\"entity.name.tag.wildcard.sass\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"CSS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Attribute Name for CSS\",\"scope\":[\"meta.attribute-selector.css entity.other.attribute-name.attribute\",\"variable.other.readwrite.js\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Elixir Classes\",\"scope\":[\"source.elixir support.type.elixir\",\"source.elixir meta.module.elixir entity.name.class.elixir\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir Functions\",\"scope\":[\"source.elixir entity.name.function\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir Constants\",\"scope\":[\"source.elixir constant.other.symbol.elixir\",\"source.elixir constant.other.keywords.elixir\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir String Punctuations\",\"scope\":[\"source.elixir punctuation.definition.string\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir\",\"scope\":[\"source.elixir variable.other.readwrite.module.elixir\",\"source.elixir variable.other.readwrite.module.elixir punctuation.definition.variable.elixir\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Elixir Binary Punctuations\",\"scope\":[\"source.elixir .punctuation.binary.elixir\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Closure Constant Keyword\",\"scope\":[\"constant.keyword.clojure\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Go Function Calls\",\"scope\":[\"source.go meta.function-call.go\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Go Keywords\",\"scope\":[\"source.go keyword.package.go\",\"source.go keyword.import.go\",\"source.go keyword.function.go\",\"source.go keyword.type.go\",\"source.go keyword.struct.go\",\"source.go keyword.interface.go\",\"source.go keyword.const.go\",\"source.go keyword.var.go\",\"source.go keyword.map.go\",\"source.go keyword.channel.go\",\"source.go keyword.control.go\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"Go Constants e.g. nil, string format (%s, %d, etc.)\",\"scope\":[\"source.go constant.language.go\",\"source.go constant.other.placeholder.go\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"C++ Functions\",\"scope\":[\"entity.name.function.preprocessor.cpp\",\"entity.scope.name.cpp\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"C++ Meta Namespace\",\"scope\":[\"meta.namespace-block.cpp\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"C++ Language Primitive Storage\",\"scope\":[\"storage.type.language.primitive.cpp\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"C++ Preprocessor Macro\",\"scope\":[\"meta.preprocessor.macro.cpp\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"C++ Variable Parameter\",\"scope\":[\"variable.parameter\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Powershell Variables\",\"scope\":[\"variable.other.readwrite.powershell\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Powershell Function\",\"scope\":[\"support.function.powershell\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"ID Attribute Name in HTML\",\"scope\":[\"entity.other.attribute-name.id.html\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"HTML Punctuation Definition Tag\",\"scope\":[\"punctuation.definition.tag.html\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"HTML Doctype\",\"scope\":[\"meta.tag.sgml.doctype.html\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"JavaScript Classes\",\"scope\":[\"meta.class entity.name.type.class.js\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"JavaScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.js\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"JavaScript Terminator\",\"scope\":[\"terminator.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Meta Punctuation Definition\",\"scope\":[\"meta.js punctuation.definition.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Entity Names in Code Documentations\",\"scope\":[\"entity.name.type.instance.jsdoc\",\"entity.name.type.instance.phpdoc\"],\"settings\":{\"foreground\":\"#4d667b\"}},{\"name\":\"Other Variables in Code Documentations\",\"scope\":[\"variable.other.jsdoc\",\"variable.other.phpdoc\"],\"settings\":{\"foreground\":\"#3e697c\"}},{\"name\":\"JavaScript module imports and exports\",\"scope\":[\"variable.other.meta.import.js\",\"meta.import.js variable.other\",\"variable.other.meta.export.js\",\"meta.export.js variable.other\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Variable Parameter Function\",\"scope\":[\"variable.parameter.function.js\"],\"settings\":{\"foreground\":\"#555ea2\"}},{\"name\":\"JavaScript[React] Variable Other Object\",\"scope\":[\"variable.other.object.js\",\"variable.other.object.jsx\",\"variable.object.property.js\",\"variable.object.property.jsx\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Variables\",\"scope\":[\"variable.js\",\"variable.other.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JavaScript Entity Name Type\",\"scope\":[\"entity.name.type.js\",\"entity.name.type.module.js\"],\"settings\":{\"foreground\":\"#111111\",\"fontStyle\":\"\"}},{\"name\":\"JavaScript Support Classes\",\"scope\":[\"support.class.js\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"JSON Property Names\",\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"JSON Support Constants\",\"scope\":[\"support.constant.json\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"JSON Property values (string)\",\"scope\":[\"meta.structure.dictionary.value.json string.quoted.double\"],\"settings\":{\"foreground\":\"#7c5686\"}},{\"name\":\"Strings in JSON values\",\"scope\":[\"string.quoted.double.json punctuation.definition.string.json\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Specific JSON Property values like null\",\"scope\":[\"meta.structure.dictionary.json meta.structure.dictionary.value constant.language\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"JavaScript Other Variable\",\"scope\":[\"variable.other.object.js\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Ruby Variables\",\"scope\":[\"variable.other.ruby\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Ruby Class\",\"scope\":[\"entity.name.type.class.ruby\"],\"settings\":{\"foreground\":\"#984e4d\"}},{\"name\":\"Ruby Hashkeys\",\"scope\":[\"constant.language.symbol.hashkey.ruby\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Ruby Symbols\",\"scope\":[\"constant.language.symbol.ruby\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"LESS Tag names\",\"scope\":[\"entity.name.tag.less\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"LESS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.css\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Attribute Name for LESS\",\"scope\":[\"meta.attribute-selector.less entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Markdown Headings\",\"scope\":[\"markup.heading.markdown\",\"markup.heading.setext.1.markdown\",\"markup.heading.setext.2.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Markdown Italics\",\"scope\":[\"markup.italic.markdown\"],\"settings\":{\"foreground\":\"#8844ae\",\"fontStyle\":\"italic\"}},{\"name\":\"Markdown Bold\",\"scope\":[\"markup.bold.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\",\"fontStyle\":\"bold\"}},{\"name\":\"Markdown Quote + others\",\"scope\":[\"markup.quote.markdown\"],\"settings\":{\"foreground\":\"#5c6285\"}},{\"name\":\"Markdown Raw Code + others\",\"scope\":[\"markup.inline.raw.markdown\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Markdown Links\",\"scope\":[\"markup.underline.link.markdown\",\"markup.underline.link.image.markdown\"],\"settings\":{\"foreground\":\"#954f5a\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Link Title and Description\",\"scope\":[\"string.other.link.title.markdown\",\"string.other.link.description.markdown\"],\"settings\":{\"foreground\":\"#403f53\",\"fontStyle\":\"underline\"}},{\"name\":\"Markdown Punctuation\",\"scope\":[\"punctuation.definition.string.markdown\",\"punctuation.definition.string.begin.markdown\",\"punctuation.definition.string.end.markdown\",\"meta.link.inline.markdown punctuation.definition.string\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Markdown MetaData Punctuation\",\"scope\":[\"punctuation.definition.metadata.markdown\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Markdown List Punctuation\",\"scope\":[\"beginning.punctuation.definition.list.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Markdown Inline Raw String\",\"scope\":[\"markup.inline.raw.string.markdown\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"PHP Variables\",\"scope\":[\"variable.other.php\",\"variable.other.property.php\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Support Classes in PHP\",\"scope\":[\"support.class.php\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Punctuations in PHP function calls\",\"scope\":[\"meta.function-call.php punctuation\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"PHP Global Variables\",\"scope\":[\"variable.other.global.php\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Declaration Punctuation in PHP Global Variables\",\"scope\":[\"variable.other.global.php punctuation.definition.variable\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Language Constants in Python\",\"scope\":[\"constant.language.python\"],\"settings\":{\"foreground\":\"#a24848\"}},{\"name\":\"Python Function Parameter and Arguments\",\"scope\":[\"variable.parameter.function.python\",\"meta.function-call.arguments.python\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Python Function Call\",\"scope\":[\"meta.function-call.python\",\"meta.function-call.generic.python\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"Punctuations in Python\",\"scope\":[\"punctuation.python\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Decorator Functions in Python\",\"scope\":[\"entity.name.function.decorator.python\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Python Language Variable\",\"scope\":[\"source.python variable.language.special\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Python import control keyword\",\"scope\":[\"keyword.control\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"SCSS Variable\",\"scope\":[\"variable.scss\",\"variable.sass\",\"variable.parameter.url.scss\",\"variable.parameter.url.sass\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"Variables in SASS At-Rules\",\"scope\":[\"source.css.scss meta.at-rule variable\",\"source.css.sass meta.at-rule variable\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"Attribute Name for SASS\",\"scope\":[\"meta.attribute-selector.scss entity.other.attribute-name.attribute\",\"meta.attribute-selector.sass entity.other.attribute-name.attribute\"],\"settings\":{\"foreground\":\"#aa0982\"}},{\"name\":\"Tag names in SASS\",\"scope\":[\"entity.name.tag.scss\",\"entity.name.tag.sass\"],\"settings\":{\"foreground\":\"#096e72\"}},{\"name\":\"SASS Keyword Other Unit\",\"scope\":[\"keyword.other.unit.scss\",\"keyword.other.unit.sass\"],\"settings\":{\"foreground\":\"#8844ae\"}},{\"name\":\"TypeScript[React] Variables and Object Properties\",\"scope\":[\"variable.other.readwrite.alias.ts\",\"variable.other.readwrite.alias.tsx\",\"variable.other.readwrite.ts\",\"variable.other.readwrite.tsx\",\"variable.other.object.ts\",\"variable.other.object.tsx\",\"variable.object.property.ts\",\"variable.object.property.tsx\",\"variable.other.ts\",\"variable.other.tsx\",\"variable.tsx\",\"variable.ts\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript[React] Entity Name Types\",\"scope\":[\"entity.name.type.ts\",\"entity.name.type.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript[React] Node Classes\",\"scope\":[\"support.class.node.ts\",\"support.class.node.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"TypeScript[React] Entity Name Types as Parameters\",\"scope\":[\"meta.type.parameters.ts entity.name.type\",\"meta.type.parameters.tsx entity.name.type\"],\"settings\":{\"foreground\":\"#4d667b\"}},{\"name\":\"TypeScript[React] Import/Export Punctuations\",\"scope\":[\"meta.import.ts punctuation.definition.block\",\"meta.import.tsx punctuation.definition.block\",\"meta.export.ts punctuation.definition.block\",\"meta.export.tsx punctuation.definition.block\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.decorator punctuation.decorator.ts\",\"meta.decorator punctuation.decorator.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"TypeScript[React] Punctuation Decorators\",\"scope\":[\"meta.tag.js meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"YAML Entity Name Tags\",\"scope\":[\"entity.name.tag.yaml\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"JavaScript Variable Other ReadWrite\",\"scope\":[\"variable.other.readwrite.js\",\"variable.parameter\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"Support Class Component\",\"scope\":[\"support.class.component.js\",\"support.class.component.tsx\"],\"settings\":{\"foreground\":\"#aa0982\",\"fontStyle\":\"\"}},{\"name\":\"Text nested in React tags\",\"scope\":[\"meta.jsx.children\",\"meta.jsx.children.js\",\"meta.jsx.children.tsx\"],\"settings\":{\"foreground\":\"#403f53\"}},{\"name\":\"TypeScript Classes\",\"scope\":[\"meta.class entity.name.type.class.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript Entity Name Type\",\"scope\":[\"entity.name.type.tsx\",\"entity.name.type.module.tsx\"],\"settings\":{\"foreground\":\"#111111\"}},{\"name\":\"TypeScript Class Variable Keyword\",\"scope\":[\"meta.class.ts meta.var.expr.ts storage.type.ts\",\"meta.class.tsx meta.var.expr.tsx storage.type.tsx\"],\"settings\":{\"foreground\":\"#76578b\"}},{\"name\":\"TypeScript Method Declaration e.g. `constructor`\",\"scope\":[\"meta.method.declaration storage.type.ts\",\"meta.method.declaration storage.type.tsx\"],\"settings\":{\"foreground\":\"#3b61b0\"}},{\"name\":\"normalize font style of certain components\",\"scope\":[\"meta.property-list.css meta.property-value.css variable.other.less\",\"meta.property-list.scss variable.scss\",\"meta.property-list.sass variable.sass\",\"meta.brace\",\"keyword.operator.operator\",\"keyword.operator.or.regexp\",\"keyword.operator.expression.in\",\"keyword.operator.relational\",\"keyword.operator.assignment\",\"keyword.operator.comparison\",\"keyword.operator.type\",\"keyword.operator\",\"keyword\",\"punctuation.definintion.string\",\"punctuation\",\"variable.other.readwrite.js\",\"storage.type\",\"source.css\",\"string.quoted\"],\"settings\":{\"fontStyle\":\"\"}}],\"styleOverrides\":{\"frames\":{\"editorBackground\":\"var(--sl-color-gray-7)\",\"terminalBackground\":\"var(--sl-color-gray-7)\",\"editorActiveTabBackground\":\"var(--sl-color-gray-7)\",\"terminalTitlebarDotsForeground\":\"color-mix(in srgb, var(--sl-color-gray-5), transparent 25%)\",\"terminalTitlebarDotsOpacity\":\"0.75\",\"inlineButtonForeground\":\"var(--sl-color-text)\",\"frameBoxShadowCssValue\":\"none\"},\"textMarkers\":{\"markBackground\":\"#0000001a\",\"markBorderColor\":\"#00000055\"}}}],\"defaultLocale\":\"en\",\"cascadeLayer\":\"starlight.components\",\"styleOverrides\":{\"borderRadius\":\"0px\",\"borderWidth\":\"1px\",\"codePaddingBlock\":\"0.75rem\",\"codePaddingInline\":\"1rem\",\"codeFontFamily\":\"var(--__sl-font-mono)\",\"codeFontSize\":\"var(--sl-text-code)\",\"codeLineHeight\":\"var(--sl-line-height)\",\"uiFontFamily\":\"var(--__sl-font)\",\"textMarkers\":{\"lineDiffIndicatorMarginLeft\":\"0.25rem\",\"defaultChroma\":\"45\",\"backgroundOpacity\":\"60%\"}},\"plugins\":[{\"name\":\"Collapsible sections\",\"styleSettings\":{\"defaultValues\":{\"collapsibleSections\":{\"closedBorderWidth\":\"0\",\"closedPaddingBlock\":\"4px\",\"closedMargin\":\"0\",\"closedFontFamily\":\"inherit\",\"closedFontSize\":\"inherit\",\"closedLineHeight\":\"inherit\",\"openBorderWidth\":\"1px\",\"openPadding\":\"0\",\"openMargin\":\"0\",\"openBackgroundColor\":\"transparent\",\"openBorderColor\":\"transparent\",\"expandIcon\":\"url(\\\"data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2016%2016'%3E%3Cpath%20d%3D'm8.177.677%202.896%202.896a.25.25%200%200%201-.177.427H8.75v1.25a.75.75%200%200%201-1.5%200V4H5.104a.25.25%200%200%201-.177-.427L7.823.677a.25.25%200%200%201%20.354%200ZM7.25%2010.75a.75.75%200%200%201%201.5%200V12h2.146a.25.25%200%200%201%20.177.427l-2.896%202.896a.25.25%200%200%201-.354%200l-2.896-2.896A.25.25%200%200%201%205.104%2012H7.25v-1.25Zm-5-2a.75.75%200%200%200%200-1.5h-.5a.75.75%200%200%200%200%201.5h.5ZM6%208a.75.75%200%200%201-.75.75h-.5a.75.75%200%200%201%200-1.5h.5A.75.75%200%200%201%206%208Zm2.25.75a.75.75%200%200%200%200-1.5h-.5a.75.75%200%200%200%200%201.5h.5ZM12%208a.75.75%200%200%201-.75.75h-.5a.75.75%200%200%201%200-1.5h.5A.75.75%200%200%201%2012%208Zm2.25.75a.75.75%200%200%200%200-1.5h-.5a.75.75%200%200%200%200%201.5h.5Z'%2F%3E%3C%2Fsvg%3E\\\")\",\"collapseIcon\":\"url(\\\"data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2016%2016'%3E%3Cpath%20d%3D'M10.896%202H8.75V.75a.75.75%200%200%200-1.5%200V2H5.104a.25.25%200%200%200-.177.427l2.896%202.896a.25.25%200%200%200%20.354%200l2.896-2.896A.25.25%200%200%200%2010.896%202ZM8.75%2015.25a.75.75%200%200%201-1.5%200V14H5.104a.25.25%200%200%201-.177-.427l2.896-2.896a.25.25%200%200%201%20.354%200l2.896%202.896a.25.25%200%200%201-.177.427H8.75v1.25Zm-6.5-6.5a.75.75%200%200%200%200-1.5h-.5a.75.75%200%200%200%200%201.5h.5ZM6%208a.75.75%200%200%201-.75.75h-.5a.75.75%200%200%201%200-1.5h.5A.75.75%200%200%201%206%208Zm2.25.75a.75.75%200%200%200%200-1.5h-.5a.75.75%200%200%200%200%201.5h.5ZM12%208a.75.75%200%200%201-.75.75h-.5a.75.75%200%200%201%200-1.5h.5A.75.75%200%200%201%2012%208Zm2.25.75a.75.75%200%200%200%200-1.5h-.5a.75.75%200%200%200%200%201.5h.5Z'%2F%3E%3C%2Fsvg%3E\\\")\"}},\"cssVarExclusions\":[],\"cssVarReplacements\":[[\"collapsibleSections\",\"cs\"]],\"preventUnitlessValues\":[\"collapsibleSections.closedBorderWidth\",\"collapsibleSections.openBorderWidth\"]},\"hooks\":{}},{\"name\":\"Starlight Plugin\",\"hooks\":{}},{\"name\":\"astro-expressive-code\",\"hooks\":{}}],\"shiki\":{\"langAlias\":{\"csharp\":\"csharp\",\"go\":\"go\",\"json\":\"json\",\"kotlin\":\"kotlin\",\"move\":\"move\",\"powershell\":\"powershell\",\"python\":\"python\",\"rust\":\"rust\",\"swift\":\"swift\",\"terraform\":\"terraform\",\"toml\":\"toml\",\"tsx\":\"tsx\",\"yaml\":\"yaml\"},\"langs\":[]},\"defaultProps\":{\"collapseStyle\":\"collapsible-auto\"}}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true,\"allowedDomains\":[]},\"env\":{\"schema\":{\"ALGOLIA_APP_ID\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"ALGOLIA_SEARCH_API_KEY\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"ALGOLIA_INDEX_NAME\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"GITHUB_TOKEN\":{\"context\":\"server\",\"access\":\"secret\",\"optional\":true,\"type\":\"string\"},\"GTAG_ID\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"ENABLE_API_REFERENCE\":{\"context\":\"server\",\"access\":\"public\",\"optional\":true,\"default\":\"true\",\"type\":\"string\"},\"ENABLE_MOVE_REFERENCE\":{\"context\":\"server\",\"access\":\"public\",\"optional\":true,\"default\":\"false\",\"type\":\"string\"},\"OG_IMAGES_SECRET\":{\"context\":\"server\",\"access\":\"secret\",\"optional\":true,\"type\":\"string\"},\"PUBLIC_FIREBASE_API_KEY\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"PUBLIC_FIREBASE_AUTH_DOMAIN\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"PUBLIC_FIREBASE_PROJECT_ID\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"PUBLIC_FIREBASE_APP_ID\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"}},\"validateSecrets\":true},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false,\"failOnPrerenderConflict\":false},\"legacy\":{\"collections\":false},\"session\":{\"driver\":\"fs-lite\",\"options\":{\"base\":\"/Users/dlehddnr0713/Desktop/plode-docs/node_modules/.astro/sessions\"}},\"i18n\":{\"defaultLocale\":\"en\",\"locales\":[{\"codes\":[\"en\"],\"path\":\"en\"},{\"codes\":[\"es\"],\"path\":\"es\"},{\"codes\":[\"zh\"],\"path\":\"zh\"}],\"routing\":{\"prefixDefaultLocale\":false,\"redirectToDefaultLocale\":false,\"fallbackType\":\"redirect\"}}}","docs",["Map",11,12,26,27,37,38,48,49,59,60,70,71,81,82,92,93,103,104,114,115,125,126,136,137,147,148,158,159,169,170,180,181,191,192,202,203,213,214,224,225,235,236,246,247,257,258,268,269,279,280,290,291,301,302,312,313,323,324,334,335,345,346,356,357,367,368,378,379,389,390,400,401,411,412,422,423,433,434,444,445,455,456],"index",{"id":11,"data":13,"body":23,"filePath":24,"digest":25,"deferredRender":16},{"title":14,"description":15,"editUrl":16,"head":17,"template":18,"sidebar":19,"pagefind":16,"draft":20,"type":22},"Plode 팀에 오신 것을 환영합니다","Plode는 개발자들이 함께 성장하는 IT 커뮤니티입니다",true,[],"doc",{"hidden":20,"attrs":21},false,{},"base","import { Card, CardGrid } from '@astrojs/starlight/components';\n\n## 안녕하세요, Plode 팀입니다! 👋\n\n**Plode**는 열정적인 개발자들이 모여 지식을 공유하고 함께 성장하는 IT 커뮤니티입니다.\n\n우리는 최신 기술 트렌드를 탐구하고, 실무 경험을 나누며, 더 나은 개발 문화를 만들어가고 있습니다.\n\n### 우리의 비전\n\n- **지식 공유**: 다양한 기술 스택과 개발 경험을 서로 나누며 함께 배웁니다\n- **실무 중심**: 이론뿐만 아니라 실제 프로젝트에서 활용 가능한 실용적인 지식을 추구합니다\n- **커뮤니티 문화**: 서로 존중하고 격려하며 성장할 수 있는 건강한 개발자 문화를 지향합니다\n- **오픈소스 기여**: 오픈소스 프로젝트에 적극적으로 참여하고 기여합니다\n\n### 함께 만들어가는 가치\n\nPlode 팀은 단순히 기술을 배우는 것을 넘어, 함께 문제를 해결하고 성장하는 과정에서 진정한 가치를 찾습니다.\n\n초보 개발자부터 시니어 개발자까지, 모든 레벨의 개발자들이 자유롭게 소통하고 협업할 수 있는 플랫폼을 제공합니다.\n\n\u003CCardGrid>\n  \u003CCard title=\"📚 학습\" icon=\"open-book\">\n    최신 기술 트렌드와 베스트 프랙티스를 공유합니다\n  \u003C/Card>\n  \u003CCard title=\"🤝 협업\" icon=\"puzzle\">\n    팀 프로젝트를 통해 실무 경험을 쌓습니다\n  \u003C/Card>\n  \u003CCard title=\"🚀 성장\" icon=\"rocket\">\n    함께 성장하는 개발자 커뮤니티를 만들어갑니다\n  \u003C/Card>\n  \u003CCard title=\"💡 혁신\" icon=\"star\">\n    새로운 아이디어와 기술로 세상을 변화시킵니다\n  \u003C/Card>\n\u003C/CardGrid>\n\n---\n\n**Plode와 함께 더 나은 개발자로 성장하세요!**","src/content/docs/index.mdx","23df0f6377796685","app/front/react",{"id":26,"data":28,"body":34,"filePath":35,"digest":36,"deferredRender":16},{"title":29,"description":30,"editUrl":16,"head":31,"template":18,"sidebar":32,"pagefind":16,"draft":20,"type":22},"React","사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리",[],{"hidden":20,"attrs":33},{},"React는 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다.\n\n## 주요 특징\n\n- **컴포넌트 기반**: 재사용 가능한 UI 컴포넌트를 만들 수 있습니다\n- **가상 DOM**: 효율적인 렌더링을 위해 가상 DOM을 사용합니다\n- **단방향 데이터 흐름**: 예측 가능한 상태 관리를 제공합니다\n- **풍부한 생태계**: 다양한 라이브러리와 도구를 제공합니다\n\n## 설치하기\n\n```bash\nnpx create-react-app my-app\ncd my-app\nnpm start\n```\n\n또는 Vite를 사용하여:\n\n```bash\nnpm create vite@latest my-app -- --template react\ncd my-app\nnpm install\nnpm run dev\n```\n\n## 기본 예제\n\n```jsx\nimport { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    \u003Cdiv>\n      \u003Cp>카운트: {count}\u003C/p>\n      \u003Cbutton onClick={() => setCount(count + 1)}>\n        증가\n      \u003C/button>\n    \u003C/div>\n  );\n}\n\nexport default Counter;\n```\n\n## 언제 사용하나요?\n\n- 대규모 단일 페이지 애플리케이션(SPA) 구축\n- 복잡한 사용자 인터페이스 개발\n- 재사용 가능한 컴포넌트 라이브러리 제작\n- 모바일 앱 개발 (React Native)\n\n## 추가 자료\n\n- [공식 문서](https://react.dev)\n- [React 튜토리얼](https://react.dev/learn)","src/content/docs/app/front/react.mdx","a063720853a5ebc1","app/front/vue",{"id":37,"data":39,"body":45,"filePath":46,"digest":47,"deferredRender":16},{"title":40,"description":41,"editUrl":16,"head":42,"template":18,"sidebar":43,"pagefind":16,"draft":20,"type":22},"Vue","사용자 인터페이스를 구축하기 위한 프로그레시브 JavaScript 프레임워크",[],{"hidden":20,"attrs":44},{},"Vue는 사용자 인터페이스를 구축하기 위한 프로그레시브 JavaScript 프레임워크입니다.\n\n## 주요 특징\n\n- **접근성이 좋음**: 배우기 쉽고 시작하기 간편합니다\n- **반응형 데이터 바인딩**: 자동으로 UI를 업데이트합니다\n- **컴포넌트 시스템**: 재사용 가능한 컴포넌트를 만들 수 있습니다\n- **유연성**: 점진적으로 도입할 수 있습니다\n\n## 설치하기\n\n```bash\nnpm create vue@latest\ncd my-vue-app\nnpm install\nnpm run dev\n```\n\n## 기본 예제\n\n```vue\n\u003Cscript setup>\nimport { ref } from 'vue'\n\nconst count = ref(0)\n\nfunction increment() {\n  count.value++\n}\n\u003C/script>\n\n\u003Ctemplate>\n  \u003Cdiv>\n    \u003Cp>카운트: {{ count }}\u003C/p>\n    \u003Cbutton @click=\"increment\">증가\u003C/button>\n  \u003C/div>\n\u003C/template>\n\n\u003Cstyle scoped>\nbutton {\n  padding: 8px 16px;\n  background: #42b883;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\u003C/style>\n```\n\n## 언제 사용하나요?\n\n- 빠르게 프로토타입을 만들 때\n- 기존 프로젝트에 점진적으로 통합할 때\n- 중소규모 웹 애플리케이션 개발\n- 직관적인 API가 필요한 프로젝트\n\n## 추가 자료\n\n- [공식 문서](https://vuejs.org)\n- [Vue 가이드](https://vuejs.org/guide/)","src/content/docs/app/front/vue.mdx","ecac698b367489c3","app/front/angular",{"id":48,"data":50,"body":56,"filePath":57,"digest":58,"deferredRender":16},{"title":51,"description":52,"editUrl":16,"head":53,"template":18,"sidebar":54,"pagefind":16,"draft":20,"type":22},"Angular","타입스크립트 기반의 오픈 소스 웹 애플리케이션 프레임워크",[],{"hidden":20,"attrs":55},{},"Angular는 타입스크립트 기반의 오픈 소스 웹 애플리케이션 프레임워크입니다.\n\n## 주요 특징\n\n- **완전한 프레임워크**: 라우팅, 상태 관리, HTTP 클라이언트 등 모든 것을 제공합니다\n- **TypeScript 기반**: 타입 안정성과 개발자 경험을 향상시킵니다\n- **의존성 주입**: 강력한 DI 시스템을 제공합니다\n- **양방향 데이터 바인딩**: 모델과 뷰를 자동으로 동기화합니다\n\n## 설치하기\n\n```bash\nnpm install -g @angular/cli\nng new my-app\ncd my-app\nng serve\n```\n\n## 기본 예제\n\n```typescript\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  template: `\n    \u003Cdiv>\n      \u003Cp>카운트: {{ count }}\u003C/p>\n      \u003Cbutton (click)=\"increment()\">증가\u003C/button>\n    \u003C/div>\n  `,\n  styles: [`\n    button {\n      padding: 8px 16px;\n      background: #dd0031;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n  `]\n})\nexport class CounterComponent {\n  count = 0;\n\n  increment() {\n    this.count++;\n  }\n}\n```\n\n## 언제 사용하나요?\n\n- 대규모 엔터프라이즈 애플리케이션 개발\n- 강력한 타입 시스템이 필요한 프로젝트\n- 팀 협업이 많은 프로젝트\n- 구조화된 개발 패턴이 필요할 때\n\n## 추가 자료\n\n- [공식 문서](https://angular.io)\n- [Angular 튜토리얼](https://angular.io/tutorial)","src/content/docs/app/front/angular.mdx","ca5fa7118bc8d0c0","app/front/nextjs",{"id":59,"data":61,"body":67,"filePath":68,"digest":69,"deferredRender":16},{"title":62,"description":63,"editUrl":16,"head":64,"template":18,"sidebar":65,"pagefind":16,"draft":20,"type":22},"Next.js","React 기반의 풀스택 웹 애플리케이션 프레임워크",[],{"hidden":20,"attrs":66},{},"Next.js는 React 기반의 풀스택 웹 애플리케이션 프레임워크입니다.\n\n## 주요 특징\n\n- **서버 사이드 렌더링(SSR)**: SEO 최적화와 빠른 초기 로딩\n- **정적 사이트 생성(SSG)**: 빌드 시점에 페이지를 생성합니다\n- **파일 기반 라우팅**: 직관적인 페이지 구조\n- **API 라우트**: 백엔드 API를 같은 프로젝트에서 구축\n- **이미지 최적화**: 자동으로 이미지를 최적화합니다\n\n## 설치하기\n\n```bash\nnpx create-next-app@latest my-app\ncd my-app\nnpm run dev\n```\n\n## 기본 예제\n\n```tsx\n// app/page.tsx\n'use client'\n\nimport { useState } from 'react'\n\nexport default function Home() {\n  const [count, setCount] = useState(0)\n\n  return (\n    \u003Cmain>\n      \u003Ch1>Next.js 카운터\u003C/h1>\n      \u003Cp>카운트: {count}\u003C/p>\n      \u003Cbutton onClick={() => setCount(count + 1)}>\n        증가\n      \u003C/button>\n    \u003C/main>\n  )\n}\n```\n\n## API 라우트 예제\n\n```typescript\n// app/api/hello/route.ts\nexport async function GET() {\n  return Response.json({ message: '안녕하세요!' })\n}\n```\n\n## 언제 사용하나요?\n\n- SEO가 중요한 웹사이트 (블로그, 마케팅 사이트)\n- 전자상거래 플랫폼\n- 서버 사이드 렌더링이 필요한 애플리케이션\n- 풀스택 프로젝트\n\n## 추가 자료\n\n- [공식 문서](https://nextjs.org)\n- [Next.js 학습](https://nextjs.org/learn)","src/content/docs/app/front/nextjs.mdx","b5c9270953a7d3c7","app/front/nuxt",{"id":70,"data":72,"body":78,"filePath":79,"digest":80,"deferredRender":16},{"title":73,"description":74,"editUrl":16,"head":75,"template":18,"sidebar":76,"pagefind":16,"draft":20,"type":22},"Nuxt","Vue.js 기반의 직관적이고 강력한 웹 프레임워크",[],{"hidden":20,"attrs":77},{},"Nuxt는 Vue.js 기반의 직관적이고 강력한 웹 프레임워크입니다.\n\n## 주요 특징\n\n- **Vue 기반**: Vue.js의 모든 장점을 활용합니다\n- **서버 사이드 렌더링**: SEO 최적화와 성능 향상\n- **자동 라우팅**: 파일 구조 기반 자동 라우팅\n- **모듈 생태계**: 풍부한 모듈 시스템\n- **타입스크립트 지원**: 기본적으로 타입스크립트를 지원합니다\n\n## 설치하기\n\n```bash\nnpx nuxi@latest init my-app\ncd my-app\nnpm install\nnpm run dev\n```\n\n## 기본 예제\n\n```vue\n\u003C!-- pages/index.vue -->\n\u003Cscript setup lang=\"ts\">\nconst count = ref(0)\n\nfunction increment() {\n  count.value++\n}\n\u003C/script>\n\n\u003Ctemplate>\n  \u003Cdiv>\n    \u003Ch1>Nuxt 카운터\u003C/h1>\n    \u003Cp>카운트: {{ count }}\u003C/p>\n    \u003Cbutton @click=\"increment\">증가\u003C/button>\n  \u003C/div>\n\u003C/template>\n\n\u003Cstyle scoped>\nbutton {\n  padding: 8px 16px;\n  background: #00dc82;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\u003C/style>\n```\n\n## 데이터 페칭 예제\n\n```vue\n\u003Cscript setup lang=\"ts\">\nconst { data } = await useFetch('/api/users')\n\u003C/script>\n\n\u003Ctemplate>\n  \u003Cdiv>\n    \u003Ch2>사용자 목록\u003C/h2>\n    \u003Cul>\n      \u003Cli v-for=\"user in data\" :key=\"user.id\">\n        {{ user.name }}\n      \u003C/li>\n    \u003C/ul>\n  \u003C/div>\n\u003C/template>\n```\n\n## 언제 사용하나요?\n\n- Vue 생태계를 활용한 풀스택 개발\n- SEO가 중요한 Vue 프로젝트\n- 콘텐츠 중심의 웹사이트\n- 빠른 개발 속도가 필요한 프로젝트\n\n## 추가 자료\n\n- [공식 문서](https://nuxt.com)\n- [Nuxt 예제](https://nuxt.com/docs/examples)","src/content/docs/app/front/nuxt.mdx","8521acf26e50ced9","app/front/svelte",{"id":81,"data":83,"body":89,"filePath":90,"digest":91,"deferredRender":16},{"title":84,"description":85,"editUrl":16,"head":86,"template":18,"sidebar":87,"pagefind":16,"draft":20,"type":22},"Svelte","컴파일러 기반의 혁신적인 프론트엔드 프레임워크",[],{"hidden":20,"attrs":88},{},"Svelte는 컴파일러 기반의 혁신적인 프론트엔드 프레임워크입니다.\n\n## 주요 특징\n\n- **컴파일러 기반**: 런타임 오버헤드가 없습니다\n- **반응형 선언**: 간단하고 직관적인 반응형 프로그래밍\n- **적은 보일러플레이트**: 더 적은 코드로 더 많은 작업\n- **빠른 성능**: 작은 번들 크기와 빠른 실행 속도\n- **내장 애니메이션**: 쉽게 사용할 수 있는 애니메이션 기능\n\n## 설치하기\n\n```bash\nnpm create vite@latest my-app -- --template svelte\ncd my-app\nnpm install\nnpm run dev\n```\n\n또는 SvelteKit을 사용하여:\n\n```bash\nnpm create svelte@latest my-app\ncd my-app\nnpm install\nnpm run dev\n```\n\n## 기본 예제\n\n```svelte\n\u003Cscript>\n  let count = 0;\n\n  function increment() {\n    count += 1;\n  }\n\u003C/script>\n\n\u003Cmain>\n  \u003Ch1>Svelte 카운터\u003C/h1>\n  \u003Cp>카운트: {count}\u003C/p>\n  \u003Cbutton on:click={increment}>\n    증가\n  \u003C/button>\n\u003C/main>\n\n\u003Cstyle>\n  button {\n    padding: 8px 16px;\n    background: #ff3e00;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background: #ff5722;\n  }\n\u003C/style>\n```\n\n## 반응형 선언 예제\n\n```svelte\n\u003Cscript>\n  let count = 0;\n  \n  // 반응형 선언 - count가 변경되면 자동으로 재계산\n  $: doubled = count * 2;\n  $: quadrupled = doubled * 2;\n\u003C/script>\n\n\u003Cdiv>\n  \u003Cp>{count} * 2 = {doubled}\u003C/p>\n  \u003Cp>{count} * 4 = {quadrupled}\u003C/p>\n  \u003Cbutton on:click={() => count += 1}>증가\u003C/button>\n\u003C/div>\n```\n\n## 언제 사용하나요?\n\n- 성능이 중요한 애플리케이션\n- 작은 번들 크기가 필요한 프로젝트\n- 간결한 코드를 선호하는 경우\n- 새로운 기술을 시도해보고 싶을 때\n\n## 추가 자료\n\n- [공식 문서](https://svelte.dev)\n- [Svelte 튜토리얼](https://svelte.dev/tutorial)\n- [SvelteKit](https://kit.svelte.dev)","src/content/docs/app/front/svelte.mdx","dbebc441607d9c11","app/front/typescript",{"id":92,"data":94,"body":100,"filePath":101,"digest":102,"deferredRender":16},{"title":95,"description":96,"editUrl":16,"head":97,"template":18,"sidebar":98,"pagefind":16,"draft":20,"type":22},"TypeScript","JavaScript에 타입을 추가한 프로그래밍 언어",[],{"hidden":20,"attrs":99},{},"TypeScript는 JavaScript에 타입을 추가한 프로그래밍 언어입니다.\n\n## 주요 특징\n\n- **정적 타입 검사**: 컴파일 시점에 오류를 발견합니다\n- **향상된 IDE 지원**: 자동완성, 리팩토링 등이 개선됩니다\n- **최신 JavaScript 기능**: ES6+ 기능을 사용할 수 있습니다\n- **점진적 도입**: 기존 JavaScript 프로젝트에 점진적으로 적용 가능\n- **대규모 프로젝트에 적합**: 코드 유지보수성을 향상시킵니다\n\n## 설치하기\n\n```bash\nnpm install -g typescript\n```\n\n프로젝트에 설치:\n\n```bash\nnpm install --save-dev typescript\nnpx tsc --init\n```\n\n## 기본 예제\n\n```typescript\n// 기본 타입\nlet count: number = 0;\nlet message: string = \"안녕하세요\";\nlet isActive: boolean = true;\n\n// 배열\nlet numbers: number[] = [1, 2, 3, 4, 5];\nlet names: Array\u003Cstring> = [\"철수\", \"영희\", \"민수\"];\n\n// 객체\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  age?: number; // 선택적 프로퍼티\n}\n\nconst user: User = {\n  id: 1,\n  name: \"김철수\",\n  email: \"kim@example.com\"\n};\n\n// 함수\nfunction greet(name: string): string {\n  return `안녕하세요, ${name}님!`;\n}\n\nfunction add(a: number, b: number): number {\n  return a + b;\n}\n```\n\n## 고급 타입 예제\n\n```typescript\n// 제네릭\nfunction identity\u003CT>(arg: T): T {\n  return arg;\n}\n\nconst output = identity\u003Cstring>(\"안녕하세요\");\n\n// 유니온 타입\ntype Status = \"pending\" | \"success\" | \"error\";\n\nfunction handleStatus(status: Status) {\n  switch (status) {\n    case \"pending\":\n      console.log(\"처리 중...\");\n      break;\n    case \"success\":\n      console.log(\"성공!\");\n      break;\n    case \"error\":\n      console.log(\"오류 발생\");\n      break;\n  }\n}\n\n// 타입 가드\nfunction isString(value: unknown): value is string {\n  return typeof value === \"string\";\n}\n\n// 유틸리티 타입\ninterface Todo {\n  title: string;\n  description: string;\n  completed: boolean;\n}\n\ntype PartialTodo = Partial\u003CTodo>; // 모든 프로퍼티를 선택적으로\ntype ReadonlyTodo = Readonly\u003CTodo>; // 모든 프로퍼티를 읽기 전용으로\ntype TodoPreview = Pick\u003CTodo, \"title\" | \"completed\">; // 특정 프로퍼티만 선택\n```\n\n## React와 함께 사용\n\n```tsx\nimport { useState } from 'react';\n\ninterface Props {\n  title: string;\n  count?: number;\n}\n\nconst Counter: React.FC\u003CProps> = ({ title, count = 0 }) => {\n  const [value, setValue] = useState\u003Cnumber>(count);\n\n  const increment = (): void => {\n    setValue(prev => prev + 1);\n  };\n\n  return (\n    \u003Cdiv>\n      \u003Ch2>{title}\u003C/h2>\n      \u003Cp>카운트: {value}\u003C/p>\n      \u003Cbutton onClick={increment}>증가\u003C/button>\n    \u003C/div>\n  );\n};\n\nexport default Counter;\n```\n\n## 언제 사용하나요?\n\n- 대규모 애플리케이션 개발\n- 팀 프로젝트에서 코드 품질 향상\n- 리팩토링이 빈번한 프로젝트\n- 버그를 사전에 방지하고 싶을 때\n- 모든 현대적인 프론트엔드 프로젝트 (권장)\n\n## 추가 자료\n\n- [공식 문서](https://www.typescriptlang.org)\n- [TypeScript 핸드북](https://www.typescriptlang.org/docs/handbook/intro.html)\n- [TypeScript 플레이그라운드](https://www.typescriptlang.org/play)","src/content/docs/app/front/typescript.mdx","c94ff491c3e34c8c","app/front/tailwind",{"id":103,"data":105,"body":111,"filePath":112,"digest":113,"deferredRender":16},{"title":106,"description":107,"editUrl":16,"head":108,"template":18,"sidebar":109,"pagefind":16,"draft":20,"type":22},"Tailwind CSS","유틸리티 우선 CSS 프레임워크",[],{"hidden":20,"attrs":110},{},"Tailwind CSS는 유틸리티 우선 CSS 프레임워크입니다.\n\n## 주요 특징\n\n- **유틸리티 클래스**: 미리 정의된 클래스로 빠르게 스타일링\n- **반응형 디자인**: 간편한 반응형 유틸리티\n- **커스터마이징**: 디자인 시스템을 쉽게 구성\n- **작은 번들 크기**: 사용하지 않는 CSS는 자동으로 제거\n- **개발 속도 향상**: CSS 파일을 오가지 않고 빠르게 개발\n\n## 설치하기\n\n```bash\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\n```\n\n설정 파일 (`tailwind.config.js`):\n\n```javascript\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./src/**/*.{js,jsx,ts,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n```\n\nCSS 파일에 추가:\n\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\n## 기본 예제\n\n```jsx\nfunction Card() {\n  return (\n    \u003Cdiv className=\"max-w-sm rounded-lg overflow-hidden shadow-lg bg-white\">\n      \u003Cimg \n        className=\"w-full h-48 object-cover\" \n        src=\"/image.jpg\" \n        alt=\"카드 이미지\" \n      />\n      \u003Cdiv className=\"px-6 py-4\">\n        \u003Ch2 className=\"font-bold text-xl mb-2 text-gray-800\">\n          카드 제목\n        \u003C/h2>\n        \u003Cp className=\"text-gray-700 text-base\">\n          카드 설명이 여기에 들어갑니다.\n        \u003C/p>\n      \u003C/div>\n      \u003Cdiv className=\"px-6 pt-4 pb-6\">\n        \u003Cbutton className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-300\">\n          자세히 보기\n        \u003C/button>\n      \u003C/div>\n    \u003C/div>\n  );\n}\n```\n\n## 반응형 디자인\n\n```jsx\nfunction ResponsiveGrid() {\n  return (\n    \u003Cdiv className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 p-4\">\n      \u003Cdiv className=\"bg-blue-500 p-6 rounded-lg text-white\">아이템 1\u003C/div>\n      \u003Cdiv className=\"bg-green-500 p-6 rounded-lg text-white\">아이템 2\u003C/div>\n      \u003Cdiv className=\"bg-purple-500 p-6 rounded-lg text-white\">아이템 3\u003C/div>\n      \u003Cdiv className=\"bg-pink-500 p-6 rounded-lg text-white\">아이템 4\u003C/div>\n    \u003C/div>\n  );\n}\n```\n\n## 다크 모드\n\n```jsx\nfunction DarkModeExample() {\n  return (\n    \u003Cdiv className=\"bg-white dark:bg-gray-900 min-h-screen\">\n      \u003Cdiv className=\"container mx-auto px-4 py-8\">\n        \u003Ch1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n          다크 모드 지원\n        \u003C/h1>\n        \u003Cp className=\"text-gray-700 dark:text-gray-300\">\n          다크 모드에서 자동으로 색상이 변경됩니다.\n        \u003C/p>\n      \u003C/div>\n    \u003C/div>\n  );\n}\n```\n\n## 언제 사용하나요?\n\n- 빠른 프로토타이핑이 필요할 때\n- 일관된 디자인 시스템을 구축할 때\n- CSS 작성 시간을 줄이고 싶을 때\n- 반응형 디자인을 쉽게 구현하고 싶을 때\n- 커스텀 디자인이 필요한 모든 프로젝트\n\n## 추가 자료\n\n- [공식 문서](https://tailwindcss.com)\n- [Tailwind UI](https://tailwindui.com)\n- [Tailwind 플레이그라운드](https://play.tailwindcss.com)","src/content/docs/app/front/tailwind.mdx","f5091a6c1a6d97a6","app/front/redux",{"id":114,"data":116,"body":122,"filePath":123,"digest":124,"deferredRender":16},{"title":117,"description":118,"editUrl":16,"head":119,"template":18,"sidebar":120,"pagefind":16,"draft":20,"type":22},"Redux","JavaScript 애플리케이션을 위한 예측 가능한 상태 컨테이너",[],{"hidden":20,"attrs":121},{},"Redux는 JavaScript 애플리케이션을 위한 예측 가능한 상태 컨테이너입니다.\n\n## 주요 특징\n\n- **중앙 집중식 상태 관리**: 전역 상태를 한 곳에서 관리합니다\n- **예측 가능성**: 상태 변경이 예측 가능하고 추적 가능합니다\n- **디버깅 도구**: Redux DevTools로 시간 여행 디버깅\n- **미들웨어 지원**: 비동기 로직을 쉽게 처리합니다\n- **테스트하기 쉬움**: 순수 함수 기반으로 테스트가 간편합니다\n\n## 설치하기\n\nReact 프로젝트에서:\n\n```bash\nnpm install @reduxjs/toolkit react-redux\n```\n\n## 기본 예제 (Redux Toolkit 사용)\n\n```typescript\n// store/counterSlice.ts\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0\n};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action: PayloadAction\u003Cnumber>) => {\n      state.value += action.payload;\n    }\n  }\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\nexport default counterSlice.reducer;\n```\n\n```typescript\n// store/index.ts\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer\n  }\n});\n\nexport type RootState = ReturnType\u003Ctypeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n```\n\n## React 컴포넌트에서 사용\n\n```tsx\n// App.tsx\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Counter from './Counter';\n\nfunction App() {\n  return (\n    \u003CProvider store={store}>\n      \u003CCounter />\n    \u003C/Provider>\n  );\n}\n\nexport default App;\n```\n\n```tsx\n// Counter.tsx\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, incrementByAmount } from './store/counterSlice';\nimport type { RootState } from './store';\n\nfunction Counter() {\n  const count = useSelector((state: RootState) => state.counter.value);\n  const dispatch = useDispatch();\n\n  return (\n    \u003Cdiv>\n      \u003Ch2>카운트: {count}\u003C/h2>\n      \u003Cbutton onClick={() => dispatch(increment())}>\n        증가\n      \u003C/button>\n      \u003Cbutton onClick={() => dispatch(decrement())}>\n        감소\n      \u003C/button>\n      \u003Cbutton onClick={() => dispatch(incrementByAmount(5))}>\n        5 증가\n      \u003C/button>\n    \u003C/div>\n  );\n}\n\nexport default Counter;\n```\n\n## 비동기 작업 (Thunk)\n\n```typescript\n// store/userSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\ninterface UserState {\n  users: User[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: UserState = {\n  users: [],\n  loading: false,\n  error: null\n};\n\n// 비동기 thunk\nexport const fetchUsers = createAsyncThunk(\n  'users/fetchUsers',\n  async () => {\n    const response = await fetch('https://api.example.com/users');\n    return response.json();\n  }\n);\n\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUsers.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.loading = false;\n        state.users = action.payload;\n      })\n      .addCase(fetchUsers.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || '오류가 발생했습니다';\n      });\n  }\n});\n\nexport default userSlice.reducer;\n```\n\n## 언제 사용하나요?\n\n- 여러 컴포넌트가 같은 상태를 공유할 때\n- 복잡한 상태 로직이 필요할 때\n- 상태 변경을 추적하고 디버깅해야 할 때\n- 대규모 애플리케이션에서 예측 가능한 상태 관리가 필요할 때\n\n## 대안\n\n- **Zustand**: 더 간단한 API\n- **Jotai**: 원자적 상태 관리\n- **MobX**: 반응형 상태 관리\n- **React Context**: 간단한 전역 상태\n\n## 추가 자료\n\n- [공식 문서](https://redux.js.org)\n- [Redux Toolkit](https://redux-toolkit.js.org)\n- [Redux DevTools](https://github.com/reduxjs/redux-devtools)","src/content/docs/app/front/redux.mdx","ef55eba9440c1311","app/front/react-query",{"id":125,"data":127,"body":133,"filePath":134,"digest":135,"deferredRender":16},{"title":128,"description":129,"editUrl":16,"head":130,"template":18,"sidebar":131,"pagefind":16,"draft":20,"type":22},"React Query (TanStack Query)","서버 상태 관리를 위한 강력한 라이브러리",[],{"hidden":20,"attrs":132},{},"React Query는 서버 상태 관리를 위한 강력한 라이브러리입니다.\n\n## 주요 특징\n\n- **자동 캐싱**: 서버 데이터를 자동으로 캐싱합니다\n- **백그라운드 업데이트**: 오래된 데이터를 자동으로 갱신합니다\n- **중복 요청 제거**: 같은 데이터에 대한 중복 요청을 방지합니다\n- **페이지네이션**: 페이지네이션과 무한 스크롤을 쉽게 구현\n- **낙관적 업데이트**: UI 반응성을 향상시킵니다\n\n## 설치하기\n\n```bash\nnpm install @tanstack/react-query\n```\n\nDevTools (개발 환경):\n\n```bash\nnpm install @tanstack/react-query-devtools\n```\n\n## 기본 설정\n\n```tsx\n// App.tsx\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5분\n    },\n  },\n});\n\nfunction App() {\n  return (\n    \u003CQueryClientProvider client={queryClient}>\n      \u003CYourApp />\n      \u003CReactQueryDevtools initialIsOpen={false} />\n    \u003C/QueryClientProvider>\n  );\n}\n\nexport default App;\n```\n\n## 데이터 조회 (useQuery)\n\n```tsx\nimport { useQuery } from '@tanstack/react-query';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\nasync function fetchUsers(): Promise\u003CUser[]> {\n  const response = await fetch('https://api.example.com/users');\n  if (!response.ok) {\n    throw new Error('네트워크 오류');\n  }\n  return response.json();\n}\n\nfunction UserList() {\n  const { data, isLoading, error, refetch } = useQuery({\n    queryKey: ['users'],\n    queryFn: fetchUsers,\n  });\n\n  if (isLoading) return \u003Cdiv>로딩 중...\u003C/div>;\n  if (error) return \u003Cdiv>오류: {error.message}\u003C/div>;\n\n  return (\n    \u003Cdiv>\n      \u003Cbutton onClick={() => refetch()}>새로고침\u003C/button>\n      \u003Cul>\n        {data?.map(user => (\n          \u003Cli key={user.id}>\n            {user.name} - {user.email}\n          \u003C/li>\n        ))}\n      \u003C/ul>\n    \u003C/div>\n  );\n}\n\nexport default UserList;\n```\n\n## 데이터 수정 (useMutation)\n\n```tsx\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\n\ninterface CreateUserData {\n  name: string;\n  email: string;\n}\n\nasync function createUser(userData: CreateUserData): Promise\u003CUser> {\n  const response = await fetch('https://api.example.com/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n  return response.json();\n}\n\nfunction CreateUserForm() {\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: createUser,\n    onSuccess: () => {\n      // 사용자 목록을 다시 가져옵니다\n      queryClient.invalidateQueries({ queryKey: ['users'] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent\u003CHTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    mutation.mutate({\n      name: formData.get('name') as string,\n      email: formData.get('email') as string,\n    });\n  };\n\n  return (\n    \u003Cform onSubmit={handleSubmit}>\n      \u003Cinput name=\"name\" placeholder=\"이름\" required />\n      \u003Cinput name=\"email\" type=\"email\" placeholder=\"이메일\" required />\n      \u003Cbutton type=\"submit\" disabled={mutation.isPending}>\n        {mutation.isPending ? '생성 중...' : '사용자 생성'}\n      \u003C/button>\n      {mutation.isError && (\n        \u003Cdiv>오류: {mutation.error.message}\u003C/div>\n      )}\n      {mutation.isSuccess && (\n        \u003Cdiv>사용자가 생성되었습니다!\u003C/div>\n      )}\n    \u003C/form>\n  );\n}\n\nexport default CreateUserForm;\n```\n\n## 무한 스크롤\n\n```tsx\nimport { useInfiniteQuery } from '@tanstack/react-query';\n\ninterface PostsResponse {\n  posts: Post[];\n  nextCursor: number | null;\n}\n\nasync function fetchPosts({ pageParam = 0 }): Promise\u003CPostsResponse> {\n  const response = await fetch(`https://api.example.com/posts?cursor=${pageParam}`);\n  return response.json();\n}\n\nfunction InfinitePostList() {\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery({\n    queryKey: ['posts'],\n    queryFn: fetchPosts,\n    getNextPageParam: (lastPage) => lastPage.nextCursor,\n    initialPageParam: 0,\n  });\n\n  return (\n    \u003Cdiv>\n      {data?.pages.map((page, i) => (\n        \u003Cdiv key={i}>\n          {page.posts.map(post => (\n            \u003Cdiv key={post.id}>\n              \u003Ch3>{post.title}\u003C/h3>\n              \u003Cp>{post.content}\u003C/p>\n            \u003C/div>\n          ))}\n        \u003C/div>\n      ))}\n      \u003Cbutton\n        onClick={() => fetchNextPage()}\n        disabled={!hasNextPage || isFetchingNextPage}\n      >\n        {isFetchingNextPage\n          ? '로딩 중...'\n          : hasNextPage\n          ? '더 보기'\n          : '더 이상 없습니다'}\n      \u003C/button>\n    \u003C/div>\n  );\n}\n\nexport default InfinitePostList;\n```\n\n## 언제 사용하나요?\n\n- 서버 데이터를 다루는 모든 React 애플리케이션\n- RESTful API 또는 GraphQL과 통신할 때\n- 캐싱과 동기화가 필요할 때\n- 복잡한 데이터 페칭 로직을 단순화하고 싶을 때\n- 낙관적 업데이트가 필요한 경우\n\n## Redux vs React Query\n\n- **Redux**: 클라이언트 상태 관리 (UI 상태, 폼 데이터 등)\n- **React Query**: 서버 상태 관리 (API 데이터, 캐싱 등)\n- 함께 사용하면 각각의 장점을 활용할 수 있습니다\n\n## 추가 자료\n\n- [공식 문서](https://tanstack.com/query/latest)\n- [React Query 예제](https://tanstack.com/query/latest/docs/react/examples/simple)\n- [TanStack Query DevTools](https://tanstack.com/query/latest/docs/react/devtools)","src/content/docs/app/front/react-query.mdx","3c5ef9fed026370d","app/backend/nodejs",{"id":136,"data":138,"body":144,"filePath":145,"digest":146,"deferredRender":16},{"title":139,"description":140,"editUrl":16,"head":141,"template":18,"sidebar":142,"pagefind":16,"draft":20,"type":22},"Node.js","JavaScript 런타임 환경",[],{"hidden":20,"attrs":143},{},"Node.js는 Chrome V8 JavaScript 엔진으로 빌드된 JavaScript 런타임 환경입니다.\n\n## 주요 특징\n\n- **비동기 I/O**: 논블로킹 I/O 모델로 높은 성능을 제공합니다\n- **이벤트 기반**: 이벤트 루프를 통한 효율적인 처리\n- **NPM 생태계**: 방대한 패키지 생태계\n- **크로스 플랫폼**: 여러 운영체제에서 실행 가능\n- **확장성**: 마이크로서비스 아키텍처에 적합\n\n## 설치하기\n\n```bash\n# nvm을 사용한 설치 (권장)\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\nnvm install --lts\nnvm use --lts\n\n# 직접 설치\n# https://nodejs.org 에서 다운로드\n```\n\n## 기본 HTTP 서버\n\n```javascript\nconst http = require('http');\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('안녕하세요, Node.js!');\n});\n\nconst PORT = 3000;\nserver.listen(PORT, () => {\n  console.log(`서버가 http://localhost:${PORT} 에서 실행 중입니다`);\n});\n```\n\n## Express와 함께 사용\n\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.use(express.json());\n\napp.get('/', (req, res) => {\n  res.json({ message: '안녕하세요!' });\n});\n\napp.listen(3000, () => {\n  console.log('서버가 3000번 포트에서 실행 중입니다');\n});\n```\n\n## 파일 시스템 작업\n\n```javascript\nconst fs = require('fs').promises;\n\nasync function readFile() {\n  try {\n    const data = await fs.readFile('example.txt', 'utf8');\n    console.log(data);\n  } catch (error) {\n    console.error('파일 읽기 오류:', error);\n  }\n}\n\nasync function writeFile() {\n  try {\n    await fs.writeFile('example.txt', '안녕하세요, Node.js!');\n    console.log('파일이 생성되었습니다');\n  } catch (error) {\n    console.error('파일 쓰기 오류:', error);\n  }\n}\n```\n\n## 언제 사용하나요?\n\n- RESTful API 서버 구축\n- 실시간 애플리케이션 (채팅, 게임)\n- 마이크로서비스 아키텍처\n- 서버리스 함수\n- CLI 도구 개발\n\n## 추가 자료\n\n- [공식 문서](https://nodejs.org)\n- [Node.js 가이드](https://nodejs.dev/learn)","src/content/docs/app/backend/nodejs.mdx","66432b34a2cbb437","app/backend/express",{"id":147,"data":149,"body":155,"filePath":156,"digest":157,"deferredRender":16},{"title":150,"description":151,"editUrl":16,"head":152,"template":18,"sidebar":153,"pagefind":16,"draft":20,"type":22},"Express","Node.js를 위한 빠르고 간결한 웹 프레임워크",[],{"hidden":20,"attrs":154},{},"Express는 Node.js를 위한 빠르고 간결한 웹 프레임워크입니다.\n\n## 주요 특징\n\n- **미들웨어 시스템**: 요청 처리 파이프라인을 쉽게 구성\n- **라우팅**: 강력하고 유연한 라우팅 시스템\n- **템플릿 엔진**: 다양한 템플릿 엔진 지원\n- **확장성**: 플러그인과 미들웨어로 기능 확장\n- **간결함**: 최소한의 보일러플레이트 코드\n\n## 설치하기\n\n```bash\nnpm install express\n```\n\n## 기본 예제\n\n```javascript\nconst express = require('express');\nconst app = express();\n\n// 미들웨어\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// 라우트\napp.get('/', (req, res) => {\n  res.json({ message: 'Express 서버입니다!' });\n});\n\napp.post('/users', (req, res) => {\n  const user = req.body;\n  res.status(201).json({ id: 1, ...user });\n});\n\napp.listen(3000, () => {\n  console.log('서버가 3000번 포트에서 실행 중입니다');\n});\n```\n\n## RESTful API 예제\n\n```javascript\nconst express = require('express');\nconst router = express.Router();\n\n// 사용자 목록 조회\nrouter.get('/users', async (req, res) => {\n  try {\n    const users = await User.findAll();\n    res.json(users);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\n// 사용자 생성\nrouter.post('/users', async (req, res) => {\n  try {\n    const user = await User.create(req.body);\n    res.status(201).json(user);\n  } catch (error) {\n    res.status(400).json({ error: error.message });\n  }\n});\n\n// 사용자 조회\nrouter.get('/users/:id', async (req, res) => {\n  try {\n    const user = await User.findByPk(req.params.id);\n    if (!user) {\n      return res.status(404).json({ error: '사용자를 찾을 수 없습니다' });\n    }\n    res.json(user);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\nmodule.exports = router;\n```\n\n## 미들웨어 예제\n\n```javascript\n// 로깅 미들웨어\nconst logger = (req, res, next) => {\n  console.log(`${req.method} ${req.url}`);\n  next();\n};\n\n// 인증 미들웨어\nconst authenticate = (req, res, next) => {\n  const token = req.headers.authorization;\n  \n  if (!token) {\n    return res.status(401).json({ error: '인증이 필요합니다' });\n  }\n  \n  // 토큰 검증 로직\n  next();\n};\n\n// 에러 핸들링 미들웨어\nconst errorHandler = (err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ error: '서버 오류가 발생했습니다' });\n};\n\napp.use(logger);\napp.use('/api', authenticate);\napp.use(errorHandler);\n```\n\n## 언제 사용하나요?\n\n- 빠르게 RESTful API를 구축할 때\n- 간단한 웹 애플리케이션 개발\n- 마이크로서비스 구축\n- 프로토타입 개발\n\n## 추가 자료\n\n- [공식 문서](https://expressjs.com)\n- [Express 가이드](https://expressjs.com/en/guide/routing.html)","src/content/docs/app/backend/express.mdx","dcc49b5b337986d4","app/backend/nestjs",{"id":158,"data":160,"body":166,"filePath":167,"digest":168,"deferredRender":16},{"title":161,"description":162,"editUrl":16,"head":163,"template":18,"sidebar":164,"pagefind":16,"draft":20,"type":22},"NestJS","효율적이고 확장 가능한 Node.js 서버 애플리케이션을 구축하기 위한 프레임워크",[],{"hidden":20,"attrs":165},{},"NestJS는 효율적이고 확장 가능한 Node.js 서버 애플리케이션을 구축하기 위한 프레임워크입니다.\n\n## 주요 특징\n\n- **TypeScript 기반**: 강력한 타입 시스템\n- **모듈식 아키텍처**: 잘 구조화된 코드 조직\n- **의존성 주입**: 테스트와 유지보수가 용이\n- **데코레이터**: 선언적 프로그래밍 스타일\n- **다양한 플랫폼**: Express와 Fastify 지원\n\n## 설치하기\n\n```bash\nnpm i -g @nestjs/cli\nnest new my-project\ncd my-project\nnpm run start:dev\n```\n\n## 기본 컨트롤러\n\n```typescript\nimport { Controller, Get, Post, Body, Param } from '@nestjs/common';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n}\n```\n\n## 서비스 예제\n\n```typescript\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService {\n  private users = [];\n\n  findAll() {\n    return this.users;\n  }\n\n  findOne(id: number) {\n    return this.users.find(user => user.id === id);\n  }\n\n  create(createUserDto: CreateUserDto) {\n    const user = {\n      id: Date.now(),\n      ...createUserDto,\n    };\n    this.users.push(user);\n    return user;\n  }\n}\n```\n\n## 모듈 구조\n\n```typescript\nimport { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n```\n\n## DTO와 유효성 검사\n\n```typescript\nimport { IsEmail, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @MinLength(2)\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @MinLength(8)\n  password: string;\n}\n```\n\n## 가드 (인증)\n\n```typescript\nimport { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise\u003Cboolean> | Observable\u003Cboolean> {\n    const request = context.switchToHttp().getRequest();\n    return validateRequest(request);\n  }\n}\n\n// 사용\n@UseGuards(AuthGuard)\n@Get()\nfindAll() {\n  return this.usersService.findAll();\n}\n```\n\n## 언제 사용하나요?\n\n- 대규모 엔터프라이즈 애플리케이션\n- 확장 가능한 마이크로서비스\n- GraphQL API 서버\n- WebSocket 실시간 애플리케이션\n- 구조화된 백엔드가 필요한 프로젝트\n\n## 추가 자료\n\n- [공식 문서](https://nestjs.com)\n- [NestJS 코스](https://courses.nestjs.com)","src/content/docs/app/backend/nestjs.mdx","4d73d35e963fbf2e","app/backend/django",{"id":169,"data":171,"body":177,"filePath":178,"digest":179,"deferredRender":16},{"title":172,"description":173,"editUrl":16,"head":174,"template":18,"sidebar":175,"pagefind":16,"draft":20,"type":22},"Django","Python 기반의 고수준 웹 프레임워크",[],{"hidden":20,"attrs":176},{},"Django는 빠른 개발과 깔끔하고 실용적인 디자인을 장려하는 Python 웹 프레임워크입니다.\n\n## 주요 특징\n\n- **배터리 포함**: ORM, 인증, 관리자 페이지 등 기본 제공\n- **보안**: SQL 인젝션, XSS 등 보안 기능 내장\n- **ORM**: 강력한 데이터베이스 추상화 계층\n- **Admin 인터페이스**: 자동 생성되는 관리자 페이지\n- **확장성**: 대규모 애플리케이션에 적합\n\n## 설치하기\n\n```bash\npip install django\ndjango-admin startproject myproject\ncd myproject\npython manage.py runserver\n```\n\n## 기본 모델\n\n```python\nfrom django.db import models\n\nclass User(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n\n    class Meta:\n        db_table = 'users'\n        ordering = ['-created_at']\n\n    def __str__(self):\n        return self.name\n```\n\n## 뷰 (Views)\n\n```python\nfrom django.shortcuts import render, get_object_or_404\nfrom django.http import JsonResponse\nfrom .models import User\n\ndef user_list(request):\n    users = User.objects.all()\n    return JsonResponse({\n        'users': list(users.values())\n    })\n\ndef user_detail(request, pk):\n    user = get_object_or_404(User, pk=pk)\n    return JsonResponse({\n        'id': user.id,\n        'name': user.name,\n        'email': user.email,\n    })\n```\n\n## URL 라우팅\n\n```python\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('users/', views.user_list, name='user-list'),\n    path('users/\u003Cint:pk>/', views.user_detail, name='user-detail'),\n]\n```\n\n## Django REST Framework\n\n```python\nfrom rest_framework import viewsets, serializers\nfrom .models import User\n\nclass UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['id', 'name', 'email', 'created_at']\n\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n```\n\n## 폼 (Forms)\n\n```python\nfrom django import forms\nfrom .models import User\n\nclass UserForm(forms.ModelForm):\n    class Meta:\n        model = User\n        fields = ['name', 'email']\n        \n    def clean_email(self):\n        email = self.cleaned_data['email']\n        if User.objects.filter(email=email).exists():\n            raise forms.ValidationError('이미 사용 중인 이메일입니다')\n        return email\n```\n\n## 인증\n\n```python\nfrom django.contrib.auth.decorators import login_required\nfrom django.contrib.auth import authenticate, login\n\n@login_required\ndef protected_view(request):\n    return render(request, 'protected.html')\n\ndef login_view(request):\n    if request.method == 'POST':\n        username = request.POST['username']\n        password = request.POST['password']\n        user = authenticate(request, username=username, password=password)\n        if user is not None:\n            login(request, user)\n            return redirect('home')\n    return render(request, 'login.html')\n```\n\n## 언제 사용하나요?\n\n- 콘텐츠 관리 시스템 (CMS)\n- 전자상거래 플랫폼\n- 데이터 기반 웹 애플리케이션\n- RESTful API 서버\n- 소셜 네트워크 플랫폼\n\n## 추가 자료\n\n- [공식 문서](https://www.djangoproject.com)\n- [Django REST Framework](https://www.django-rest-framework.org)","src/content/docs/app/backend/django.mdx","42f7932380a96f1a","app/backend/fastapi",{"id":180,"data":182,"body":188,"filePath":189,"digest":190,"deferredRender":16},{"title":183,"description":184,"editUrl":16,"head":185,"template":18,"sidebar":186,"pagefind":16,"draft":20,"type":22},"FastAPI","현대적이고 빠른 Python 웹 프레임워크",[],{"hidden":20,"attrs":187},{},"FastAPI는 Python 3.7+의 표준 타입 힌트를 기반으로 한 현대적이고 빠른 웹 프레임워크입니다.\n\n## 주요 특징\n\n- **빠른 성능**: NodeJS와 Go에 필적하는 성능\n- **자동 문서화**: Swagger UI와 ReDoc 자동 생성\n- **타입 힌트**: Pydantic을 통한 데이터 유효성 검사\n- **비동기 지원**: async/await 네이티브 지원\n- **빠른 개발**: 직관적이고 사용하기 쉬움\n\n## 설치하기\n\n```bash\npip install fastapi uvicorn[standard]\n```\n\n## 기본 예제\n\n```python\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"안녕하세요, FastAPI!\"}\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: str = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n# 실행: uvicorn main:app --reload\n```\n\n## Pydantic 모델\n\n```python\nfrom pydantic import BaseModel, EmailStr\nfrom typing import Optional\n\nclass User(BaseModel):\n    name: str\n    email: EmailStr\n    age: Optional[int] = None\n    is_active: bool = True\n\n@app.post(\"/users/\")\nasync def create_user(user: User):\n    return user\n\n@app.get(\"/users/{user_id}\", response_model=User)\nasync def read_user(user_id: int):\n    return {\"name\": \"홍길동\", \"email\": \"hong@example.com\"}\n```\n\n## 데이터베이스 연동\n\n```python\nfrom sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nDATABASE_URL = \"sqlite:///./test.db\"\n\nengine = create_engine(DATABASE_URL)\nSessionLocal = sessionmaker(bind=engine)\nBase = declarative_base()\n\nclass UserDB(Base):\n    __tablename__ = \"users\"\n    \n    id = Column(Integer, primary_key=True, index=True)\n    name = Column(String)\n    email = Column(String, unique=True, index=True)\n\nBase.metadata.create_all(bind=engine)\n\n@app.post(\"/users/\")\nasync def create_user(user: User):\n    db = SessionLocal()\n    db_user = UserDB(**user.dict())\n    db.add(db_user)\n    db.commit()\n    db.refresh(db_user)\n    db.close()\n    return db_user\n```\n\n## 의존성 주입\n\n```python\nfrom fastapi import Depends, HTTPException\n\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n@app.get(\"/users/\")\nasync def read_users(skip: int = 0, limit: int = 100, db: Session = Depends(get_db)):\n    users = db.query(UserDB).offset(skip).limit(limit).all()\n    return users\n```\n\n## 인증\n\n```python\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\n\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"token\")\n\n@app.post(\"/token\")\nasync def login(form_data: OAuth2PasswordRequestForm = Depends()):\n    user = authenticate_user(form_data.username, form_data.password)\n    if not user:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"잘못된 인증 정보\",\n        )\n    return {\"access_token\": user.email, \"token_type\": \"bearer\"}\n\n@app.get(\"/users/me\")\nasync def read_users_me(token: str = Depends(oauth2_scheme)):\n    return {\"token\": token}\n```\n\n## WebSocket\n\n```python\nfrom fastapi import WebSocket\n\n@app.websocket(\"/ws\")\nasync def websocket_endpoint(websocket: WebSocket):\n    await websocket.accept()\n    while True:\n        data = await websocket.receive_text()\n        await websocket.send_text(f\"메시지: {data}\")\n```\n\n## 언제 사용하나요?\n\n- 고성능 RESTful API\n- 머신러닝 모델 서빙\n- 실시간 데이터 처리\n- 마이크로서비스 아키텍처\n- 빠른 프로토타입 개발\n\n## 추가 자료\n\n- [공식 문서](https://fastapi.tiangolo.com)\n- [FastAPI 튜토리얼](https://fastapi.tiangolo.com/tutorial/)","src/content/docs/app/backend/fastapi.mdx","1eea45c954a51d6b","app/backend/spring-boot",{"id":191,"data":193,"body":199,"filePath":200,"digest":201,"deferredRender":16},{"title":194,"description":195,"editUrl":16,"head":196,"template":18,"sidebar":197,"pagefind":16,"draft":20,"type":22},"Spring Boot","Java 기반의 강력한 애플리케이션 프레임워크",[],{"hidden":20,"attrs":198},{},"Spring Boot는 독립 실행형 프로덕션 급 Spring 기반 애플리케이션을 쉽게 만들 수 있게 해주는 프레임워크입니다.\n\n## 주요 특징\n\n- **자동 설정**: 최소한의 설정으로 빠른 시작\n- **내장 서버**: Tomcat, Jetty 등 내장\n- **프로덕션 준비**: 모니터링, 헬스 체크 기능 내장\n- **의존성 관리**: 스타터를 통한 간편한 의존성 관리\n- **마이크로서비스**: 클라우드 네이티브 애플리케이션에 적합\n\n## 프로젝트 생성\n\n[Spring Initializr](https://start.spring.io)에서 생성하거나:\n\n```bash\ncurl https://start.spring.io/starter.zip \\\n  -d dependencies=web,data-jpa,h2 \\\n  -d name=myproject \\\n  -o myproject.zip\nunzip myproject.zip\ncd myproject\n./mvnw spring-boot:run\n```\n\n## 기본 REST 컨트롤러\n\n```java\n@RestController\n@RequestMapping(\"/api/users\")\npublic class UserController {\n    \n    @Autowired\n    private UserService userService;\n    \n    @GetMapping\n    public List\u003CUser> getAllUsers() {\n        return userService.findAll();\n    }\n    \n    @GetMapping(\"/{id}\")\n    public ResponseEntity\u003CUser> getUserById(@PathVariable Long id) {\n        return userService.findById(id)\n            .map(ResponseEntity::ok)\n            .orElse(ResponseEntity.notFound().build());\n    }\n    \n    @PostMapping\n    public ResponseEntity\u003CUser> createUser(@Valid @RequestBody User user) {\n        User created = userService.save(user);\n        return ResponseEntity.status(HttpStatus.CREATED).body(created);\n    }\n    \n    @PutMapping(\"/{id}\")\n    public ResponseEntity\u003CUser> updateUser(\n        @PathVariable Long id,\n        @Valid @RequestBody User user\n    ) {\n        return userService.update(id, user)\n            .map(ResponseEntity::ok)\n            .orElse(ResponseEntity.notFound().build());\n    }\n    \n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity\u003CVoid> deleteUser(@PathVariable Long id) {\n        userService.delete(id);\n        return ResponseEntity.noContent().build();\n    }\n}\n```\n\n## 엔티티 정의\n\n```java\n@Entity\n@Table(name = \"users\")\npublic class User {\n    \n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    \n    @Column(nullable = false)\n    @NotBlank(message = \"이름은 필수입니다\")\n    private String name;\n    \n    @Column(unique = true, nullable = false)\n    @Email(message = \"유효한 이메일을 입력하세요\")\n    private String email;\n    \n    @CreatedDate\n    private LocalDateTime createdAt;\n    \n    @LastModifiedDate\n    private LocalDateTime updatedAt;\n    \n    // Getters and Setters\n}\n```\n\n## Repository\n\n```java\n@Repository\npublic interface UserRepository extends JpaRepository\u003CUser, Long> {\n    Optional\u003CUser> findByEmail(String email);\n    \n    List\u003CUser> findByNameContaining(String name);\n    \n    @Query(\"SELECT u FROM User u WHERE u.createdAt > :date\")\n    List\u003CUser> findRecentUsers(@Param(\"date\") LocalDateTime date);\n}\n```\n\n## Service Layer\n\n```java\n@Service\n@Transactional\npublic class UserService {\n    \n    @Autowired\n    private UserRepository userRepository;\n    \n    public List\u003CUser> findAll() {\n        return userRepository.findAll();\n    }\n    \n    public Optional\u003CUser> findById(Long id) {\n        return userRepository.findById(id);\n    }\n    \n    public User save(User user) {\n        return userRepository.save(user);\n    }\n    \n    public Optional\u003CUser> update(Long id, User userDetails) {\n        return userRepository.findById(id)\n            .map(user -> {\n                user.setName(userDetails.getName());\n                user.setEmail(userDetails.getEmail());\n                return userRepository.save(user);\n            });\n    }\n    \n    public void delete(Long id) {\n        userRepository.deleteById(id);\n    }\n}\n```\n\n## 설정 파일 (application.yml)\n\n```yaml\nspring:\n  datasource:\n    url: jdbc:postgresql://localhost:5432/mydb\n    username: user\n    password: password\n  jpa:\n    hibernate:\n      ddl-auto: update\n    show-sql: true\n    properties:\n      hibernate:\n        format_sql: true\n  \nserver:\n  port: 8080\n\nlogging:\n  level:\n    org.springframework: INFO\n    com.example: DEBUG\n```\n\n## 예외 처리\n\n```java\n@RestControllerAdvice\npublic class GlobalExceptionHandler {\n    \n    @ExceptionHandler(ResourceNotFoundException.class)\n    public ResponseEntity\u003CErrorResponse> handleNotFound(\n        ResourceNotFoundException ex\n    ) {\n        ErrorResponse error = new ErrorResponse(\n            HttpStatus.NOT_FOUND.value(),\n            ex.getMessage()\n        );\n        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(error);\n    }\n    \n    @ExceptionHandler(MethodArgumentNotValidException.class)\n    public ResponseEntity\u003CErrorResponse> handleValidation(\n        MethodArgumentNotValidException ex\n    ) {\n        List\u003CString> errors = ex.getBindingResult()\n            .getFieldErrors()\n            .stream()\n            .map(FieldError::getDefaultMessage)\n            .collect(Collectors.toList());\n        \n        ErrorResponse error = new ErrorResponse(\n            HttpStatus.BAD_REQUEST.value(),\n            \"유효성 검사 실패\",\n            errors\n        );\n        return ResponseEntity.badRequest().body(error);\n    }\n}\n```\n\n## 언제 사용하나요?\n\n- 대규모 엔터프라이즈 애플리케이션\n- 마이크로서비스 아키텍처\n- 금융, 은행 시스템\n- 복잡한 비즈니스 로직이 필요한 프로젝트\n- 높은 안정성과 보안이 요구되는 시스템\n\n## 추가 자료\n\n- [공식 문서](https://spring.io/projects/spring-boot)\n- [Spring Guides](https://spring.io/guides)","src/content/docs/app/backend/spring-boot.mdx","f6f4e1e95902a08b","app/backend/laravel",{"id":202,"data":204,"body":210,"filePath":211,"digest":212,"deferredRender":16},{"title":205,"description":206,"editUrl":16,"head":207,"template":18,"sidebar":208,"pagefind":16,"draft":20,"type":22},"Laravel","PHP를 위한 우아한 웹 애플리케이션 프레임워크",[],{"hidden":20,"attrs":209},{},"Laravel은 웹 장인을 위한 PHP 프레임워크로, 우아한 문법과 강력한 기능을 제공합니다.\n\n## 주요 특징\n\n- **Eloquent ORM**: 아름다운 ActiveRecord 구현\n- **Blade 템플릿**: 강력하고 직관적인 템플릿 엔진\n- **Artisan CLI**: 강력한 커맨드라인 도구\n- **미들웨어**: 요청 필터링 시스템\n- **큐와 스케줄링**: 백그라운드 작업 처리\n\n## 설치하기\n\n```bash\ncomposer create-project laravel/laravel my-project\ncd my-project\nphp artisan serve\n```\n\n## 라우팅\n\n```php\n// routes/web.php\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::get('/users', [UserController::class, 'index']);\nRoute::post('/users', [UserController::class, 'store']);\nRoute::get('/users/{id}', [UserController::class, 'show']);\nRoute::put('/users/{id}', [UserController::class, 'update']);\nRoute::delete('/users/{id}', [UserController::class, 'destroy']);\n\n// API 라우트\nRoute::apiResource('users', UserController::class);\n```\n\n## 컨트롤러\n\n```php\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\n\nclass UserController extends Controller\n{\n    public function index()\n    {\n        $users = User::all();\n        return response()->json($users);\n    }\n    \n    public function show($id)\n    {\n        $user = User::findOrFail($id);\n        return response()->json($user);\n    }\n    \n    public function store(Request $request)\n    {\n        $validated = $request->validate([\n            'name' => 'required|string|max:255',\n            'email' => 'required|email|unique:users',\n            'password' => 'required|min:8',\n        ]);\n        \n        $user = User::create([\n            'name' => $validated['name'],\n            'email' => $validated['email'],\n            'password' => bcrypt($validated['password']),\n        ]);\n        \n        return response()->json($user, 201);\n    }\n    \n    public function update(Request $request, $id)\n    {\n        $user = User::findOrFail($id);\n        \n        $validated = $request->validate([\n            'name' => 'string|max:255',\n            'email' => 'email|unique:users,email,' . $id,\n        ]);\n        \n        $user->update($validated);\n        return response()->json($user);\n    }\n    \n    public function destroy($id)\n    {\n        User::destroy($id);\n        return response()->json(null, 204);\n    }\n}\n```\n\n## Eloquent 모델\n\n```php\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass User extends Model\n{\n    protected $fillable = ['name', 'email', 'password'];\n    \n    protected $hidden = ['password'];\n    \n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n    \n    // 관계 정의\n    public function posts()\n    {\n        return $this->hasMany(Post::class);\n    }\n    \n    public function roles()\n    {\n        return $this->belongsToMany(Role::class);\n    }\n}\n```\n\n## 마이그레이션\n\n```php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    public function up()\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->id();\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->rememberToken();\n            $table->timestamps();\n        });\n    }\n    \n    public function down()\n    {\n        Schema::dropIfExists('users');\n    }\n};\n```\n\n## 미들웨어\n\n```php\nnamespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass CheckAge\n{\n    public function handle($request, Closure $next)\n    {\n        if ($request->age \u003C= 18) {\n            return redirect('home');\n        }\n        \n        return $next($request);\n    }\n}\n\n// 사용\nRoute::get('profile', function () {\n    //\n})->middleware('check.age');\n```\n\n## Blade 템플릿\n\n```php\n\u003C!-- resources/views/users/index.blade.php -->\n@extends('layouts.app')\n\n@section('content')\n    \u003Ch1>사용자 목록\u003C/h1>\n    \n    @if(count($users) > 0)\n        \u003Cul>\n            @foreach($users as $user)\n                \u003Cli>{{ $user->name }} - {{ $user->email }}\u003C/li>\n            @endforeach\n        \u003C/ul>\n    @else\n        \u003Cp>사용자가 없습니다.\u003C/p>\n    @endif\n@endsection\n```\n\n## Artisan 명령어\n\n```bash\n# 모델과 마이그레이션 생성\nphp artisan make:model User -m\n\n# 컨트롤러 생성\nphp artisan make:controller UserController --resource\n\n# 마이그레이션 실행\nphp artisan migrate\n\n# 시더 실행\nphp artisan db:seed\n\n# 큐 워커 실행\nphp artisan queue:work\n\n# 캐시 클리어\nphp artisan cache:clear\n```\n\n## 언제 사용하나요?\n\n- 콘텐츠 관리 시스템\n- 전자상거래 플랫폼\n- SaaS 애플리케이션\n- RESTful API 개발\n- 빠른 프로토타입 개발\n\n## 추가 자료\n\n- [공식 문서](https://laravel.com/docs)\n- [Laracasts](https://laracasts.com)","src/content/docs/app/backend/laravel.mdx","5853c0afd887020a","app/backend/rails",{"id":213,"data":215,"body":221,"filePath":222,"digest":223,"deferredRender":16},{"title":216,"description":217,"editUrl":16,"head":218,"template":18,"sidebar":219,"pagefind":16,"draft":20,"type":22},"Ruby on Rails","Ruby로 작성된 서버 사이드 웹 애플리케이션 프레임워크",[],{"hidden":20,"attrs":220},{},"Ruby on Rails는 Convention over Configuration 원칙을 따르는 웹 애플리케이션 프레임워크입니다.\n\n## 주요 특징\n\n- **Convention over Configuration**: 설정보다 규약\n- **DRY 원칙**: Don't Repeat Yourself\n- **Active Record**: 강력한 ORM 패턴\n- **RESTful 디자인**: REST 원칙을 기본으로 채택\n- **빠른 개발**: 높은 생산성\n\n## 설치하기\n\n```bash\ngem install rails\nrails new myapp\ncd myapp\nrails server\n```\n\n## 라우팅\n\n```ruby\n# config/routes.rb\nRails.application.routes.draw do\n  root 'home#index'\n  \n  resources :users\n  \n  # API 전용\n  namespace :api do\n    namespace :v1 do\n      resources :users, only: [:index, :show, :create, :update, :destroy]\n    end\n  end\nend\n```\n\n## 컨트롤러\n\n```ruby\n# app/controllers/users_controller.rb\nclass UsersController \u003C ApplicationController\n  before_action :set_user, only: [:show, :update, :destroy]\n  \n  def index\n    @users = User.all\n    render json: @users\n  end\n  \n  def show\n    render json: @user\n  end\n  \n  def create\n    @user = User.new(user_params)\n    \n    if @user.save\n      render json: @user, status: :created\n    else\n      render json: @user.errors, status: :unprocessable_entity\n    end\n  end\n  \n  def update\n    if @user.update(user_params)\n      render json: @user\n    else\n      render json: @user.errors, status: :unprocessable_entity\n    end\n  end\n  \n  def destroy\n    @user.destroy\n    head :no_content\n  end\n  \n  private\n  \n  def set_user\n    @user = User.find(params[:id])\n  end\n  \n  def user_params\n    params.require(:user).permit(:name, :email, :password)\n  end\nend\n```\n\n## 모델\n\n```ruby\n# app/models/user.rb\nclass User \u003C ApplicationRecord\n  has_secure_password\n  \n  has_many :posts, dependent: :destroy\n  has_many :comments\n  \n  validates :name, presence: true\n  validates :email, presence: true, uniqueness: true, format: { with: URI::MailTo::EMAIL_REGEXP }\n  validates :password, length: { minimum: 8 }, if: :password_required?\n  \n  before_save :downcase_email\n  \n  scope :active, -> { where(active: true) }\n  scope :recent, -> { order(created_at: :desc) }\n  \n  def full_name\n    \"#{first_name} #{last_name}\"\n  end\n  \n  private\n  \n  def downcase_email\n    self.email = email.downcase\n  end\n  \n  def password_required?\n    password_digest.nil? || password.present?\n  end\nend\n```\n\n## 마이그레이션\n\n```ruby\n# db/migrate/20240101000000_create_users.rb\nclass CreateUsers \u003C ActiveRecord::Migration[7.0]\n  def change\n    create_table :users do |t|\n      t.string :name, null: false\n      t.string :email, null: false\n      t.string :password_digest\n      t.boolean :active, default: true\n      \n      t.timestamps\n    end\n    \n    add_index :users, :email, unique: true\n  end\nend\n\n# 실행\nrails db:migrate\n```\n\n## Active Record 쿼리\n\n```ruby\n# 조회\nUser.all\nUser.find(1)\nUser.find_by(email: 'user@example.com')\nUser.where(active: true)\nUser.where('created_at > ?', 1.week.ago)\n\n# 생성\nuser = User.create(name: 'John', email: 'john@example.com')\nuser = User.new(name: 'John')\nuser.save\n\n# 수정\nuser.update(name: 'Jane')\nuser.update_attribute(:name, 'Jane')\n\n# 삭제\nuser.destroy\nUser.destroy_all\n\n# 관계\nuser.posts\nuser.posts.create(title: 'Hello', body: 'World')\n```\n\n## 시리얼라이저\n\n```ruby\n# app/serializers/user_serializer.rb\nclass UserSerializer \u003C ActiveModel::Serializer\n  attributes :id, :name, :email, :created_at\n  \n  has_many :posts\n  \n  def email\n    object.email if current_user&.admin?\n  end\nend\n```\n\n## 백그라운드 작업\n\n```ruby\n# app/jobs/send_email_job.rb\nclass SendEmailJob \u003C ApplicationJob\n  queue_as :default\n  \n  def perform(user_id)\n    user = User.find(user_id)\n    UserMailer.welcome_email(user).deliver_now\n  end\nend\n\n# 사용\nSendEmailJob.perform_later(user.id)\n```\n\n## 테스트\n\n```ruby\n# test/models/user_test.rb\nrequire 'test_helper'\n\nclass UserTest \u003C ActiveSupport::TestCase\n  test \"should not save user without email\" do\n    user = User.new(name: 'John')\n    assert_not user.save, \"Saved the user without an email\"\n  end\n  \n  test \"should save valid user\" do\n    user = User.new(name: 'John', email: 'john@example.com', password: 'password123')\n    assert user.save, \"Failed to save valid user\"\n  end\nend\n```\n\n## 언제 사용하나요?\n\n- 빠른 프로토타입 개발\n- 스타트업 MVP 개발\n- 콘텐츠 관리 시스템\n- 전자상거래 플랫폼\n- RESTful API 서버\n\n## 추가 자료\n\n- [공식 문서](https://rubyonrails.org)\n- [Rails Guides](https://guides.rubyonrails.org)","src/content/docs/app/backend/rails.mdx","4e7e8e34613f91f3","app/backend/go",{"id":224,"data":226,"body":232,"filePath":233,"digest":234,"deferredRender":16},{"title":227,"description":228,"editUrl":16,"head":229,"template":18,"sidebar":230,"pagefind":16,"draft":20,"type":22},"Go (Gin)","Go 언어를 위한 빠른 웹 프레임워크",[],{"hidden":20,"attrs":231},{},"Gin은 Go로 작성된 고성능 HTTP 웹 프레임워크로, 뛰어난 성능과 생산성을 제공합니다.\n\n## 주요 특징\n\n- **고성능**: 매우 빠른 HTTP 라우터\n- **미들웨어 지원**: 확장 가능한 미들웨어 시스템\n- **JSON 검증**: 내장된 검증 기능\n- **에러 관리**: 효율적인 에러 핸들링\n- **라우팅 그룹**: 체계적인 라우트 구성\n\n## 설치하기\n\n```bash\ngo mod init myapp\ngo get -u github.com/gin-gonic/gin\n```\n\n## 기본 예제\n\n```go\npackage main\n\nimport (\n    \"github.com/gin-gonic/gin\"\n    \"net/http\"\n)\n\nfunc main() {\n    r := gin.Default()\n    \n    r.GET(\"/\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, gin.H{\n            \"message\": \"안녕하세요, Gin!\",\n        })\n    })\n    \n    r.Run(\":8080\")\n}\n```\n\n## RESTful API\n\n```go\npackage main\n\nimport (\n    \"github.com/gin-gonic/gin\"\n    \"net/http\"\n)\n\ntype User struct {\n    ID    uint   `json:\"id\"`\n    Name  string `json:\"name\" binding:\"required\"`\n    Email string `json:\"email\" binding:\"required,email\"`\n}\n\nvar users = []User{\n    {ID: 1, Name: \"홍길동\", Email: \"hong@example.com\"},\n    {ID: 2, Name: \"김철수\", Email: \"kim@example.com\"},\n}\n\nfunc main() {\n    r := gin.Default()\n    \n    api := r.Group(\"/api/v1\")\n    {\n        api.GET(\"/users\", getUsers)\n        api.GET(\"/users/:id\", getUser)\n        api.POST(\"/users\", createUser)\n        api.PUT(\"/users/:id\", updateUser)\n        api.DELETE(\"/users/:id\", deleteUser)\n    }\n    \n    r.Run(\":8080\")\n}\n\nfunc getUsers(c *gin.Context) {\n    c.JSON(http.StatusOK, users)\n}\n\nfunc getUser(c *gin.Context) {\n    id := c.Param(\"id\")\n    \n    for _, user := range users {\n        if fmt.Sprint(user.ID) == id {\n            c.JSON(http.StatusOK, user)\n            return\n        }\n    }\n    \n    c.JSON(http.StatusNotFound, gin.H{\"error\": \"사용자를 찾을 수 없습니다\"})\n}\n\nfunc createUser(c *gin.Context) {\n    var newUser User\n    \n    if err := c.ShouldBindJSON(&newUser); err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n        return\n    }\n    \n    newUser.ID = uint(len(users) + 1)\n    users = append(users, newUser)\n    \n    c.JSON(http.StatusCreated, newUser)\n}\n```\n\n## 미들웨어\n\n```go\nfunc Logger() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        t := time.Now()\n        \n        // 다음 핸들러 실행\n        c.Next()\n        \n        // 요청 처리 후\n        latency := time.Since(t)\n        status := c.Writer.Status()\n        \n        log.Printf(\"[%s] %s %d %v\", c.Request.Method, c.Request.URL.Path, status, latency)\n    }\n}\n\nfunc Auth() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        token := c.GetHeader(\"Authorization\")\n        \n        if token == \"\" {\n            c.JSON(http.StatusUnauthorized, gin.H{\"error\": \"인증이 필요합니다\"})\n            c.Abort()\n            return\n        }\n        \n        // 토큰 검증 로직\n        c.Next()\n    }\n}\n\n// 사용\nr.Use(Logger())\nr.Use(Auth())\n```\n\n## 데이터베이스 연동 (GORM)\n\n```go\nimport (\n    \"gorm.io/driver/postgres\"\n    \"gorm.io/gorm\"\n)\n\ntype User struct {\n    gorm.Model\n    Name  string `gorm:\"not null\"`\n    Email string `gorm:\"uniqueIndex;not null\"`\n}\n\nvar db *gorm.DB\n\nfunc initDB() {\n    dsn := \"host=localhost user=postgres password=password dbname=mydb port=5432\"\n    var err error\n    db, err = gorm.Open(postgres.Open(dsn), &gorm.Config{})\n    if err != nil {\n        panic(\"데이터베이스 연결 실패\")\n    }\n    \n    db.AutoMigrate(&User{})\n}\n\nfunc getUsers(c *gin.Context) {\n    var users []User\n    db.Find(&users)\n    c.JSON(http.StatusOK, users)\n}\n\nfunc createUser(c *gin.Context) {\n    var user User\n    if err := c.ShouldBindJSON(&user); err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n        return\n    }\n    \n    db.Create(&user)\n    c.JSON(http.StatusCreated, user)\n}\n```\n\n## 파일 업로드\n\n```go\nfunc uploadFile(c *gin.Context) {\n    file, err := c.FormFile(\"file\")\n    if err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": \"파일을 찾을 수 없습니다\"})\n        return\n    }\n    \n    dst := \"./uploads/\" + file.Filename\n    if err := c.SaveUploadedFile(file, dst); err != nil {\n        c.JSON(http.StatusInternalServerError, gin.H{\"error\": \"파일 저장 실패\"})\n        return\n    }\n    \n    c.JSON(http.StatusOK, gin.H{\"message\": \"파일 업로드 성공\", \"filename\": file.Filename})\n}\n\n// 라우트\nr.POST(\"/upload\", uploadFile)\n```\n\n## 에러 핸들링\n\n```go\nfunc errorHandler() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        c.Next()\n        \n        if len(c.Errors) > 0 {\n            err := c.Errors.Last()\n            c.JSON(http.StatusInternalServerError, gin.H{\n                \"error\": err.Error(),\n            })\n        }\n    }\n}\n\nr.Use(errorHandler())\n```\n\n## 언제 사용하나요?\n\n- 고성능 API 서버\n- 마이크로서비스\n- 실시간 시스템\n- 클라우드 네이티브 애플리케이션\n- 높은 동시성이 필요한 서비스\n\n## 추가 자료\n\n- [Gin 공식 문서](https://gin-gonic.com)\n- [Go 공식 문서](https://go.dev)","src/content/docs/app/backend/go.mdx","4fba55fabe034513","app/backend/aspnet",{"id":235,"data":237,"body":243,"filePath":244,"digest":245,"deferredRender":16},{"title":238,"description":239,"editUrl":16,"head":240,"template":18,"sidebar":241,"pagefind":16,"draft":20,"type":22},"ASP.NET Core",".NET 기반의 크로스 플랫폼 고성능 프레임워크",[],{"hidden":20,"attrs":242},{},"ASP.NET Core는 현대적이고 클라우드 기반 인터넷 연결 애플리케이션을 구축하기 위한 크로스 플랫폼 고성능 프레임워크입니다.\n\n## 주요 특징\n\n- **크로스 플랫폼**: Windows, macOS, Linux에서 실행\n- **고성능**: 매우 빠른 처리 속도\n- **의존성 주입**: 내장 DI 컨테이너\n- **미들웨어 파이프라인**: 유연한 요청 처리\n- **통합 개발**: MVC, API, Blazor 등 통합 지원\n\n## 프로젝트 생성\n\n```bash\ndotnet new webapi -n MyApi\ncd MyApi\ndotnet run\n```\n\n## 기본 컨트롤러\n\n```csharp\nusing Microsoft.AspNetCore.Mvc;\n\n[ApiController]\n[Route(\"api/[controller]\")]\npublic class UsersController : ControllerBase\n{\n    private readonly IUserService _userService;\n    \n    public UsersController(IUserService userService)\n    {\n        _userService = userService;\n    }\n    \n    [HttpGet]\n    public async Task\u003CActionResult\u003CIEnumerable\u003CUser>>> GetUsers()\n    {\n        var users = await _userService.GetAllAsync();\n        return Ok(users);\n    }\n    \n    [HttpGet(\"{id}\")]\n    public async Task\u003CActionResult\u003CUser>> GetUser(int id)\n    {\n        var user = await _userService.GetByIdAsync(id);\n        \n        if (user == null)\n            return NotFound();\n        \n        return Ok(user);\n    }\n    \n    [HttpPost]\n    public async Task\u003CActionResult\u003CUser>> CreateUser([FromBody] CreateUserDto dto)\n    {\n        if (!ModelState.IsValid)\n            return BadRequest(ModelState);\n        \n        var user = await _userService.CreateAsync(dto);\n        return CreatedAtAction(nameof(GetUser), new { id = user.Id }, user);\n    }\n    \n    [HttpPut(\"{id}\")]\n    public async Task\u003CIActionResult> UpdateUser(int id, [FromBody] UpdateUserDto dto)\n    {\n        var result = await _userService.UpdateAsync(id, dto);\n        \n        if (!result)\n            return NotFound();\n        \n        return NoContent();\n    }\n    \n    [HttpDelete(\"{id}\")]\n    public async Task\u003CIActionResult> DeleteUser(int id)\n    {\n        var result = await _userService.DeleteAsync(id);\n        \n        if (!result)\n            return NotFound();\n        \n        return NoContent();\n    }\n}\n```\n\n## 모델과 DTO\n\n```csharp\npublic class User\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public string Email { get; set; }\n    public DateTime CreatedAt { get; set; }\n}\n\npublic class CreateUserDto\n{\n    [Required]\n    [StringLength(100)]\n    public string Name { get; set; }\n    \n    [Required]\n    [EmailAddress]\n    public string Email { get; set; }\n    \n    [Required]\n    [MinLength(8)]\n    public string Password { get; set; }\n}\n\npublic class UpdateUserDto\n{\n    [StringLength(100)]\n    public string Name { get; set; }\n    \n    [EmailAddress]\n    public string Email { get; set; }\n}\n```\n\n## Entity Framework Core\n\n```csharp\nusing Microsoft.EntityFrameworkCore;\n\npublic class AppDbContext : DbContext\n{\n    public AppDbContext(DbContextOptions\u003CAppDbContext> options)\n        : base(options)\n    {\n    }\n    \n    public DbSet\u003CUser> Users { get; set; }\n    \n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity\u003CUser>(entity =>\n        {\n            entity.HasKey(e => e.Id);\n            entity.Property(e => e.Name).IsRequired().HasMaxLength(100);\n            entity.Property(e => e.Email).IsRequired().HasMaxLength(255);\n            entity.HasIndex(e => e.Email).IsUnique();\n        });\n    }\n}\n\n// Program.cs\nbuilder.Services.AddDbContext\u003CAppDbContext>(options =>\n    options.UseNpgsql(builder.Configuration.GetConnectionString(\"DefaultConnection\")));\n```\n\n## 서비스 Layer\n\n```csharp\npublic interface IUserService\n{\n    Task\u003CIEnumerable\u003CUser>> GetAllAsync();\n    Task\u003CUser> GetByIdAsync(int id);\n    Task\u003CUser> CreateAsync(CreateUserDto dto);\n    Task\u003Cbool> UpdateAsync(int id, UpdateUserDto dto);\n    Task\u003Cbool> DeleteAsync(int id);\n}\n\npublic class UserService : IUserService\n{\n    private readonly AppDbContext _context;\n    \n    public UserService(AppDbContext context)\n    {\n        _context = context;\n    }\n    \n    public async Task\u003CIEnumerable\u003CUser>> GetAllAsync()\n    {\n        return await _context.Users.ToListAsync();\n    }\n    \n    public async Task\u003CUser> GetByIdAsync(int id)\n    {\n        return await _context.Users.FindAsync(id);\n    }\n    \n    public async Task\u003CUser> CreateAsync(CreateUserDto dto)\n    {\n        var user = new User\n        {\n            Name = dto.Name,\n            Email = dto.Email,\n            CreatedAt = DateTime.UtcNow\n        };\n        \n        _context.Users.Add(user);\n        await _context.SaveChangesAsync();\n        \n        return user;\n    }\n    \n    public async Task\u003Cbool> UpdateAsync(int id, UpdateUserDto dto)\n    {\n        var user = await _context.Users.FindAsync(id);\n        \n        if (user == null)\n            return false;\n        \n        if (!string.IsNullOrEmpty(dto.Name))\n            user.Name = dto.Name;\n        \n        if (!string.IsNullOrEmpty(dto.Email))\n            user.Email = dto.Email;\n        \n        await _context.SaveChangesAsync();\n        return true;\n    }\n    \n    public async Task\u003Cbool> DeleteAsync(int id)\n    {\n        var user = await _context.Users.FindAsync(id);\n        \n        if (user == null)\n            return false;\n        \n        _context.Users.Remove(user);\n        await _context.SaveChangesAsync();\n        \n        return true;\n    }\n}\n```\n\n## 미들웨어\n\n```csharp\npublic class RequestLoggingMiddleware\n{\n    private readonly RequestDelegate _next;\n    private readonly ILogger\u003CRequestLoggingMiddleware> _logger;\n    \n    public RequestLoggingMiddleware(RequestDelegate next, ILogger\u003CRequestLoggingMiddleware> logger)\n    {\n        _next = next;\n        _logger = logger;\n    }\n    \n    public async Task InvokeAsync(HttpContext context)\n    {\n        _logger.LogInformation($\"요청: {context.Request.Method} {context.Request.Path}\");\n        \n        await _next(context);\n        \n        _logger.LogInformation($\"응답: {context.Response.StatusCode}\");\n    }\n}\n\n// Program.cs\napp.UseMiddleware\u003CRequestLoggingMiddleware>();\n```\n\n## 의존성 주입 (Program.cs)\n\n```csharp\nvar builder = WebApplication.CreateBuilder(args);\n\n// 서비스 등록\nbuilder.Services.AddControllers();\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\n// 데이터베이스\nbuilder.Services.AddDbContext\u003CAppDbContext>(options =>\n    options.UseNpgsql(builder.Configuration.GetConnectionString(\"DefaultConnection\")));\n\n// 비즈니스 서비스\nbuilder.Services.AddScoped\u003CIUserService, UserService>();\n\n// CORS\nbuilder.Services.AddCors(options =>\n{\n    options.AddPolicy(\"AllowAll\", builder =>\n    {\n        builder.AllowAnyOrigin()\n               .AllowAnyMethod()\n               .AllowAnyHeader();\n    });\n});\n\nvar app = builder.Build();\n\n// 미들웨어 파이프라인\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\napp.UseHttpsRedirection();\napp.UseCors(\"AllowAll\");\napp.UseAuthorization();\napp.MapControllers();\n\napp.Run();\n```\n\n## 언제 사용하나요?\n\n- 엔터프라이즈 애플리케이션\n- 고성능 API 서버\n- 마이크로서비스\n- 실시간 애플리케이션 (SignalR)\n- Azure 클라우드 애플리케이션\n\n## 추가 자료\n\n- [공식 문서](https://docs.microsoft.com/aspnet/core)\n- [.NET 가이드](https://dotnet.microsoft.com/learn)","src/content/docs/app/backend/aspnet.mdx","5f27ddc076d98efb","app/devops/docker",{"id":246,"data":248,"body":254,"filePath":255,"digest":256,"deferredRender":16},{"title":249,"description":250,"editUrl":16,"head":251,"template":18,"sidebar":252,"pagefind":16,"draft":20,"type":22},"Docker","컨테이너 기반 가상화 플랫폼",[],{"hidden":20,"attrs":253},{},"Docker는 애플리케이션을 컨테이너로 패키징하고 실행할 수 있게 해주는 플랫폼입니다.\n\n## 주요 특징\n\n- **경량화**: VM보다 가볍고 빠름\n- **이식성**: 어디서나 동일하게 실행\n- **격리**: 애플리케이션 간 격리\n- **빠른 배포**: 초 단위로 컨테이너 시작\n- **버전 관리**: 이미지 버전 관리\n\n## 설치하기\n\n```bash\n# macOS\nbrew install docker\n\n# Ubuntu\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\n\n# 버전 확인\ndocker --version\n```\n\n## 기본 명령어\n\n```bash\n# 이미지 다운로드\ndocker pull nginx\n\n# 컨테이너 실행\ndocker run -d -p 80:80 --name mynginx nginx\n\n# 실행 중인 컨테이너 확인\ndocker ps\n\n# 모든 컨테이너 확인\ndocker ps -a\n\n# 컨테이너 중지\ndocker stop mynginx\n\n# 컨테이너 시작\ndocker start mynginx\n\n# 컨테이너 삭제\ndocker rm mynginx\n\n# 이미지 삭제\ndocker rmi nginx\n\n# 로그 확인\ndocker logs mynginx\n```\n\n## Dockerfile 예제\n\n```dockerfile\n# Node.js 애플리케이션\nFROM node:18-alpine\n\nWORKDIR /app\n\nCOPY package*.json ./\n\nRUN npm install\n\nCOPY . .\n\nEXPOSE 3000\n\nCMD [\"npm\", \"start\"]\n```\n\n```dockerfile\n# Python 애플리케이션\nFROM python:3.11-slim\n\nWORKDIR /app\n\nCOPY requirements.txt .\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . .\n\nEXPOSE 8000\n\nCMD [\"python\", \"app.py\"]\n```\n\n## 이미지 빌드 및 실행\n\n```bash\n# 이미지 빌드\ndocker build -t myapp:1.0 .\n\n# 컨테이너 실행\ndocker run -d -p 3000:3000 --name myapp myapp:1.0\n\n# 환경 변수와 함께 실행\ndocker run -d \\\n  -p 3000:3000 \\\n  -e NODE_ENV=production \\\n  -e DB_HOST=localhost \\\n  --name myapp \\\n  myapp:1.0\n\n# 볼륨 마운트\ndocker run -d \\\n  -p 3000:3000 \\\n  -v $(pwd)/data:/app/data \\\n  --name myapp \\\n  myapp:1.0\n```\n\n## Docker Compose\n\n```yaml\n# docker-compose.yml\nversion: '3.8'\n\nservices:\n  web:\n    build: .\n    ports:\n      - \"3000:3000\"\n    environment:\n      - NODE_ENV=production\n      - DB_HOST=db\n    depends_on:\n      - db\n    volumes:\n      - ./src:/app/src\n\n  db:\n    image: postgres:15\n    environment:\n      - POSTGRES_DB=mydb\n      - POSTGRES_USER=user\n      - POSTGRES_PASSWORD=password\n    volumes:\n      - postgres-data:/var/lib/postgresql/data\n    ports:\n      - \"5432:5432\"\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - \"6379:6379\"\n\nvolumes:\n  postgres-data:\n```\n\n```bash\n# Docker Compose 명령어\ndocker-compose up -d\ndocker-compose down\ndocker-compose ps\ndocker-compose logs -f\ndocker-compose restart\n```\n\n## 멀티 스테이지 빌드\n\n```dockerfile\n# 빌드 스테이지\nFROM node:18 AS builder\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm install\n\nCOPY . .\nRUN npm run build\n\n# 프로덕션 스테이지\nFROM node:18-alpine\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm install --production\n\nCOPY --from=builder /app/dist ./dist\n\nEXPOSE 3000\n\nCMD [\"node\", \"dist/main.js\"]\n```\n\n## 네트워크\n\n```bash\n# 네트워크 생성\ndocker network create mynetwork\n\n# 네트워크에 연결하여 실행\ndocker run -d --network mynetwork --name app1 myapp\ndocker run -d --network mynetwork --name app2 myapp\n\n# 네트워크 목록\ndocker network ls\n\n# 네트워크 정보\ndocker network inspect mynetwork\n```\n\n## 언제 사용하나요?\n\n- 개발 환경 표준화\n- CI/CD 파이프라인\n- 마이크로서비스 아키텍처\n- 클라우드 네이티브 애플리케이션\n- 빠른 배포와 스케일링\n\n## 추가 자료\n\n- [공식 문서](https://docs.docker.com)\n- [Docker Hub](https://hub.docker.com)","src/content/docs/app/devops/docker.mdx","81fc2c4343a9f46f","app/devops/kubernetes",{"id":257,"data":259,"body":265,"filePath":266,"digest":267,"deferredRender":16},{"title":260,"description":261,"editUrl":16,"head":262,"template":18,"sidebar":263,"pagefind":16,"draft":20,"type":22},"Kubernetes","컨테이너 오케스트레이션 플랫폼",[],{"hidden":20,"attrs":264},{},"Kubernetes는 컨테이너화된 애플리케이션의 배포, 스케일링, 관리를 자동화하는 오픈소스 플랫폼입니다.\n\n## 주요 특징\n\n- **자동 스케일링**: 부하에 따른 자동 확장/축소\n- **자동 복구**: 실패한 컨테이너 자동 재시작\n- **로드 밸런싱**: 트래픽 분산\n- **롤링 업데이트**: 무중단 배포\n- **선언적 구성**: YAML을 통한 인프라 정의\n\n## 설치하기\n\n```bash\n# minikube (로컬 개발)\nbrew install minikube\nminikube start\n\n# kubectl\nbrew install kubectl\n\n# 버전 확인\nkubectl version --client\n```\n\n## 기본 개념\n\n- **Pod**: 가장 작은 배포 단위, 하나 이상의 컨테이너\n- **Service**: Pod에 대한 네트워크 접근\n- **Deployment**: Pod의 배포와 업데이트 관리\n- **Namespace**: 리소스 격리\n- **ConfigMap/Secret**: 설정 및 비밀 정보 관리\n\n## Pod 생성\n\n```yaml\n# pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\n  labels:\n    app: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n```\n\n```bash\nkubectl apply -f pod.yaml\nkubectl get pods\nkubectl describe pod nginx-pod\nkubectl logs nginx-pod\nkubectl delete pod nginx-pod\n```\n\n## Deployment\n\n```yaml\n# deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: myapp\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n      - name: myapp\n        image: myapp:1.0\n        ports:\n        - containerPort: 3000\n        env:\n        - name: NODE_ENV\n          value: \"production\"\n        resources:\n          requests:\n            memory: \"128Mi\"\n            cpu: \"100m\"\n          limits:\n            memory: \"256Mi\"\n            cpu: \"200m\"\n```\n\n```bash\nkubectl apply -f deployment.yaml\nkubectl get deployments\nkubectl get pods\nkubectl scale deployment myapp-deployment --replicas=5\nkubectl rollout status deployment myapp-deployment\n```\n\n## Service\n\n```yaml\n# service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: myapp-service\nspec:\n  selector:\n    app: myapp\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 3000\n  type: LoadBalancer\n```\n\n```bash\nkubectl apply -f service.yaml\nkubectl get services\nminikube service myapp-service\n```\n\n## ConfigMap과 Secret\n\n```yaml\n# configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  database_url: \"postgresql://localhost:5432\"\n  api_endpoint: \"https://api.example.com\"\n```\n\n```yaml\n# secret.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: app-secret\ntype: Opaque\ndata:\n  db_password: cGFzc3dvcmQxMjM=  # base64 인코딩\n  api_key: YXBpa2V5MTIz\n```\n\n```yaml\n# Deployment에서 사용\nspec:\n  containers:\n  - name: myapp\n    image: myapp:1.0\n    envFrom:\n    - configMapRef:\n        name: app-config\n    env:\n    - name: DB_PASSWORD\n      valueFrom:\n        secretKeyRef:\n          name: app-secret\n          key: db_password\n```\n\n## Ingress\n\n```yaml\n# ingress.yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: myapp-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - host: myapp.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: myapp-service\n            port:\n              number: 80\n```\n\n## Persistent Volume\n\n```yaml\n# pv.yaml\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-pv\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: /data/pv\n\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10Gi\n```\n\n## Helm (패키지 매니저)\n\n```bash\n# Helm 설치\nbrew install helm\n\n# 차트 설치\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm install my-nginx bitnami/nginx\n\n# 설치된 차트 확인\nhelm list\n\n# 차트 삭제\nhelm uninstall my-nginx\n```\n\n## 유용한 명령어\n\n```bash\n# 클러스터 정보\nkubectl cluster-info\n\n# 노드 확인\nkubectl get nodes\n\n# 모든 리소스 확인\nkubectl get all\n\n# 특정 네임스페이스\nkubectl get pods -n kube-system\n\n# 로그 스트리밍\nkubectl logs -f pod-name\n\n# Pod 내부 접속\nkubectl exec -it pod-name -- /bin/bash\n\n# 포트 포워딩\nkubectl port-forward pod/pod-name 8080:80\n\n# 리소스 사용량\nkubectl top nodes\nkubectl top pods\n```\n\n## 언제 사용하나요?\n\n- 마이크로서비스 아키텍처\n- 클라우드 네이티브 애플리케이션\n- 고가용성이 필요한 서비스\n- 자동 스케일링이 필요한 애플리케이션\n- 멀티 클라우드 환경\n\n## 추가 자료\n\n- [공식 문서](https://kubernetes.io/docs/)\n- [Kubernetes Patterns](https://k8spatterns.io)","src/content/docs/app/devops/kubernetes.mdx","d449c58f9c2bf40a","app/devops/jenkins",{"id":268,"data":270,"body":276,"filePath":277,"digest":278,"deferredRender":16},{"title":271,"description":272,"editUrl":16,"head":273,"template":18,"sidebar":274,"pagefind":16,"draft":20,"type":22},"Jenkins","오픈소스 자동화 서버",[],{"hidden":20,"attrs":275},{},"Jenkins는 소프트웨어 개발에서 빌드, 테스트, 배포를 자동화하는 CI/CD 도구입니다.\n\n## 주요 특징\n\n- **플러그인 생태계**: 1800개 이상의 플러그인\n- **파이프라인**: 코드로 작성하는 CI/CD\n- **분산 빌드**: 여러 머신에서 동시 실행\n- **다양한 통합**: Git, Docker, Kubernetes 등\n- **무료 오픈소스**: 무료로 사용 가능\n\n## 설치하기\n\n```bash\n# Docker로 설치\ndocker run -d -p 8080:8080 -p 50000:50000 \\\n  -v jenkins_home:/var/jenkins_home \\\n  --name jenkins \\\n  jenkins/jenkins:lts\n\n# 초기 비밀번호 확인\ndocker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword\n```\n\n## Jenkinsfile (Declarative Pipeline)\n\n```groovy\npipeline {\n    agent any\n    \n    environment {\n        DOCKER_IMAGE = 'myapp'\n        DOCKER_TAG = \"${BUILD_NUMBER}\"\n    }\n    \n    stages {\n        stage('Checkout') {\n            steps {\n                git branch: 'main', url: 'https://github.com/user/repo.git'\n            }\n        }\n        \n        stage('Install Dependencies') {\n            steps {\n                sh 'npm install'\n            }\n        }\n        \n        stage('Test') {\n            steps {\n                sh 'npm test'\n            }\n        }\n        \n        stage('Build') {\n            steps {\n                sh 'npm run build'\n            }\n        }\n        \n        stage('Docker Build') {\n            steps {\n                sh \"\"\"\n                    docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .\n                    docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest\n                \"\"\"\n            }\n        }\n        \n        stage('Deploy') {\n            steps {\n                sh \"\"\"\n                    docker stop myapp || true\n                    docker rm myapp || true\n                    docker run -d -p 3000:3000 --name myapp ${DOCKER_IMAGE}:latest\n                \"\"\"\n            }\n        }\n    }\n    \n    post {\n        success {\n            echo '배포 성공!'\n        }\n        failure {\n            echo '배포 실패'\n        }\n        always {\n            cleanWs()\n        }\n    }\n}\n```\n\n## Scripted Pipeline\n\n```groovy\nnode {\n    stage('Checkout') {\n        checkout scm\n    }\n    \n    stage('Build') {\n        try {\n            sh 'npm install'\n            sh 'npm run build'\n        } catch (Exception e) {\n            currentBuild.result = 'FAILURE'\n            throw e\n        }\n    }\n    \n    stage('Test') {\n        sh 'npm test'\n    }\n    \n    stage('Deploy') {\n        if (env.BRANCH_NAME == 'main') {\n            sh 'npm run deploy'\n        }\n    }\n}\n```\n\n## 멀티 브랜치 파이프라인\n\n```groovy\npipeline {\n    agent any\n    \n    stages {\n        stage('Build') {\n            steps {\n                echo \"Building ${env.BRANCH_NAME}\"\n                sh 'npm run build'\n            }\n        }\n        \n        stage('Test') {\n            steps {\n                sh 'npm test'\n            }\n        }\n        \n        stage('Deploy to Dev') {\n            when {\n                branch 'develop'\n            }\n            steps {\n                echo 'Deploying to Development'\n                sh 'npm run deploy:dev'\n            }\n        }\n        \n        stage('Deploy to Prod') {\n            when {\n                branch 'main'\n            }\n            steps {\n                input message: 'Deploy to production?'\n                echo 'Deploying to Production'\n                sh 'npm run deploy:prod'\n            }\n        }\n    }\n}\n```\n\n## Docker 통합\n\n```groovy\npipeline {\n    agent {\n        docker {\n            image 'node:18'\n        }\n    }\n    \n    stages {\n        stage('Build') {\n            steps {\n                sh 'npm install'\n                sh 'npm run build'\n            }\n        }\n    }\n}\n```\n\n## 병렬 실행\n\n```groovy\npipeline {\n    agent any\n    \n    stages {\n        stage('Tests') {\n            parallel {\n                stage('Unit Tests') {\n                    steps {\n                        sh 'npm run test:unit'\n                    }\n                }\n                stage('Integration Tests') {\n                    steps {\n                        sh 'npm run test:integration'\n                    }\n                }\n                stage('E2E Tests') {\n                    steps {\n                        sh 'npm run test:e2e'\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n## 환경 변수\n\n```groovy\npipeline {\n    agent any\n    \n    environment {\n        DB_HOST = credentials('db-host')\n        API_KEY = credentials('api-key')\n    }\n    \n    stages {\n        stage('Deploy') {\n            environment {\n                DEPLOY_ENV = 'production'\n            }\n            steps {\n                sh '''\n                    echo \"Deploying to ${DEPLOY_ENV}\"\n                    echo \"DB Host: ${DB_HOST}\"\n                '''\n            }\n        }\n    }\n}\n```\n\n## Webhook 설정\n\n```bash\n# GitHub Webhook URL\nhttp://jenkins-url:8080/github-webhook/\n\n# GitLab Webhook URL\nhttp://jenkins-url:8080/project/your-project\n```\n\n## 언제 사용하나요?\n\n- CI/CD 파이프라인 구축\n- 자동 빌드 및 테스트\n- 자동 배포\n- 정기적인 작업 스케줄링\n- 온프레미스 환경\n\n## 추가 자료\n\n- [공식 문서](https://www.jenkins.io/doc/)\n- [Jenkins Pipeline](https://www.jenkins.io/doc/book/pipeline/)","src/content/docs/app/devops/jenkins.mdx","78dda395a5a9ad9c","app/devops/github-actions",{"id":279,"data":281,"body":287,"filePath":288,"digest":289,"deferredRender":16},{"title":282,"description":283,"editUrl":16,"head":284,"template":18,"sidebar":285,"pagefind":16,"draft":20,"type":22},"GitHub Actions","GitHub 통합 CI/CD 플랫폼",[],{"hidden":20,"attrs":286},{},"GitHub Actions는 GitHub에 통합된 자동화 플랫폼으로 빌드, 테스트, 배포를 자동화합니다.\n\n## 주요 특징\n\n- **GitHub 통합**: 원클릭 설정\n- **마켓플레이스**: 수천 개의 액션\n- **매트릭스 빌드**: 여러 환경 동시 테스트\n- **무료 사용량**: Public 저장소는 무료\n- **강력한 워크플로우**: YAML 기반 설정\n\n## 기본 워크플로우\n\n```yaml\n# .github/workflows/ci.yml\nname: CI\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18'\n    \n    - name: Install dependencies\n      run: npm install\n    \n    - name: Run tests\n      run: npm test\n    \n    - name: Build\n      run: npm run build\n```\n\n## 멀티 OS 테스트\n\n```yaml\nname: Multi-OS Test\n\non: [push]\n\njobs:\n  test:\n    runs-on: ${{ matrix.os }}\n    \n    strategy:\n      matrix:\n        os: [ubuntu-latest, windows-latest, macos-latest]\n        node-version: [16, 18, 20]\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Use Node.js ${{ matrix.node-version }}\n      uses: actions/setup-node@v3\n      with:\n        node-version: ${{ matrix.node-version }}\n    \n    - run: npm install\n    - run: npm test\n```\n\n## Docker 빌드 및 푸시\n\n```yaml\nname: Docker Build and Push\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Set up Docker Buildx\n      uses: docker/setup-buildx-action@v2\n    \n    - name: Login to Docker Hub\n      uses: docker/login-action@v2\n      with:\n        username: ${{ secrets.DOCKER_USERNAME }}\n        password: ${{ secrets.DOCKER_PASSWORD }}\n    \n    - name: Build and push\n      uses: docker/build-push-action@v4\n      with:\n        context: .\n        push: true\n        tags: |\n          username/myapp:latest\n          username/myapp:${{ github.sha }}\n```\n\n## 배포 워크플로우\n\n```yaml\nname: Deploy to Production\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Deploy to Vercel\n      uses: amondnet/vercel-action@v20\n      with:\n        vercel-token: ${{ secrets.VERCEL_TOKEN }}\n        vercel-org-id: ${{ secrets.ORG_ID }}\n        vercel-project-id: ${{ secrets.PROJECT_ID }}\n        vercel-args: '--prod'\n```\n\n## 조건부 실행\n\n```yaml\nname: Conditional Workflow\n\non: [push]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - run: npm test\n  \n  deploy-dev:\n    needs: test\n    if: github.ref == 'refs/heads/develop'\n    runs-on: ubuntu-latest\n    steps:\n    - run: echo \"Deploying to dev\"\n  \n  deploy-prod:\n    needs: test\n    if: github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    steps:\n    - run: echo \"Deploying to prod\"\n```\n\n## 캐싱\n\n```yaml\nname: Node.js with Cache\n\non: [push]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18'\n        cache: 'npm'\n    \n    - run: npm install\n    - run: npm run build\n```\n\n## 아티팩트 저장\n\n```yaml\nname: Build and Upload Artifacts\n\non: [push]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - run: npm install\n    - run: npm run build\n    \n    - name: Upload artifacts\n      uses: actions/upload-artifact@v3\n      with:\n        name: build-artifacts\n        path: dist/\n        retention-days: 7\n```\n\n## 환경 변수와 시크릿\n\n```yaml\nname: Environment Variables\n\non: [push]\n\nenv:\n  NODE_ENV: production\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    \n    env:\n      DATABASE_URL: ${{ secrets.DATABASE_URL }}\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Build\n      run: npm run build\n      env:\n        API_KEY: ${{ secrets.API_KEY }}\n```\n\n## 재사용 가능한 워크플로우\n\n```yaml\n# .github/workflows/reusable-workflow.yml\nname: Reusable Workflow\n\non:\n  workflow_call:\n    inputs:\n      node-version:\n        required: true\n        type: string\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - uses: actions/setup-node@v3\n      with:\n        node-version: ${{ inputs.node-version }}\n    - run: npm test\n```\n\n```yaml\n# .github/workflows/use-reusable.yml\nname: Use Reusable Workflow\n\non: [push]\n\njobs:\n  test:\n    uses: ./.github/workflows/reusable-workflow.yml\n    with:\n      node-version: '18'\n```\n\n## 스케줄링\n\n```yaml\nname: Nightly Build\n\non:\n  schedule:\n    - cron: '0 2 * * *'  # 매일 오전 2시\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - run: npm run build\n```\n\n## 언제 사용하나요?\n\n- GitHub 저장소의 CI/CD\n- 자동화된 테스트\n- 릴리스 자동화\n- 코드 품질 검사\n- 자동 배포\n\n## 추가 자료\n\n- [공식 문서](https://docs.github.com/actions)\n- [GitHub Marketplace](https://github.com/marketplace?type=actions)","src/content/docs/app/devops/github-actions.mdx","1950e2936e7c4ad1","app/devops/terraform",{"id":290,"data":292,"body":298,"filePath":299,"digest":300,"deferredRender":16},{"title":293,"description":294,"editUrl":16,"head":295,"template":18,"sidebar":296,"pagefind":16,"draft":20,"type":22},"Terraform","코드로 인프라를 관리하는 IaC 도구",[],{"hidden":20,"attrs":297},{},"Terraform은 선언적 방식으로 인프라를 코드로 정의하고 관리하는 Infrastructure as Code (IaC) 도구입니다.\n\n## 주요 특징\n\n- **멀티 클라우드**: AWS, Azure, GCP 등 지원\n- **선언적 구문**: 원하는 상태를 정의\n- **상태 관리**: 인프라 상태 추적\n- **모듈화**: 재사용 가능한 코드\n- **실행 계획**: 변경사항 미리 확인\n\n## 설치하기\n\n```bash\n# macOS\nbrew install terraform\n\n# Linux\nwget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip\nunzip terraform_1.6.0_linux_amd64.zip\nsudo mv terraform /usr/local/bin/\n\n# 버전 확인\nterraform version\n```\n\n## 기본 구조\n\n```hcl\n# main.tf\nterraform {\n  required_version = \">= 1.0\"\n  \n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~> 5.0\"\n    }\n  }\n}\n\nprovider \"aws\" {\n  region = var.aws_region\n}\n\nresource \"aws_instance\" \"web\" {\n  ami           = \"ami-0c55b159cbfafe1f0\"\n  instance_type = var.instance_type\n  \n  tags = {\n    Name = \"WebServer\"\n    Environment = var.environment\n  }\n}\n```\n\n## 변수 정의\n\n```hcl\n# variables.tf\nvariable \"aws_region\" {\n  description = \"AWS 리전\"\n  type        = string\n  default     = \"ap-northeast-2\"\n}\n\nvariable \"instance_type\" {\n  description = \"EC2 인스턴스 타입\"\n  type        = string\n  default     = \"t3.micro\"\n}\n\nvariable \"environment\" {\n  description = \"환경\"\n  type        = string\n  validation {\n    condition     = contains([\"dev\", \"staging\", \"prod\"], var.environment)\n    error_message = \"환경은 dev, staging, prod 중 하나여야 합니다\"\n  }\n}\n```\n\n## 출력 변수\n\n```hcl\n# outputs.tf\noutput \"instance_id\" {\n  description = \"EC2 인스턴스 ID\"\n  value       = aws_instance.web.id\n}\n\noutput \"instance_public_ip\" {\n  description = \"EC2 인스턴스 공인 IP\"\n  value       = aws_instance.web.public_ip\n}\n```\n\n## 기본 명령어\n\n```bash\n# 초기화\nterraform init\n\n# 실행 계획 확인\nterraform plan\n\n# 인프라 생성\nterraform apply\n\n# 인프라 삭제\nterraform destroy\n\n# 상태 확인\nterraform show\n\n# 포맷팅\nterraform fmt\n\n# 검증\nterraform validate\n```\n\n## VPC 생성 예제\n\n```hcl\n# vpc.tf\nresource \"aws_vpc\" \"main\" {\n  cidr_block           = \"10.0.0.0/16\"\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n  \n  tags = {\n    Name = \"main-vpc\"\n  }\n}\n\nresource \"aws_subnet\" \"public\" {\n  count             = 2\n  vpc_id            = aws_vpc.main.id\n  cidr_block        = \"10.0.${count.index}.0/24\"\n  availability_zone = data.aws_availability_zones.available.names[count.index]\n  \n  map_public_ip_on_launch = true\n  \n  tags = {\n    Name = \"public-subnet-${count.index + 1}\"\n  }\n}\n\nresource \"aws_internet_gateway\" \"main\" {\n  vpc_id = aws_vpc.main.id\n  \n  tags = {\n    Name = \"main-igw\"\n  }\n}\n\nresource \"aws_route_table\" \"public\" {\n  vpc_id = aws_vpc.main.id\n  \n  route {\n    cidr_block = \"0.0.0.0/0\"\n    gateway_id = aws_internet_gateway.main.id\n  }\n  \n  tags = {\n    Name = \"public-rt\"\n  }\n}\n\nresource \"aws_route_table_association\" \"public\" {\n  count          = 2\n  subnet_id      = aws_subnet.public[count.index].id\n  route_table_id = aws_route_table.public.id\n}\n\ndata \"aws_availability_zones\" \"available\" {\n  state = \"available\"\n}\n```\n\n## 모듈 사용\n\n```hcl\n# modules/ec2/main.tf\nvariable \"instance_type\" {}\nvariable \"ami_id\" {}\nvariable \"subnet_id\" {}\n\nresource \"aws_instance\" \"this\" {\n  ami           = var.ami_id\n  instance_type = var.instance_type\n  subnet_id     = var.subnet_id\n}\n\noutput \"instance_id\" {\n  value = aws_instance.this.id\n}\n```\n\n```hcl\n# main.tf에서 모듈 사용\nmodule \"web_server\" {\n  source = \"./modules/ec2\"\n  \n  instance_type = \"t3.micro\"\n  ami_id        = \"ami-0c55b159cbfafe1f0\"\n  subnet_id     = aws_subnet.public[0].id\n}\n```\n\n## 원격 상태 저장\n\n```hcl\n# backend.tf\nterraform {\n  backend \"s3\" {\n    bucket         = \"my-terraform-state\"\n    key            = \"prod/terraform.tfstate\"\n    region         = \"ap-northeast-2\"\n    encrypt        = true\n    dynamodb_table = \"terraform-lock\"\n  }\n}\n```\n\n## 반복문\n\n```hcl\n# for_each 사용\nresource \"aws_s3_bucket\" \"this\" {\n  for_each = toset([\"logs\", \"data\", \"backup\"])\n  \n  bucket = \"my-${each.key}-bucket\"\n  \n  tags = {\n    Name = each.key\n  }\n}\n\n# count 사용\nresource \"aws_instance\" \"web\" {\n  count         = 3\n  ami           = \"ami-0c55b159cbfafe1f0\"\n  instance_type = \"t3.micro\"\n  \n  tags = {\n    Name = \"web-${count.index + 1}\"\n  }\n}\n```\n\n## 조건문\n\n```hcl\nresource \"aws_instance\" \"web\" {\n  ami           = \"ami-0c55b159cbfafe1f0\"\n  instance_type = var.environment == \"prod\" ? \"t3.large\" : \"t3.micro\"\n  \n  tags = {\n    Name = var.environment == \"prod\" ? \"production-server\" : \"dev-server\"\n  }\n}\n```\n\n## Terraform Cloud\n\n```hcl\nterraform {\n  cloud {\n    organization = \"my-org\"\n    \n    workspaces {\n      name = \"my-workspace\"\n    }\n  }\n}\n```\n\n## 언제 사용하나요?\n\n- 클라우드 인프라 자동화\n- 멀티 클라우드 관리\n- 인프라 버전 관리\n- 재현 가능한 환경 구축\n- GitOps 워크플로우\n\n## 추가 자료\n\n- [공식 문서](https://www.terraform.io/docs)\n- [Terraform Registry](https://registry.terraform.io)","src/content/docs/app/devops/terraform.mdx","1d137739f8add176","app/devops/ansible",{"id":301,"data":303,"body":309,"filePath":310,"digest":311,"deferredRender":16},{"title":304,"description":305,"editUrl":16,"head":306,"template":18,"sidebar":307,"pagefind":16,"draft":20,"type":22},"Ansible","자동화된 구성 관리 도구",[],{"hidden":20,"attrs":308},{},"Ansible은 에이전트 없이 SSH를 통해 서버를 자동으로 구성하고 관리하는 도구입니다.\n\n## 주요 특징\n\n- **에이전트 불필요**: SSH만 있으면 됨\n- **간단한 문법**: YAML 기반\n- **멱등성**: 여러 번 실행해도 같은 결과\n- **대규모 자동화**: 수천 대의 서버 관리\n- **풍부한 모듈**: 5000개 이상의 모듈\n\n## 설치하기\n\n```bash\n# macOS\nbrew install ansible\n\n# Ubuntu\nsudo apt update\nsudo apt install ansible\n\n# Python pip\npip install ansible\n\n# 버전 확인\nansible --version\n```\n\n## Inventory 파일\n\n```ini\n# inventory/hosts\n[web]\nweb1.example.com\nweb2.example.com\nweb3.example.com\n\n[db]\ndb1.example.com\ndb2.example.com\n\n[web:vars]\nansible_user=ubuntu\nansible_ssh_private_key_file=~/.ssh/id_rsa\n\n[all:vars]\nansible_python_interpreter=/usr/bin/python3\n```\n\n## 기본 Playbook\n\n```yaml\n# playbook.yml\n---\n- name: 웹 서버 설정\n  hosts: web\n  become: yes\n  \n  tasks:\n    - name: Nginx 설치\n      apt:\n        name: nginx\n        state: present\n        update_cache: yes\n    \n    - name: Nginx 서비스 시작\n      service:\n        name: nginx\n        state: started\n        enabled: yes\n    \n    - name: 인덱스 파일 복사\n      copy:\n        src: files/index.html\n        dest: /var/www/html/index.html\n        owner: www-data\n        group: www-data\n        mode: '0644'\n```\n\n## 실행 명령어\n\n```bash\n# Playbook 실행\nansible-playbook playbook.yml\n\n# 특정 호스트만\nansible-playbook playbook.yml --limit web1.example.com\n\n# 드라이런 (테스트)\nansible-playbook playbook.yml --check\n\n# 상세 출력\nansible-playbook playbook.yml -v\n\n# Ad-hoc 명령\nansible web -m ping\nansible all -a \"uptime\"\nansible web -m apt -a \"name=nginx state=present\" --become\n```\n\n## 변수 사용\n\n```yaml\n# vars.yml\n---\napp_name: myapp\napp_port: 3000\ndb_host: localhost\ndb_name: mydb\n```\n\n```yaml\n# playbook.yml\n---\n- name: 애플리케이션 배포\n  hosts: web\n  become: yes\n  vars_files:\n    - vars.yml\n  \n  tasks:\n    - name: 애플리케이션 디렉토리 생성\n      file:\n        path: \"/opt/{{ app_name }}\"\n        state: directory\n        owner: www-data\n        group: www-data\n    \n    - name: 설정 파일 생성\n      template:\n        src: templates/config.j2\n        dest: \"/opt/{{ app_name }}/config.json\"\n```\n\n## 템플릿 (Jinja2)\n\n```jinja2\n{# templates/config.j2 #}\n{\n  \"app_name\": \"{{ app_name }}\",\n  \"port\": {{ app_port }},\n  \"database\": {\n    \"host\": \"{{ db_host }}\",\n    \"name\": \"{{ db_name }}\"\n  }\n}\n```\n\n## 핸들러\n\n```yaml\n---\n- name: Nginx 설정 업데이트\n  hosts: web\n  become: yes\n  \n  tasks:\n    - name: Nginx 설정 파일 복사\n      copy:\n        src: files/nginx.conf\n        dest: /etc/nginx/nginx.conf\n      notify:\n        - reload nginx\n    \n    - name: 사이트 설정 복사\n      template:\n        src: templates/site.conf.j2\n        dest: /etc/nginx/sites-available/default\n      notify:\n        - reload nginx\n  \n  handlers:\n    - name: reload nginx\n      service:\n        name: nginx\n        state: reloaded\n```\n\n## 조건문과 반복문\n\n```yaml\n---\n- name: 조건부 작업\n  hosts: all\n  become: yes\n  \n  tasks:\n    - name: Ubuntu에서만 실행\n      apt:\n        name: nginx\n        state: present\n      when: ansible_distribution == \"Ubuntu\"\n    \n    - name: CentOS에서만 실행\n      yum:\n        name: nginx\n        state: present\n      when: ansible_distribution == \"CentOS\"\n    \n    - name: 여러 패키지 설치\n      apt:\n        name: \"{{ item }}\"\n        state: present\n      loop:\n        - git\n        - curl\n        - vim\n        - htop\n    \n    - name: 여러 사용자 생성\n      user:\n        name: \"{{ item.name }}\"\n        group: \"{{ item.group }}\"\n        state: present\n      loop:\n        - { name: 'alice', group: 'developers' }\n        - { name: 'bob', group: 'developers' }\n        - { name: 'charlie', group: 'admins' }\n```\n\n## Role 구조\n\n```\nroles/\n└── webserver/\n    ├── tasks/\n    │   └── main.yml\n    ├── handlers/\n    │   └── main.yml\n    ├── templates/\n    │   └── nginx.conf.j2\n    ├── files/\n    │   └── index.html\n    ├── vars/\n    │   └── main.yml\n    ├── defaults/\n    │   └── main.yml\n    └── meta/\n        └── main.yml\n```\n\n```yaml\n# roles/webserver/tasks/main.yml\n---\n- name: Nginx 설치\n  apt:\n    name: nginx\n    state: present\n\n- name: 설정 파일 배포\n  template:\n    src: nginx.conf.j2\n    dest: /etc/nginx/nginx.conf\n  notify: reload nginx\n```\n\n```yaml\n# playbook.yml\n---\n- name: 웹 서버 구성\n  hosts: web\n  become: yes\n  \n  roles:\n    - webserver\n    - firewall\n    - monitoring\n```\n\n## Docker 컨테이너 관리\n\n```yaml\n---\n- name: Docker 컨테이너 배포\n  hosts: web\n  become: yes\n  \n  tasks:\n    - name: Docker 이미지 Pull\n      docker_image:\n        name: nginx\n        tag: latest\n        source: pull\n    \n    - name: Docker 컨테이너 실행\n      docker_container:\n        name: web\n        image: nginx:latest\n        state: started\n        ports:\n          - \"80:80\"\n        volumes:\n          - /opt/www:/usr/share/nginx/html\n        restart_policy: always\n```\n\n## Vault (암호화)\n\n```bash\n# Vault 파일 생성\nansible-vault create secrets.yml\n\n# Vault 파일 편집\nansible-vault edit secrets.yml\n\n# Vault 파일 포함하여 실행\nansible-playbook playbook.yml --ask-vault-pass\n```\n\n```yaml\n# secrets.yml (암호화됨)\n---\ndb_password: \"super_secret_password\"\napi_key: \"my_api_key_12345\"\n```\n\n## Galaxy (Role 공유)\n\n```bash\n# Role 설치\nansible-galaxy install geerlingguy.nginx\n\n# Role 생성\nansible-galaxy init my-role\n\n# requirements.yml\nansible-galaxy install -r requirements.yml\n```\n\n```yaml\n# requirements.yml\n---\n- name: geerlingguy.nginx\n  version: 3.1.4\n\n- name: geerlingguy.docker\n  version: 6.1.0\n```\n\n## 언제 사용하나요?\n\n- 서버 구성 자동화\n- 애플리케이션 배포\n- 시스템 업데이트\n- 클라우드 프로비저닝\n- 네트워크 장비 설정\n\n## 추가 자료\n\n- [공식 문서](https://docs.ansible.com)\n- [Ansible Galaxy](https://galaxy.ansible.com)","src/content/docs/app/devops/ansible.mdx","5a4413d8371d8220","app/devops/prometheus",{"id":312,"data":314,"body":320,"filePath":321,"digest":322,"deferredRender":16},{"title":315,"description":316,"editUrl":16,"head":317,"template":18,"sidebar":318,"pagefind":16,"draft":20,"type":22},"Prometheus","오픈소스 모니터링 및 알림 시스템",[],{"hidden":20,"attrs":319},{},"Prometheus는 메트릭 기반의 모니터링 시스템으로 시계열 데이터를 수집하고 저장합니다.\n\n## 주요 특징\n\n- **Pull 기반 수집**: 능동적으로 메트릭 수집\n- **다차원 데이터**: 레이블 기반 데이터 모델\n- **PromQL**: 강력한 쿼리 언어\n- **알림**: Alertmanager를 통한 알림\n- **시각화**: Grafana 통합\n\n## Docker로 설치\n\n```yaml\n# docker-compose.yml\nversion: '3'\n\nservices:\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: prometheus\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus-data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n    ports:\n      - \"9090:9090\"\n    restart: unless-stopped\n\nvolumes:\n  prometheus-data:\n```\n\n## 설정 파일\n\n```yaml\n# prometheus.yml\nglobal:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n            - 'alertmanager:9093'\n\nscrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n\n  - job_name: 'node'\n    static_configs:\n      - targets: ['node-exporter:9100']\n\n  - job_name: 'app'\n    static_configs:\n      - targets: ['app:3000']\n```\n\n## Node.js 애플리케이션 메트릭\n\n```javascript\nconst express = require('express');\nconst promClient = require('prom-client');\n\nconst app = express();\n\n// 기본 메트릭 수집\nconst collectDefaultMetrics = promClient.collectDefaultMetrics;\ncollectDefaultMetrics();\n\n// 커스텀 카운터\nconst httpRequestCounter = new promClient.Counter({\n  name: 'http_requests_total',\n  help: 'Total number of HTTP requests',\n  labelNames: ['method', 'route', 'status']\n});\n\n// 커스텀 히스토그램\nconst httpRequestDuration = new promClient.Histogram({\n  name: 'http_request_duration_seconds',\n  help: 'Duration of HTTP requests in seconds',\n  labelNames: ['method', 'route', 'status'],\n  buckets: [0.1, 0.5, 1, 2, 5]\n});\n\n// 미들웨어\napp.use((req, res, next) => {\n  const start = Date.now();\n  \n  res.on('finish', () => {\n    const duration = (Date.now() - start) / 1000;\n    \n    httpRequestCounter.inc({\n      method: req.method,\n      route: req.route?.path || req.path,\n      status: res.statusCode\n    });\n    \n    httpRequestDuration.observe({\n      method: req.method,\n      route: req.route?.path || req.path,\n      status: res.statusCode\n    }, duration);\n  });\n  \n  next();\n});\n\n// 메트릭 엔드포인트\napp.get('/metrics', async (req, res) => {\n  res.set('Content-Type', promClient.register.contentType);\n  res.end(await promClient.register.metrics());\n});\n\napp.listen(3000);\n```\n\n## PromQL 쿼리 예제\n\n```promql\n# 현재 값 조회\nhttp_requests_total\n\n# 레이블 필터링\nhttp_requests_total{method=\"GET\", status=\"200\"}\n\n# 속도 계산 (초당 요청수)\nrate(http_requests_total[5m])\n\n# 합계\nsum(rate(http_requests_total[5m])) by (method)\n\n# 평균 응답 시간\nrate(http_request_duration_seconds_sum[5m]) / rate(http_request_duration_seconds_count[5m])\n\n# CPU 사용률\n100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)\n\n# 메모리 사용률\n(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100\n\n# 디스크 사용률\n(node_filesystem_size_bytes - node_filesystem_avail_bytes) / node_filesystem_size_bytes * 100\n\n# 에러율\nsum(rate(http_requests_total{status=~\"5..\"}[5m])) / sum(rate(http_requests_total[5m]))\n```\n\n## 알림 규칙\n\n```yaml\n# alert.rules.yml\ngroups:\n  - name: example\n    interval: 30s\n    rules:\n      - alert: HighErrorRate\n        expr: sum(rate(http_requests_total{status=~\"5..\"}[5m])) / sum(rate(http_requests_total[5m])) > 0.05\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"높은 에러율 감지\"\n          description: \"에러율이 {{ $value }}%입니다\"\n      \n      - alert: HighCPUUsage\n        expr: 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100) > 80\n        for: 10m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"높은 CPU 사용률\"\n          description: \"{{ $labels.instance }}의 CPU 사용률이 {{ $value }}%입니다\"\n      \n      - alert: HighMemoryUsage\n        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 90\n        for: 10m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"높은 메모리 사용률\"\n          description: \"메모리 사용률이 {{ $value }}%입니다\"\n```\n\n## Alertmanager 설정\n\n```yaml\n# alertmanager.yml\nglobal:\n  resolve_timeout: 5m\n\nroute:\n  group_by: ['alertname', 'cluster']\n  group_wait: 10s\n  group_interval: 10s\n  repeat_interval: 12h\n  receiver: 'default'\n  routes:\n    - match:\n        severity: critical\n      receiver: 'critical'\n\nreceivers:\n  - name: 'default'\n    slack_configs:\n      - api_url: 'https://hooks.slack.com/services/YOUR/WEBHOOK/URL'\n        channel: '#alerts'\n  \n  - name: 'critical'\n    slack_configs:\n      - api_url: 'https://hooks.slack.com/services/YOUR/WEBHOOK/URL'\n        channel: '#critical-alerts'\n    pagerduty_configs:\n      - service_key: 'YOUR_PAGERDUTY_SERVICE_KEY'\n```\n\n## Go 애플리케이션 메트릭\n\n```go\npackage main\n\nimport (\n    \"net/http\"\n    \"github.com/prometheus/client_golang/prometheus\"\n    \"github.com/prometheus/client_golang/prometheus/promhttp\"\n)\n\nvar (\n    httpRequests = prometheus.NewCounterVec(\n        prometheus.CounterOpts{\n            Name: \"http_requests_total\",\n            Help: \"Total number of HTTP requests\",\n        },\n        []string{\"method\", \"endpoint\", \"status\"},\n    )\n    \n    requestDuration = prometheus.NewHistogramVec(\n        prometheus.HistogramOpts{\n            Name:    \"http_request_duration_seconds\",\n            Help:    \"HTTP request duration in seconds\",\n            Buckets: prometheus.DefBuckets,\n        },\n        []string{\"method\", \"endpoint\"},\n    )\n)\n\nfunc init() {\n    prometheus.MustRegister(httpRequests)\n    prometheus.MustRegister(requestDuration)\n}\n\nfunc main() {\n    http.Handle(\"/metrics\", promhttp.Handler())\n    http.ListenAndServe(\":9090\", nil)\n}\n```\n\n## 서비스 디스커버리\n\n```yaml\n# Kubernetes Service Discovery\nscrape_configs:\n  - job_name: 'kubernetes-pods'\n    kubernetes_sd_configs:\n      - role: pod\n    relabel_configs:\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n        action: keep\n        regex: true\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n        action: replace\n        target_label: __metrics_path__\n        regex: (.+)\n      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n        action: replace\n        regex: ([^:]+)(?::\\d+)?;(\\d+)\n        replacement: $1:$2\n        target_label: __address__\n```\n\n## 언제 사용하나요?\n\n- 시스템 모니터링\n- 애플리케이션 성능 추적\n- 인프라 메트릭 수집\n- SLA 모니터링\n- 알림 시스템 구축\n\n## 추가 자료\n\n- [공식 문서](https://prometheus.io/docs/)\n- [PromQL 가이드](https://prometheus.io/docs/prometheus/latest/querying/basics/)","src/content/docs/app/devops/prometheus.mdx","36ad7fee7f7a5128","app/devops/grafana",{"id":323,"data":325,"body":331,"filePath":332,"digest":333,"deferredRender":16},{"title":326,"description":327,"editUrl":16,"head":328,"template":18,"sidebar":329,"pagefind":16,"draft":20,"type":22},"Grafana","메트릭 시각화 및 대시보드 플랫폼",[],{"hidden":20,"attrs":330},{},"Grafana는 다양한 데이터 소스로부터 메트릭을 시각화하고 분석할 수 있는 오픈소스 플랫폼입니다.\n\n## 주요 특징\n\n- **다양한 데이터 소스**: Prometheus, InfluxDB, Elasticsearch 등\n- **대시보드**: 드래그 앤 드롭으로 대시보드 구성\n- **알림**: 조건 기반 알림 설정\n- **플러그인**: 확장 가능한 플러그인 시스템\n- **공유**: 대시보드 공유 및 임베딩\n\n## Docker로 설치\n\n```yaml\n# docker-compose.yml\nversion: '3'\n\nservices:\n  grafana:\n    image: grafana/grafana:latest\n    container_name: grafana\n    ports:\n      - \"3000:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n      - GF_USERS_ALLOW_SIGN_UP=false\n    volumes:\n      - grafana-data:/var/lib/grafana\n      - ./grafana/provisioning:/etc/grafana/provisioning\n    depends_on:\n      - prometheus\n\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: prometheus\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus-data:/prometheus\n\nvolumes:\n  grafana-data:\n  prometheus-data:\n```\n\n## 데이터 소스 자동 설정\n\n```yaml\n# grafana/provisioning/datasources/prometheus.yml\napiVersion: 1\n\ndatasources:\n  - name: Prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    isDefault: true\n    editable: true\n```\n\n## 대시보드 자동 설정\n\n```yaml\n# grafana/provisioning/dashboards/dashboard.yml\napiVersion: 1\n\nproviders:\n  - name: 'Default'\n    orgId: 1\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10\n    allowUiUpdates: true\n    options:\n      path: /etc/grafana/provisioning/dashboards\n```\n\n## 대시보드 JSON 예제\n\n```json\n{\n  \"dashboard\": {\n    \"title\": \"Application Metrics\",\n    \"panels\": [\n      {\n        \"id\": 1,\n        \"title\": \"HTTP Request Rate\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(http_requests_total[5m])\",\n            \"legendFormat\": \"{{method}} {{route}}\"\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 0,\n          \"y\": 0\n        }\n      },\n      {\n        \"id\": 2,\n        \"title\": \"Response Time\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(http_request_duration_seconds_sum[5m]) / rate(http_request_duration_seconds_count[5m])\",\n            \"legendFormat\": \"Average Response Time\"\n          }\n        ],\n        \"gridPos\": {\n          \"h\": 8,\n          \"w\": 12,\n          \"x\": 12,\n          \"y\": 0\n        }\n      }\n    ]\n  }\n}\n```\n\n## 유용한 쿼리 패널\n\n### CPU 사용률\n\n```promql\n100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)\n```\n\n### 메모리 사용률\n\n```promql\n(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100\n```\n\n### 디스크 I/O\n\n```promql\n# Read\nrate(node_disk_read_bytes_total[5m])\n\n# Write\nrate(node_disk_written_bytes_total[5m])\n```\n\n### 네트워크 트래픽\n\n```promql\n# Receive\nrate(node_network_receive_bytes_total[5m])\n\n# Transmit\nrate(node_network_transmit_bytes_total[5m])\n```\n\n### HTTP 에러율\n\n```promql\nsum(rate(http_requests_total{status=~\"5..\"}[5m])) / sum(rate(http_requests_total[5m])) * 100\n```\n\n## 알림 설정\n\n```yaml\n# Notification Channel (Slack)\napiVersion: 1\n\nnotifiers:\n  - name: Slack Alerts\n    type: slack\n    uid: slack\n    org_id: 1\n    is_default: true\n    settings:\n      url: https://hooks.slack.com/services/YOUR/WEBHOOK/URL\n      recipient: '#alerts'\n      username: Grafana\n```\n\n## Terraform으로 대시보드 관리\n\n```hcl\nresource \"grafana_dashboard\" \"metrics\" {\n  config_json = file(\"dashboards/metrics.json\")\n}\n\nresource \"grafana_alert_notification\" \"slack\" {\n  name = \"Slack Notifications\"\n  type = \"slack\"\n  \n  settings = {\n    url        = var.slack_webhook_url\n    recipient  = \"#alerts\"\n    uploadImage = true\n  }\n}\n\nresource \"grafana_alert\" \"high_cpu\" {\n  name    = \"High CPU Usage\"\n  message = \"CPU usage is above 80%\"\n  \n  rule {\n    name      = \"CPU > 80%\"\n    condition = \"A\"\n    \n    query {\n      model = jsonencode({\n        expr = \"avg(node_cpu_usage) > 80\"\n      })\n    }\n  }\n  \n  notification = [grafana_alert_notification.slack.id]\n}\n```\n\n## 변수 사용\n\n```json\n{\n  \"templating\": {\n    \"list\": [\n      {\n        \"name\": \"instance\",\n        \"type\": \"query\",\n        \"datasource\": \"Prometheus\",\n        \"query\": \"label_values(node_cpu_seconds_total, instance)\",\n        \"multi\": true,\n        \"includeAll\": true\n      },\n      {\n        \"name\": \"interval\",\n        \"type\": \"interval\",\n        \"options\": [\n          {\"text\": \"1m\", \"value\": \"1m\"},\n          {\"text\": \"5m\", \"value\": \"5m\"},\n          {\"text\": \"10m\", \"value\": \"10m\"},\n          {\"text\": \"30m\", \"value\": \"30m\"},\n          {\"text\": \"1h\", \"value\": \"1h\"}\n        ],\n        \"current\": {\n          \"text\": \"5m\",\n          \"value\": \"5m\"\n        }\n      }\n    ]\n  }\n}\n```\n\n## 대시보드 패널 타입\n\n### Graph (시계열)\n```json\n{\n  \"type\": \"graph\",\n  \"title\": \"시계열 그래프\",\n  \"targets\": [\n    {\n      \"expr\": \"rate(http_requests_total[5m])\"\n    }\n  ]\n}\n```\n\n### Stat (단일 값)\n```json\n{\n  \"type\": \"stat\",\n  \"title\": \"현재 값\",\n  \"targets\": [\n    {\n      \"expr\": \"sum(up)\"\n    }\n  ],\n  \"options\": {\n    \"colorMode\": \"value\",\n    \"graphMode\": \"none\"\n  }\n}\n```\n\n### Gauge (게이지)\n```json\n{\n  \"type\": \"gauge\",\n  \"title\": \"CPU 사용률\",\n  \"targets\": [\n    {\n      \"expr\": \"avg(node_cpu_usage)\"\n    }\n  ],\n  \"options\": {\n    \"showThresholdMarkers\": true\n  },\n  \"fieldConfig\": {\n    \"defaults\": {\n      \"thresholds\": {\n        \"steps\": [\n          {\"value\": 0, \"color\": \"green\"},\n          {\"value\": 60, \"color\": \"yellow\"},\n          {\"value\": 80, \"color\": \"red\"}\n        ]\n      }\n    }\n  }\n}\n```\n\n### Table (테이블)\n```json\n{\n  \"type\": \"table\",\n  \"title\": \"인스턴스 상태\",\n  \"targets\": [\n    {\n      \"expr\": \"up\",\n      \"format\": \"table\"\n    }\n  ]\n}\n```\n\n## Loki를 사용한 로그 조회\n\n```promql\n# 특정 레이블의 로그\n{job=\"myapp\"} |= \"error\"\n\n# JSON 파싱\n{job=\"myapp\"} | json | level=\"error\"\n\n# 로그 속도\nrate({job=\"myapp\"}[5m])\n\n# 에러 로그 카운트\nsum by (level) (count_over_time({job=\"myapp\"} |= \"error\" [5m]))\n```\n\n## Kubernetes 모니터링 대시보드\n\n```yaml\n# Prometheus + Grafana로 K8s 모니터링\n- Pod CPU/Memory 사용량\n- Node 리소스 사용량\n- Deployment 상태\n- PersistentVolume 사용량\n- Ingress 트래픽\n- 컨테이너 재시작 횟수\n```\n\n## 언제 사용하나요?\n\n- 시스템 메트릭 시각화\n- 애플리케이션 성능 모니터링\n- 비즈니스 메트릭 대시보드\n- 로그 분석\n- 실시간 알림\n\n## 추가 자료\n\n- [공식 문서](https://grafana.com/docs/)\n- [대시보드 갤러리](https://grafana.com/grafana/dashboards/)","src/content/docs/app/devops/grafana.mdx","7a989f956db42f94","app/devops/aws",{"id":334,"data":336,"body":342,"filePath":343,"digest":344,"deferredRender":16},{"title":337,"description":338,"editUrl":16,"head":339,"template":18,"sidebar":340,"pagefind":16,"draft":20,"type":22},"AWS (Amazon Web Services)","클라우드 컴퓨팅 플랫폼",[],{"hidden":20,"attrs":341},{},"AWS는 아마존이 제공하는 클라우드 컴퓨팅 플랫폼으로 200개 이상의 서비스를 제공합니다.\n\n## 주요 서비스\n\n### 컴퓨팅\n- **EC2**: 가상 서버\n- **Lambda**: 서버리스 함수\n- **ECS/EKS**: 컨테이너 오케스트레이션\n- **Elastic Beanstalk**: 애플리케이션 배포\n\n### 스토리지\n- **S3**: 객체 스토리지\n- **EBS**: 블록 스토리지\n- **EFS**: 파일 스토리지\n- **Glacier**: 아카이브 스토리지\n\n### 데이터베이스\n- **RDS**: 관계형 데이터베이스\n- **DynamoDB**: NoSQL 데이터베이스\n- **ElastiCache**: 인메모리 캐시\n- **Aurora**: 고성능 데이터베이스\n\n## AWS CLI 설치\n\n```bash\n# macOS\nbrew install awscli\n\n# Linux\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install\n\n# 설정\naws configure\n```\n\n## EC2 인스턴스 생성\n\n```bash\n# 인스턴스 시작\naws ec2 run-instances \\\n  --image-id ami-0c55b159cbfafe1f0 \\\n  --instance-type t3.micro \\\n  --key-name my-key-pair \\\n  --security-group-ids sg-12345678 \\\n  --subnet-id subnet-12345678 \\\n  --count 1\n\n# 인스턴스 목록\naws ec2 describe-instances\n\n# 인스턴스 중지\naws ec2 stop-instances --instance-ids i-1234567890abcdef0\n\n# 인스턴스 종료\naws ec2 terminate-instances --instance-ids i-1234567890abcdef0\n```\n\n## S3 버킷 관리\n\n```bash\n# 버킷 생성\naws s3 mb s3://my-bucket\n\n# 파일 업로드\naws s3 cp file.txt s3://my-bucket/\n\n# 파일 다운로드\naws s3 cp s3://my-bucket/file.txt ./\n\n# 버킷 동기화\naws s3 sync ./local-folder s3://my-bucket/\n\n# 버킷 삭제\naws s3 rb s3://my-bucket --force\n```\n\n## Lambda 함수\n\n```javascript\n// index.js\nexports.handler = async (event) => {\n    console.log('Event:', JSON.stringify(event, null, 2));\n    \n    const response = {\n        statusCode: 200,\n        body: JSON.stringify({\n            message: '안녕하세요, Lambda!',\n            input: event\n        })\n    };\n    \n    return response;\n};\n```\n\n```bash\n# 함수 배포\nzip function.zip index.js\n\naws lambda create-function \\\n  --function-name my-function \\\n  --runtime nodejs18.x \\\n  --role arn:aws:iam::123456789012:role/lambda-role \\\n  --handler index.handler \\\n  --zip-file fileb://function.zip\n\n# 함수 호출\naws lambda invoke \\\n  --function-name my-function \\\n  --payload '{\"key\": \"value\"}' \\\n  response.json\n```\n\n## CloudFormation 템플릿\n\n```yaml\n# template.yaml\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'Web Application Stack'\n\nParameters:\n  InstanceType:\n    Type: String\n    Default: t3.micro\n    AllowedValues:\n      - t3.micro\n      - t3.small\n      - t3.medium\n\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: 10.0.0.0/16\n      EnableDnsHostnames: true\n      EnableDnsSupport: true\n      Tags:\n        - Key: Name\n          Value: MyVPC\n\n  InternetGateway:\n    Type: AWS::EC2::InternetGateway\n\n  AttachGateway:\n    Type: AWS::EC2::VPCGatewayAttachment\n    Properties:\n      VpcId: !Ref VPC\n      InternetGatewayId: !Ref InternetGateway\n\n  PublicSubnet:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      CidrBlock: 10.0.1.0/24\n      AvailabilityZone: !Select [0, !GetAZs '']\n      MapPublicIpOnLaunch: true\n\n  WebServer:\n    Type: AWS::EC2::Instance\n    Properties:\n      ImageId: ami-0c55b159cbfafe1f0\n      InstanceType: !Ref InstanceType\n      SubnetId: !Ref PublicSubnet\n      SecurityGroupIds:\n        - !Ref WebServerSecurityGroup\n      UserData:\n        Fn::Base64: |\n          #!/bin/bash\n          yum update -y\n          yum install -y httpd\n          systemctl start httpd\n          systemctl enable httpd\n\n  WebServerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Allow HTTP and SSH\n      VpcId: !Ref VPC\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          CidrIp: 0.0.0.0/0\n        - IpProtocol: tcp\n          FromPort: 22\n          ToPort: 22\n          CidrIp: 0.0.0.0/0\n\nOutputs:\n  WebServerPublicIP:\n    Description: Public IP of the web server\n    Value: !GetAtt WebServer.PublicIp\n```\n\n```bash\n# 스택 생성\naws cloudformation create-stack \\\n  --stack-name my-stack \\\n  --template-body file://template.yaml \\\n  --parameters ParameterKey=InstanceType,ParameterValue=t3.small\n\n# 스택 업데이트\naws cloudformation update-stack \\\n  --stack-name my-stack \\\n  --template-body file://template.yaml\n\n# 스택 삭제\naws cloudformation delete-stack --stack-name my-stack\n```\n\n## RDS 데이터베이스\n\n```bash\n# RDS 인스턴스 생성\naws rds create-db-instance \\\n  --db-instance-identifier mydb \\\n  --db-instance-class db.t3.micro \\\n  --engine postgres \\\n  --master-username admin \\\n  --master-user-password mypassword \\\n  --allocated-storage 20\n\n# 스냅샷 생성\naws rds create-db-snapshot \\\n  --db-snapshot-identifier mydb-snapshot \\\n  --db-instance-identifier mydb\n\n# 스냅샷에서 복원\naws rds restore-db-instance-from-db-snapshot \\\n  --db-instance-identifier mydb-restored \\\n  --db-snapshot-identifier mydb-snapshot\n```\n\n## ECS (Fargate)\n\n```json\n// task-definition.json\n{\n  \"family\": \"myapp\",\n  \"networkMode\": \"awsvpc\",\n  \"requiresCompatibilities\": [\"FARGATE\"],\n  \"cpu\": \"256\",\n  \"memory\": \"512\",\n  \"containerDefinitions\": [\n    {\n      \"name\": \"myapp\",\n      \"image\": \"myapp:latest\",\n      \"portMappings\": [\n        {\n          \"containerPort\": 3000,\n          \"protocol\": \"tcp\"\n        }\n      ],\n      \"environment\": [\n        {\n          \"name\": \"NODE_ENV\",\n          \"value\": \"production\"\n        }\n      ],\n      \"logConfiguration\": {\n        \"logDriver\": \"awslogs\",\n        \"options\": {\n          \"awslogs-group\": \"/ecs/myapp\",\n          \"awslogs-region\": \"ap-northeast-2\",\n          \"awslogs-stream-prefix\": \"ecs\"\n        }\n      }\n    }\n  ]\n}\n```\n\n## IAM 정책\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:GetObject\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": \"arn:aws:s3:::my-bucket/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:GetItem\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:Query\"\n      ],\n      \"Resource\": \"arn:aws:dynamodb:ap-northeast-2:123456789012:table/MyTable\"\n    }\n  ]\n}\n```\n\n## AWS SDK (Node.js)\n\n```javascript\nconst AWS = require('aws-sdk');\n\n// S3\nconst s3 = new AWS.S3();\n\nasync function uploadFile() {\n  const params = {\n    Bucket: 'my-bucket',\n    Key: 'file.txt',\n    Body: 'Hello, S3!'\n  };\n  \n  await s3.putObject(params).promise();\n}\n\n// DynamoDB\nconst dynamodb = new AWS.DynamoDB.DocumentClient();\n\nasync function getItem() {\n  const params = {\n    TableName: 'MyTable',\n    Key: {\n      id: '123'\n    }\n  };\n  \n  const result = await dynamodb.get(params).promise();\n  return result.Item;\n}\n\n// SQS\nconst sqs = new AWS.SQS();\n\nasync function sendMessage() {\n  const params = {\n    QueueUrl: 'https://sqs.ap-northeast-2.amazonaws.com/123456789012/MyQueue',\n    MessageBody: JSON.stringify({ message: 'Hello' })\n  };\n  \n  await sqs.sendMessage(params).promise();\n}\n```\n\n## 비용 최적화\n\n```bash\n# 사용하지 않는 리소스 찾기\naws ec2 describe-volumes --filters Name=status,Values=available\n\n# 스냅샷 정리\naws ec2 describe-snapshots --owner-ids self\n\n# 리저브드 인스턴스 구매\naws ec2 purchase-reserved-instances-offering \\\n  --reserved-instances-offering-id xyz \\\n  --instance-count 1\n```\n\n## 언제 사용하나요?\n\n- 클라우드 인프라 구축\n- 서버리스 애플리케이션\n- 대규모 데이터 처리\n- 글로벌 서비스 배포\n- 엔터프라이즈 애플리케이션\n\n## 추가 자료\n\n- [공식 문서](https://docs.aws.amazon.com)\n- [AWS Free Tier](https://aws.amazon.com/free/)","src/content/docs/app/devops/aws.mdx","11b1a4c2dccd09fa","app/devops/azure",{"id":345,"data":347,"body":353,"filePath":354,"digest":355,"deferredRender":16},{"title":348,"description":349,"editUrl":16,"head":350,"template":18,"sidebar":351,"pagefind":16,"draft":20,"type":22},"Azure","Microsoft 클라우드 컴퓨팅 플랫폼",[],{"hidden":20,"attrs":352},{},"Azure는 Microsoft가 제공하는 클라우드 컴퓨팅 플랫폼으로 200개 이상의 서비스를 제공합니다.\n\n## 주요 서비스\n\n### 컴퓨팅\n- **Virtual Machines**: 가상 머신\n- **App Service**: 웹 앱 호스팅\n- **Functions**: 서버리스 함수\n- **AKS**: Kubernetes 서비스\n\n### 스토리지\n- **Blob Storage**: 객체 스토리지\n- **File Storage**: 파일 공유\n- **Queue Storage**: 메시지 큐\n- **Table Storage**: NoSQL 스토리지\n\n### 데이터베이스\n- **SQL Database**: 관계형 데이터베이스\n- **Cosmos DB**: 글로벌 분산 데이터베이스\n- **MySQL/PostgreSQL**: 오픈소스 데이터베이스\n- **Redis Cache**: 인메모리 캐시\n\n## Azure CLI 설치\n\n```bash\n# macOS\nbrew install azure-cli\n\n# Ubuntu\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n\n# 로그인\naz login\n\n# 구독 설정\naz account set --subscription \"My Subscription\"\n```\n\n## Virtual Machine 생성\n\n```bash\n# 리소스 그룹 생성\naz group create --name myResourceGroup --location eastus\n\n# VM 생성\naz vm create \\\n  --resource-group myResourceGroup \\\n  --name myVM \\\n  --image UbuntuLTS \\\n  --size Standard_B2s \\\n  --admin-username azureuser \\\n  --generate-ssh-keys\n\n# VM 시작\naz vm start --resource-group myResourceGroup --name myVM\n\n# VM 중지\naz vm stop --resource-group myResourceGroup --name myVM\n\n# VM 삭제\naz vm delete --resource-group myResourceGroup --name myVM\n```\n\n## Blob Storage\n\n```bash\n# 스토리지 계정 생성\naz storage account create \\\n  --name mystorageaccount \\\n  --resource-group myResourceGroup \\\n  --location eastus \\\n  --sku Standard_LRS\n\n# 컨테이너 생성\naz storage container create \\\n  --name mycontainer \\\n  --account-name mystorageaccount\n\n# 파일 업로드\naz storage blob upload \\\n  --container-name mycontainer \\\n  --name myblob \\\n  --file ./localfile.txt \\\n  --account-name mystorageaccount\n\n# 파일 다운로드\naz storage blob download \\\n  --container-name mycontainer \\\n  --name myblob \\\n  --file ./downloaded.txt \\\n  --account-name mystorageaccount\n```\n\n## Azure Functions\n\n```javascript\n// index.js\nmodule.exports = async function (context, req) {\n    context.log('JavaScript HTTP trigger function processed a request.');\n\n    const name = (req.query.name || (req.body && req.body.name));\n    const responseMessage = name\n        ? `안녕하세요, ${name}님!`\n        : \"이름을 입력해주세요.\";\n\n    context.res = {\n        status: 200,\n        body: responseMessage\n    };\n}\n```\n\n```json\n// function.json\n{\n  \"bindings\": [\n    {\n      \"authLevel\": \"anonymous\",\n      \"type\": \"httpTrigger\",\n      \"direction\": \"in\",\n      \"name\": \"req\",\n      \"methods\": [\"get\", \"post\"]\n    },\n    {\n      \"type\": \"http\",\n      \"direction\": \"out\",\n      \"name\": \"res\"\n    }\n  ]\n}\n```\n\n```bash\n# Function App 생성\naz functionapp create \\\n  --resource-group myResourceGroup \\\n  --name myfunctionapp \\\n  --storage-account mystorageaccount \\\n  --runtime node \\\n  --runtime-version 18 \\\n  --functions-version 4\n\n# 배포\nfunc azure functionapp publish myfunctionapp\n```\n\n## ARM 템플릿\n\n```json\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"vmName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"myVM\"\n    },\n    \"adminUsername\": {\n      \"type\": \"string\"\n    },\n    \"adminPassword\": {\n      \"type\": \"securestring\"\n    }\n  },\n  \"variables\": {\n    \"nicName\": \"[concat(parameters('vmName'), '-nic')]\",\n    \"vnetName\": \"myVNet\",\n    \"subnetName\": \"mySubnet\"\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Network/virtualNetworks\",\n      \"apiVersion\": \"2021-02-01\",\n      \"name\": \"[variables('vnetName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"properties\": {\n        \"addressSpace\": {\n          \"addressPrefixes\": [\"10.0.0.0/16\"]\n        },\n        \"subnets\": [\n          {\n            \"name\": \"[variables('subnetName')]\",\n            \"properties\": {\n              \"addressPrefix\": \"10.0.0.0/24\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"type\": \"Microsoft.Compute/virtualMachines\",\n      \"apiVersion\": \"2021-03-01\",\n      \"name\": \"[parameters('vmName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]\"\n      ],\n      \"properties\": {\n        \"hardwareProfile\": {\n          \"vmSize\": \"Standard_B2s\"\n        },\n        \"osProfile\": {\n          \"computerName\": \"[parameters('vmName')]\",\n          \"adminUsername\": \"[parameters('adminUsername')]\",\n          \"adminPassword\": \"[parameters('adminPassword')]\"\n        },\n        \"storageProfile\": {\n          \"imageReference\": {\n            \"publisher\": \"Canonical\",\n            \"offer\": \"UbuntuServer\",\n            \"sku\": \"18.04-LTS\",\n            \"version\": \"latest\"\n          }\n        }\n      }\n    }\n  ]\n}\n```\n\n```bash\n# 템플릿 배포\naz deployment group create \\\n  --resource-group myResourceGroup \\\n  --template-file template.json \\\n  --parameters vmName=myVM adminUsername=azureuser adminPassword=Password123!\n```\n\n## AKS (Azure Kubernetes Service)\n\n```bash\n# AKS 클러스터 생성\naz aks create \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --node-count 3 \\\n  --enable-addons monitoring \\\n  --generate-ssh-keys\n\n# 자격 증명 가져오기\naz aks get-credentials \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster\n\n# 클러스터 확인\nkubectl get nodes\n\n# 클러스터 스케일링\naz aks scale \\\n  --resource-group myResourceGroup \\\n  --name myAKSCluster \\\n  --node-count 5\n```\n\n## Azure SQL Database\n\n```bash\n# SQL Server 생성\naz sql server create \\\n  --name myserver \\\n  --resource-group myResourceGroup \\\n  --location eastus \\\n  --admin-user myadmin \\\n  --admin-password Password123!\n\n# 데이터베이스 생성\naz sql db create \\\n  --resource-group myResourceGroup \\\n  --server myserver \\\n  --name mydb \\\n  --service-objective S0\n\n# 방화벽 규칙 추가\naz sql server firewall-rule create \\\n  --resource-group myResourceGroup \\\n  --server myserver \\\n  --name AllowMyIP \\\n  --start-ip-address 1.2.3.4 \\\n  --end-ip-address 1.2.3.4\n```\n\n## Azure DevOps Pipeline\n\n```yaml\n# azure-pipelines.yml\ntrigger:\n  - main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nvariables:\n  dockerRegistryServiceConnection: 'myDockerRegistry'\n  imageRepository: 'myapp'\n  containerRegistry: 'myregistry.azurecr.io'\n  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'\n  tag: '$(Build.BuildId)'\n\nstages:\n  - stage: Build\n    displayName: Build and push stage\n    jobs:\n      - job: Build\n        displayName: Build\n        steps:\n          - task: Docker@2\n            displayName: Build and push an image\n            inputs:\n              command: buildAndPush\n              repository: $(imageRepository)\n              dockerfile: $(dockerfilePath)\n              containerRegistry: $(dockerRegistryServiceConnection)\n              tags: |\n                $(tag)\n                latest\n\n  - stage: Deploy\n    displayName: Deploy stage\n    dependsOn: Build\n    jobs:\n      - deployment: Deploy\n        displayName: Deploy to AKS\n        environment: 'production'\n        strategy:\n          runOnce:\n            deploy:\n              steps:\n                - task: KubernetesManifest@0\n                  displayName: Deploy to Kubernetes\n                  inputs:\n                    action: deploy\n                    manifests: |\n                      $(Pipeline.Workspace)/manifests/deployment.yml\n                      $(Pipeline.Workspace)/manifests/service.yml\n```\n\n## Azure SDK (Node.js)\n\n```javascript\nconst { BlobServiceClient } = require('@azure/storage-blob');\nconst { CosmosClient } = require('@azure/cosmos');\n\n// Blob Storage\nconst connectionString = process.env.AZURE_STORAGE_CONNECTION_STRING;\nconst blobServiceClient = BlobServiceClient.fromConnectionString(connectionString);\n\nasync function uploadBlob() {\n  const containerClient = blobServiceClient.getContainerClient('mycontainer');\n  const blockBlobClient = containerClient.getBlockBlobClient('myblob.txt');\n  \n  await blockBlobClient.upload('Hello, Azure!', 13);\n}\n\n// Cosmos DB\nconst cosmosClient = new CosmosClient({\n  endpoint: process.env.COSMOS_ENDPOINT,\n  key: process.env.COSMOS_KEY\n});\n\nasync function createItem() {\n  const database = cosmosClient.database('mydb');\n  const container = database.container('mycontainer');\n  \n  const item = {\n    id: '1',\n    name: 'Item 1',\n    category: 'Category A'\n  };\n  \n  await container.items.create(item);\n}\n```\n\n## 모니터링 (Application Insights)\n\n```javascript\nconst appInsights = require('applicationinsights');\n\nappInsights.setup(process.env.APPLICATIONINSIGHTS_CONNECTION_STRING)\n  .setAutoDependencyCorrelation(true)\n  .setAutoCollectRequests(true)\n  .setAutoCollectPerformance(true)\n  .setAutoCollectExceptions(true)\n  .setAutoCollectDependencies(true)\n  .setAutoCollectConsole(true)\n  .setUseDiskRetryCaching(true)\n  .start();\n\nconst client = appInsights.defaultClient;\n\n// 커스텀 이벤트\nclient.trackEvent({ name: 'UserLogin', properties: { userId: '123' } });\n\n// 커스텀 메트릭\nclient.trackMetric({ name: 'ResponseTime', value: 150 });\n\n// 예외 추적\ntry {\n  // 코드\n} catch (error) {\n  client.trackException({ exception: error });\n}\n```\n\n## 비용 관리\n\n```bash\n# 비용 분석\naz consumption usage list --start-date 2024-01-01 --end-date 2024-01-31\n\n# 예산 생성\naz consumption budget create \\\n  --amount 1000 \\\n  --budget-name myBudget \\\n  --category Cost \\\n  --time-grain Monthly\n\n# 리소스 태그\naz resource tag \\\n  --tags Environment=Production CostCenter=IT \\\n  --resource-group myResourceGroup\n```\n\n## 언제 사용하나요?\n\n- Microsoft 기술 스택 사용 시\n- 하이브리드 클라우드\n- 엔터프라이즈 애플리케이션\n- AI/ML 서비스\n- Windows 워크로드\n\n## 추가 자료\n\n- [공식 문서](https://docs.microsoft.com/azure)\n- [Azure Free Account](https://azure.microsoft.com/free/)","src/content/docs/app/devops/azure.mdx","14014561a6f046cf","app/ai/tensorflow",{"id":356,"data":358,"body":364,"filePath":365,"digest":366,"deferredRender":16},{"title":359,"description":360,"editUrl":16,"head":361,"template":18,"sidebar":362,"pagefind":16,"draft":20,"type":22},"TensorFlow","구글이 개발한 머신러닝 프레임워크",[],{"hidden":20,"attrs":363},{},"TensorFlow는 구글이 개발한 오픈소스 머신러닝 프레임워크로 딥러닝 모델을 쉽게 구축하고 배포할 수 있습니다.\n\n## 주요 특징\n\n- **Keras API**: 고수준 API로 빠른 개발\n- **분산 학습**: 여러 GPU/TPU에서 학습\n- **TensorFlow Lite**: 모바일/IoT 배포\n- **TensorFlow.js**: 브라우저에서 실행\n- **프로덕션 준비**: TensorFlow Serving\n\n## 설치하기\n\n```bash\n# CPU 버전\npip install tensorflow\n\n# GPU 버전\npip install tensorflow[and-cuda]\n\n# 버전 확인\npython -c \"import tensorflow as tf; print(tf.__version__)\"\n```\n\n## 기본 예제\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\n# 간단한 선형 회귀\nX = np.array([1, 2, 3, 4, 5], dtype=float)\ny = np.array([2, 4, 6, 8, 10], dtype=float)\n\n# 모델 정의\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Dense(1, input_shape=[1])\n])\n\n# 컴파일\nmodel.compile(optimizer='sgd', loss='mean_squared_error')\n\n# 학습\nmodel.fit(X, y, epochs=500, verbose=0)\n\n# 예측\nprint(model.predict([6.0]))  # 약 12가 출력됨\n```\n\n## 신경망 모델\n\n```python\n# MNIST 손글씨 분류\nmnist = tf.keras.datasets.mnist\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\n\n# 정규화\nx_train, x_test = x_train / 255.0, x_test / 255.0\n\n# 모델 구축\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Flatten(input_shape=(28, 28)),\n    tf.keras.layers.Dense(128, activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(10, activation='softmax')\n])\n\n# 컴파일\nmodel.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n)\n\n# 학습\nmodel.fit(x_train, y_train, epochs=5, validation_split=0.2)\n\n# 평가\ntest_loss, test_acc = model.evaluate(x_test, y_test)\nprint(f'Test accuracy: {test_acc}')\n```\n\n## CNN (Convolutional Neural Network)\n\n```python\n# 이미지 분류 모델\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),\n    tf.keras.layers.MaxPooling2D((2, 2)),\n    tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),\n    tf.keras.layers.MaxPooling2D((2, 2)),\n    tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(10, activation='softmax')\n])\n\nmodel.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n)\n```\n\n## 언제 사용하나요?\n\n- 딥러닝 모델 개발\n- 컴퓨터 비전\n- 자연어 처리\n- 음성 인식\n- 프로덕션 배포\n\n## 추가 자료\n\n- [공식 문서](https://www.tensorflow.org)\n- [TensorFlow Hub](https://www.tensorflow.org/hub)","src/content/docs/app/ai/tensorflow.mdx","74b35476f60bc676","app/ai/pytorch",{"id":367,"data":369,"body":375,"filePath":376,"digest":377,"deferredRender":16},{"title":370,"description":371,"editUrl":16,"head":372,"template":18,"sidebar":373,"pagefind":16,"draft":20,"type":22},"PyTorch","Facebook이 개발한 딥러닝 프레임워크",[],{"hidden":20,"attrs":374},{},"PyTorch는 연구와 프로덕션 환경 모두에 적합한 딥러닝 프레임워크입니다.\n\n## 주요 특징\n\n- **동적 계산 그래프**: 유연한 모델 구성\n- **직관적인 API**: Python스러운 코드\n- **강력한 GPU 지원**: CUDA 통합\n- **자동 미분**: Autograd 시스템\n- **활발한 커뮤니티**: 연구에 많이 사용\n\n## 설치하기\n\n```bash\n# CPU 버전\npip install torch torchvision torchaudio\n\n# CUDA 버전 (예: CUDA 11.8)\npip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n```\n\n## 기본 텐서 연산\n\n```python\nimport torch\n\n# 텐서 생성\nx = torch.tensor([[1, 2], [3, 4]])\ny = torch.rand(2, 2)\n\n# 연산\nz = x + y\nprint(z)\n\n# GPU로 이동\nif torch.cuda.is_available():\n    x = x.cuda()\n    y = y.cuda()\n```\n\n## 신경망 구축\n\n```python\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\n\n# 모델 정의\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = nn.Linear(784, 128)\n        self.fc2 = nn.Linear(128, 64)\n        self.fc3 = nn.Linear(64, 10)\n        self.relu = nn.ReLU()\n        self.dropout = nn.Dropout(0.2)\n    \n    def forward(self, x):\n        x = x.view(-1, 784)\n        x = self.relu(self.fc1(x))\n        x = self.dropout(x)\n        x = self.relu(self.fc2(x))\n        x = self.fc3(x)\n        return x\n\nmodel = Net()\n```\n\n## 훈련 루프\n\n```python\n# 손실 함수와 옵티마이저\ncriterion = nn.CrossEntropyLoss()\noptimizer = optim.Adam(model.parameters(), lr=0.001)\n\n# 훈련\nfor epoch in range(10):\n    for data, target in train_loader:\n        # Forward pass\n        output = model(data)\n        loss = criterion(output, target)\n        \n        # Backward pass\n        optimizer.zero_grad()\n        loss.backward()\n        optimizer.step()\n    \n    print(f'Epoch {epoch+1}, Loss: {loss.item():.4f}')\n```\n\n## 언제 사용하나요?\n\n- 딥러닝 연구\n- 컴퓨터 비전\n- NLP 모델\n- 강화학습\n- 프로토타입 개발\n\n## 추가 자료\n\n- [공식 문서](https://pytorch.org/docs/)\n- [PyTorch Tutorials](https://pytorch.org/tutorials/)","src/content/docs/app/ai/pytorch.mdx","cf1f703b0335952e","app/ai/langchain",{"id":378,"data":380,"body":386,"filePath":387,"digest":388,"deferredRender":16},{"title":381,"description":382,"editUrl":16,"head":383,"template":18,"sidebar":384,"pagefind":16,"draft":20,"type":22},"LangChain","LLM 애플리케이션 개발 프레임워크",[],{"hidden":20,"attrs":385},{},"LangChain은 대규모 언어 모델을 활용한 애플리케이션을 쉽게 개발할 수 있게 해주는 프레임워크입니다.\n\n## 주요 특징\n\n- **체인**: LLM 호출을 연결\n- **에이전트**: 자율적으로 작업 수행\n- **메모리**: 대화 컨텍스트 유지\n- **RAG**: 문서 기반 질의응답\n- **다양한 통합**: OpenAI, Anthropic 등\n\n## 설치하기\n\n```bash\npip install langchain langchain-openai langchain-community\n```\n\n## 기본 사용법\n\n```python\nfrom langchain_openai import ChatOpenAI\nfrom langchain.prompts import ChatPromptTemplate\n\n# LLM 초기화\nllm = ChatOpenAI(model=\"gpt-4\", temperature=0)\n\n# 프롬프트 템플릿\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"당신은 친절한 AI 어시스턴트입니다.\"),\n    (\"human\", \"{input}\")\n])\n\n# 체인 생성\nchain = prompt | llm\n\n# 실행\nresponse = chain.invoke({\"input\": \"안녕하세요!\"})\nprint(response.content)\n```\n\n## RAG (문서 기반 QA)\n\n```python\nfrom langchain.document_loaders import TextLoader\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.vectorstores import FAISS\nfrom langchain.chains import RetrievalQA\n\n# 문서 로드\nloader = TextLoader(\"document.txt\")\ndocuments = loader.load()\n\n# 텍스트 분할\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=1000,\n    chunk_overlap=200\n)\ntexts = text_splitter.split_documents(documents)\n\n# 벡터 스토어 생성\nembeddings = OpenAIEmbeddings()\nvectorstore = FAISS.from_documents(texts, embeddings)\n\n# QA 체인\nqa_chain = RetrievalQA.from_chain_type(\n    llm=llm,\n    chain_type=\"stuff\",\n    retriever=vectorstore.as_retriever()\n)\n\n# 질문\nresult = qa_chain.invoke(\"문서에서 핵심 내용은 무엇인가요?\")\nprint(result['result'])\n```\n\n## 에이전트\n\n```python\nfrom langchain.agents import create_openai_tools_agent, AgentExecutor\nfrom langchain.tools import Tool\nfrom langchain import hub\n\n# 도구 정의\ndef calculator(expression: str) -> str:\n    try:\n        return str(eval(expression))\n    except:\n        return \"계산 오류\"\n\ntools = [\n    Tool(\n        name=\"Calculator\",\n        func=calculator,\n        description=\"수학 계산을 수행합니다. 입력은 Python 표현식이어야 합니다.\"\n    )\n]\n\n# 프롬프트\nprompt = hub.pull(\"hwchase17/openai-tools-agent\")\n\n# 에이전트 생성\nagent = create_openai_tools_agent(llm, tools, prompt)\nagent_executor = AgentExecutor(agent=agent, tools=tools)\n\n# 실행\nresult = agent_executor.invoke({\n    \"input\": \"25 곱하기 4는 얼마인가요?\"\n})\nprint(result['output'])\n```\n\n## 언제 사용하나요?\n\n- LLM 애플리케이션 개발\n- 챗봇 구축\n- 문서 질의응답 시스템\n- AI 에이전트\n- 자동화 워크플로우\n\n## 추가 자료\n\n- [공식 문서](https://python.langchain.com)\n- [LangChain Templates](https://github.com/langchain-ai/langchain/tree/master/templates)","src/content/docs/app/ai/langchain.mdx","d97e0842a43c643c","app/ai/openai",{"id":389,"data":391,"body":397,"filePath":398,"digest":399,"deferredRender":16},{"title":392,"description":393,"editUrl":16,"head":394,"template":18,"sidebar":395,"pagefind":16,"draft":20,"type":22},"OpenAI API","GPT와 DALL-E를 사용하기 위한 API",[],{"hidden":20,"attrs":396},{},"OpenAI API는 GPT, DALL-E 등 강력한 AI 모델에 접근할 수 있게 해주는 API입니다.\n\n## 주요 기능\n\n- **ChatGPT**: 대화형 AI\n- **GPT-4**: 고급 언어 모델\n- **DALL-E**: 이미지 생성\n- **Whisper**: 음성 인식\n- **Embeddings**: 텍스트 벡터화\n\n## 설치하기\n\n```bash\npip install openai\n```\n\n## 기본 채팅\n\n```python\nfrom openai import OpenAI\n\nclient = OpenAI(api_key=\"your-api-key\")\n\nresponse = client.chat.completions.create(\n    model=\"gpt-4\",\n    messages=[\n        {\"role\": \"system\", \"content\": \"당신은 유용한 AI 어시스턴트입니다.\"},\n        {\"role\": \"user\", \"content\": \"Python에서 리스트를 정렬하는 방법은?\"}\n    ]\n)\n\nprint(response.choices[0].message.content)\n```\n\n## 스트리밍\n\n```python\nstream = client.chat.completions.create(\n    model=\"gpt-4\",\n    messages=[{\"role\": \"user\", \"content\": \"긴 이야기를 들려주세요\"}],\n    stream=True\n)\n\nfor chunk in stream:\n    if chunk.choices[0].delta.content is not None:\n        print(chunk.choices[0].delta.content, end=\"\")\n```\n\n## 함수 호출\n\n```python\nfunctions = [\n    {\n        \"name\": \"get_weather\",\n        \"description\": \"특정 위치의 날씨를 가져옵니다\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"도시 이름\"\n                },\n                \"unit\": {\n                    \"type\": \"string\",\n                    \"enum\": [\"celsius\", \"fahrenheit\"]\n                }\n            },\n            \"required\": [\"location\"]\n        }\n    }\n]\n\nresponse = client.chat.completions.create(\n    model=\"gpt-4\",\n    messages=[{\"role\": \"user\", \"content\": \"서울의 날씨는 어때?\"}],\n    functions=functions,\n    function_call=\"auto\"\n)\n```\n\n## 이미지 생성 (DALL-E)\n\n```python\nresponse = client.images.generate(\n    model=\"dall-e-3\",\n    prompt=\"우주를 여행하는 고양이, 디지털 아트\",\n    size=\"1024x1024\",\n    quality=\"standard\",\n    n=1\n)\n\nimage_url = response.data[0].url\nprint(image_url)\n```\n\n## 언제 사용하나요?\n\n- 챗봇 개발\n- 콘텐츠 생성\n- 코드 어시스턴트\n- 이미지 생성\n- 텍스트 분석\n\n## 추가 자료\n\n- [공식 문서](https://platform.openai.com/docs)\n- [OpenAI Cookbook](https://github.com/openai/openai-cookbook)","src/content/docs/app/ai/openai.mdx","2dfe05798defdf54","app/ai/huggingface",{"id":400,"data":402,"body":408,"filePath":409,"digest":410,"deferredRender":16},{"title":403,"description":404,"editUrl":16,"head":405,"template":18,"sidebar":406,"pagefind":16,"draft":20,"type":22},"Hugging Face","오픈소스 AI 모델 허브",[],{"hidden":20,"attrs":407},{},"Hugging Face는 사전 학습된 AI 모델을 공유하고 사용할 수 있는 플랫폼입니다.\n\n## 주요 기능\n\n- **Transformers**: NLP 모델 라이브러리\n- **Datasets**: 대규모 데이터셋 라이브러리\n- **Hub**: 모델 공유 플랫폼\n- **Spaces**: 데모 호스팅\n- **AutoTrain**: 자동 모델 학습\n\n## 설치하기\n\n```bash\npip install transformers datasets\n```\n\n## 텍스트 생성\n\n```python\nfrom transformers import pipeline\n\n# 텍스트 생성 파이프라인\ngenerator = pipeline('text-generation', model='gpt2')\n\nresult = generator(\n    \"인공지능의 미래는\",\n    max_length=100,\n    num_return_sequences=1\n)\n\nprint(result[0]['generated_text'])\n```\n\n## 감정 분석\n\n```python\nclassifier = pipeline('sentiment-analysis')\n\nresult = classifier(\"이 제품 정말 마음에 들어요!\")\nprint(result)  # [{'label': 'POSITIVE', 'score': 0.9998}]\n```\n\n## 한국어 모델\n\n```python\n# KoBERT를 사용한 감정 분석\nfrom transformers import AutoTokenizer, AutoModelForSequenceClassification\nimport torch\n\ntokenizer = AutoTokenizer.from_pretrained(\"beomi/kcbert-base\")\nmodel = AutoModelForSequenceClassification.from_pretrained(\"beomi/kcbert-base\")\n\ntext = \"이 영화 정말 재미있어요!\"\ninputs = tokenizer(text, return_tensors=\"pt\")\noutputs = model(**inputs)\n```\n\n## 언제 사용하나요?\n\n- NLP 태스크\n- 이미지 분류\n- 음성 인식\n- 모델 파인튜닝\n- 빠른 프로토타입\n\n## 추가 자료\n\n- [공식 문서](https://huggingface.co/docs)\n- [모델 허브](https://huggingface.co/models)","src/content/docs/app/ai/huggingface.mdx","2e615cf338af08a5","app/ai/llamaindex",{"id":411,"data":413,"body":419,"filePath":420,"digest":421,"deferredRender":16},{"title":414,"description":415,"editUrl":16,"head":416,"template":18,"sidebar":417,"pagefind":16,"draft":20,"type":22},"LlamaIndex","LLM을 위한 데이터 프레임워크",[],{"hidden":20,"attrs":418},{},"LlamaIndex는 LLM 애플리케이션에 커스텀 데이터를 연결하기 위한 데이터 프레임워크입니다.\n\n## 주요 특징\n\n- **데이터 인덱싱**: 다양한 데이터 소스 연결\n- **쿼리 엔진**: 효율적인 검색\n- **에이전트**: 복잡한 워크플로우\n- **평가**: 응답 품질 평가\n- **프로덕션 준비**: 확장 가능한 아키텍처\n\n## 설치하기\n\n```bash\npip install llama-index\n```\n\n## 기본 사용법\n\n```python\nfrom llama_index.core import VectorStoreIndex, SimpleDirectoryReader\nimport os\n\n# API 키 설정\nos.environ[\"OPENAI_API_KEY\"] = \"your-key\"\n\n# 문서 로드\ndocuments = SimpleDirectoryReader(\"data\").load_data()\n\n# 인덱스 생성\nindex = VectorStoreIndex.from_documents(documents)\n\n# 쿼리\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(\"문서의 주요 내용은?\")\nprint(response)\n```\n\n## 언제 사용하나요?\n\n- 문서 기반 QA\n- 지식 베이스 구축\n- 데이터 검색\n- RAG 애플리케이션\n\n## 추가 자료\n\n- [공식 문서](https://docs.llamaindex.ai)","src/content/docs/app/ai/llamaindex.mdx","2ee0b4d8aa7a44c6","app/ai/pinecone",{"id":422,"data":424,"body":430,"filePath":431,"digest":432,"deferredRender":16},{"title":425,"description":426,"editUrl":16,"head":427,"template":18,"sidebar":428,"pagefind":16,"draft":20,"type":22},"Pinecone","벡터 데이터베이스",[],{"hidden":20,"attrs":429},{},"Pinecone은 머신러닝 애플리케이션을 위한 벡터 데이터베이스입니다.\n\n## 주요 특징\n\n- **빠른 검색**: 밀리초 단위 응답\n- **스케일링**: 수십억 개 벡터 지원\n- **관리형 서비스**: 인프라 관리 불필요\n- **메타데이터 필터링**: 복잡한 쿼리\n- **하이브리드 검색**: 벡터 + 키워드\n\n## 설치하기\n\n```bash\npip install pinecone-client\n```\n\n## 기본 사용법\n\n```python\nfrom pinecone import Pinecone\n\n# 초기화\npc = Pinecone(api_key=\"your-api-key\")\n\n# 인덱스 생성\nindex = pc.create_index(\n    name=\"my-index\",\n    dimension=1536,\n    metric=\"cosine\"\n)\n\n# 벡터 업서트\nindex.upsert(vectors=[\n    (\"id1\", [0.1, 0.2, ...], {\"text\": \"첫 번째 문서\"}),\n    (\"id2\", [0.3, 0.4, ...], {\"text\": \"두 번째 문서\"})\n])\n\n# 검색\nresults = index.query(\n    vector=[0.1, 0.2, ...],\n    top_k=5,\n    include_metadata=True\n)\n```\n\n## 언제 사용하나요?\n\n- 시맨틱 검색\n- 추천 시스템\n- RAG 애플리케이션\n- 유사도 검색\n\n## 추가 자료\n\n- [공식 문서](https://docs.pinecone.io)","src/content/docs/app/ai/pinecone.mdx","b7681af1e4185326","app/ai/weaviate",{"id":433,"data":435,"body":441,"filePath":442,"digest":443,"deferredRender":16},{"title":436,"description":437,"editUrl":16,"head":438,"template":18,"sidebar":439,"pagefind":16,"draft":20,"type":22},"Weaviate","오픈소스 벡터 데이터베이스",[],{"hidden":20,"attrs":440},{},"Weaviate는 벡터 검색 엔진과 객체 지향 데이터베이스를 결합한 오픈소스 플랫폼입니다.\n\n## 주요 특징\n\n- **오픈소스**: 자체 호스팅 가능\n- **GraphQL API**: 강력한 쿼리 언어\n- **모듈식**: 다양한 벡터라이저 지원\n- **하이브리드 검색**: 벡터 + BM25\n- **필터링**: 복잡한 쿼리 지원\n\n## 설치하기\n\n```bash\npip install weaviate-client\n```\n\n## 기본 사용법\n\n```python\nimport weaviate\n\n# 클라이언트 생성\nclient = weaviate.Client(\"http://localhost:8080\")\n\n# 스키마 생성\nschema = {\n    \"class\": \"Article\",\n    \"properties\": [\n        {\"name\": \"title\", \"dataType\": [\"text\"]},\n        {\"name\": \"content\", \"dataType\": [\"text\"]}\n    ]\n}\nclient.schema.create_class(schema)\n\n# 객체 추가\nclient.data_object.create({\n    \"title\": \"첫 번째 기사\",\n    \"content\": \"내용...\"\n}, \"Article\")\n\n# 검색\nresult = client.query.get(\"Article\", [\"title\", \"content\"]) \\\n    .with_near_text({\"concepts\": [\"AI\"]}) \\\n    .with_limit(5) \\\n    .do()\n```\n\n## 언제 사용하나요?\n\n- 시맨틱 검색\n- 지식 그래프\n- RAG 시스템\n- 추천 엔진\n\n## 추가 자료\n\n- [공식 문서](https://weaviate.io/developers/weaviate)","src/content/docs/app/ai/weaviate.mdx","7d3731268aa68971","app/ai/autogen",{"id":444,"data":446,"body":452,"filePath":453,"digest":454,"deferredRender":16},{"title":447,"description":448,"editUrl":16,"head":449,"template":18,"sidebar":450,"pagefind":16,"draft":20,"type":22},"AutoGen","Microsoft의 멀티 에이전트 프레임워크",[],{"hidden":20,"attrs":451},{},"AutoGen은 여러 AI 에이전트가 협력하여 복잡한 작업을 수행하는 프레임워크입니다.\n\n## 주요 특징\n\n- **멀티 에이전트**: 여러 에이전트 협업\n- **대화형**: 에이전트 간 자연스러운 대화\n- **코드 실행**: 안전한 코드 실행 환경\n- **사람 개입**: 필요시 사람이 참여\n- **유연성**: 다양한 LLM 지원\n\n## 설치하기\n\n```bash\npip install pyautogen\n```\n\n## 기본 사용법\n\n```python\nimport autogen\n\n# LLM 설정\nconfig_list = [{\n    \"model\": \"gpt-4\",\n    \"api_key\": \"your-key\"\n}]\n\n# 어시스턴트 에이전트\nassistant = autogen.AssistantAgent(\n    name=\"assistant\",\n    llm_config={\"config_list\": config_list}\n)\n\n# 사용자 프록시\nuser_proxy = autogen.UserProxyAgent(\n    name=\"user_proxy\",\n    human_input_mode=\"NEVER\",\n    code_execution_config={\"work_dir\": \"coding\"}\n)\n\n# 대화 시작\nuser_proxy.initiate_chat(\n    assistant,\n    message=\"피보나치 수열을 계산하는 Python 함수를 작성해주세요.\"\n)\n```\n\n## 언제 사용하나요?\n\n- 복잡한 문제 해결\n- 코드 생성 및 실행\n- 멀티 에이전트 시스템\n- 자동화 워크플로우\n\n## 추가 자료\n\n- [공식 문서](https://microsoft.github.io/autogen/)","src/content/docs/app/ai/autogen.mdx","207164e237055e41","app/ai/crewai",{"id":455,"data":457,"body":463,"filePath":464,"digest":465,"deferredRender":16},{"title":458,"description":459,"editUrl":16,"head":460,"template":18,"sidebar":461,"pagefind":16,"draft":20,"type":22},"CrewAI","AI 에이전트 협업 프레임워크",[],{"hidden":20,"attrs":462},{},"CrewAI는 역할 기반 AI 에이전트가 팀으로 협력하여 작업을 수행하는 프레임워크입니다.\n\n## 주요 특징\n\n- **역할 기반**: 각 에이전트에 특정 역할 부여\n- **작업 위임**: 에이전트 간 작업 위임\n- **유연한 프로세스**: 순차적 또는 계층적 실행\n- **도구 통합**: 다양한 도구 사용\n- **메모리**: 작업 컨텍스트 유지\n\n## 설치하기\n\n```bash\npip install crewai\n```\n\n## 기본 사용법\n\n```python\nfrom crewai import Agent, Task, Crew\nfrom langchain_openai import ChatOpenAI\n\n# LLM 설정\nllm = ChatOpenAI(model=\"gpt-4\")\n\n# 에이전트 정의\nresearcher = Agent(\n    role='Researcher',\n    goal='AI 트렌드를 조사합니다',\n    backstory='당신은 AI 전문 연구원입니다',\n    llm=llm\n)\n\nwriter = Agent(\n    role='Writer',\n    goal='조사 내용을 바탕으로 기사를 작성합니다',\n    backstory='당신은 기술 전문 작가입니다',\n    llm=llm\n)\n\n# 작업 정의\nresearch_task = Task(\n    description='최신 AI 트렌드를 조사하세요',\n    agent=researcher\n)\n\nwrite_task = Task(\n    description='조사 내용을 바탕으로 블로그 포스트를 작성하세요',\n    agent=writer\n)\n\n# 크루 생성 및 실행\ncrew = Crew(\n    agents=[researcher, writer],\n    tasks=[research_task, write_task],\n    verbose=True\n)\n\nresult = crew.kickoff()\nprint(result)\n```\n\n## 언제 사용하나요?\n\n- 콘텐츠 생성\n- 리서치 자동화\n- 복잡한 워크플로우\n- 팀 기반 문제 해결\n\n## 추가 자료\n\n- [공식 문서](https://docs.crewai.com)","src/content/docs/app/ai/crewai.mdx","5ccb42863fca22ed"]